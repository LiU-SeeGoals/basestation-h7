ARM GAS  /tmp/ccHNAuhv.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"system_stm32h7xx_dualcore_boot_cm4_cm7.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c"
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	1
  21              		.global	SystemInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB144:
   1:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
   2:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   ******************************************************************************
   3:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @file    system_stm32h7xx_dualcore_boot_cm4_cm7.c
   4:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @author  MCD Application Team
   5:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *          This provides system initialization template function is case of
   7:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *          an application using a dual core STM32H7 device where
   8:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *          Cortex-M7 and Cortex-M4 boot are enabled at the FLASH option bytes
   9:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  10:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *   This file provides two functions and one global variable to be called from
  11:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *   user application:
  12:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *      - SystemInit(): This function is called at startup just after reset and
  13:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                      before branch to main program. This call is made inside
  14:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                      the "startup_stm32h7xx.s" file.
  15:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  16:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  17:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                  by the user application to setup the SysTick
  18:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                  timer or configure other parameters.
  19:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  20:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  21:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                 be called whenever the core clock is changed
  22:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                 during program execution.
  23:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  24:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  25:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   ******************************************************************************
  26:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @attention
  27:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  28:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * Copyright (c) 2017 STMicroelectronics.
  29:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * All rights reserved.
  30:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  31:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * This software is licensed under terms that can be found in the LICENSE file
ARM GAS  /tmp/ccHNAuhv.s 			page 2


  32:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * in the root directory of this software component.
  33:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  34:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  35:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   ******************************************************************************
  36:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  37:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  38:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup CMSIS
  39:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  40:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  41:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  42:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup stm32h7xx_system
  43:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  44:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  45:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  46:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  47:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  48:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  49:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  50:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #include "stm32h7xx.h"
  51:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #include <math.h>
  52:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  53:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if !defined  (HSE_VALUE)
  54:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  55:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* HSE_VALUE */
  56:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  57:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if !defined  (CSI_VALUE)
  58:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  59:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CSI_VALUE */
  60:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  61:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if !defined  (HSI_VALUE)
  62:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  63:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* HSI_VALUE */
  64:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  65:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  66:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
  67:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
  68:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  69:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  70:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  71:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  72:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  73:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  74:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
  75:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
  76:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  77:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  78:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  79:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  80:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  81:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  82:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /************************* Miscellaneous Configuration ************************/
  83:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* Note: Following vector table addresses must be defined in line with linker
  84:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****          configuration. */
  85:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /*!< Uncomment the following line if you need to relocate the vector table
  86:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  87:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      remap of boot address selected */
  88:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* #define USER_VECT_TAB_ADDRESS */
ARM GAS  /tmp/ccHNAuhv.s 			page 3


  89:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  90:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(USER_VECT_TAB_ADDRESS)
  91:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM4)
  92:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  93:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  94:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* #define VECT_TAB_SRAM */
  95:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(VECT_TAB_SRAM)
  96:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  97:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
  98:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  99:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 100:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 101:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 102:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 103:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 105:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* VECT_TAB_SRAM */
 106:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #elif defined(CORE_CM7)
 107:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 108:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 109:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* #define VECT_TAB_SRAM */
 110:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(VECT_TAB_SRAM)
 111:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 112:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 113:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 114:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 115:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 116:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 117:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 118:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 120:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* VECT_TAB_SRAM */
 121:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 122:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #error Please #define CORE_CM4 or CORE_CM7
 123:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM4 */
 124:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* USER_VECT_TAB_ADDRESS */
 125:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /******************************************************************************/
 126:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 127:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 128:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 129:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 130:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 131:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 132:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 133:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 134:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 135:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 136:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 137:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 138:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 139:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 140:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 141:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 142:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* This variable is updated in three ways:
 143:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 144:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 145:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
ARM GAS  /tmp/ccHNAuhv.s 			page 4


 146:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****          Note: If you use this function to configure the system clock; then there
 147:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 148:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                variable is updated automatically.
 149:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 150:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t SystemCoreClock = 64000000;
 151:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t SystemD2Clock = 64000000;
 152:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 153:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 154:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 155:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 156:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 157:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 158:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 159:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 160:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 161:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 162:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 163:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 164:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 165:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 166:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 167:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 168:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 169:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 170:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 171:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @brief  Setup the microcontroller system
 172:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         Initialize the FPU setting and  vector table location
 173:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         configuration.
 174:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @param  None
 175:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @retval None
 176:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 177:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** void SystemInit (void)
 178:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** {
  28              		.loc 1 178 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 179:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* FPU settings ------------------------------------------------------------*/
 180:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 181:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 181 5 view .LVU1
  34              		.loc 1 181 8 is_stmt 0 view .LVU2
  35 0000 2D4B     		ldr	r3, .L5
  36 0002 D3F88820 		ldr	r2, [r3, #136]
  37              		.loc 1 181 16 view .LVU3
  38 0006 42F47002 		orr	r2, r2, #15728640
  39 000a C3F88820 		str	r2, [r3, #136]
 182:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #endif
 183:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 184:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
 185:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      detectable by the CPU after a WFI/WFE instruction.*/
 186:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****  SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
  40              		.loc 1 186 2 is_stmt 1 view .LVU4
  41              		.loc 1 186 5 is_stmt 0 view .LVU5
  42 000e 1A69     		ldr	r2, [r3, #16]
  43              		.loc 1 186 11 view .LVU6
ARM GAS  /tmp/ccHNAuhv.s 			page 5


  44 0010 42F01002 		orr	r2, r2, #16
  45 0014 1A61     		str	r2, [r3, #16]
 187:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 188:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM7)
 189:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 190:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    /* Increasing the CPU frequency */
 191:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  46              		.loc 1 191 3 is_stmt 1 view .LVU7
  47              		.loc 1 191 32 is_stmt 0 view .LVU8
  48 0016 294B     		ldr	r3, .L5+4
  49 0018 1B68     		ldr	r3, [r3]
  50 001a 03F00F03 		and	r3, r3, #15
  51              		.loc 1 191 5 view .LVU9
  52 001e 062B     		cmp	r3, #6
  53 0020 06D8     		bhi	.L2
 192:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 193:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 194:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  54              		.loc 1 194 5 is_stmt 1 view .LVU10
  55 0022 264A     		ldr	r2, .L5+4
  56 0024 1368     		ldr	r3, [r2]
  57 0026 23F00F03 		bic	r3, r3, #15
  58 002a 43F00703 		orr	r3, r3, #7
  59 002e 1360     		str	r3, [r2]
  60              	.L2:
 195:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 196:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 197:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Set HSION bit */
 198:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CR |= RCC_CR_HSION;
  61              		.loc 1 198 3 view .LVU11
  62              		.loc 1 198 6 is_stmt 0 view .LVU12
  63 0030 234B     		ldr	r3, .L5+8
  64 0032 1A68     		ldr	r2, [r3]
  65              		.loc 1 198 11 view .LVU13
  66 0034 42F00102 		orr	r2, r2, #1
  67 0038 1A60     		str	r2, [r3]
 199:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 200:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset CFGR register */
 201:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CFGR = 0x00000000;
  68              		.loc 1 201 3 is_stmt 1 view .LVU14
  69              		.loc 1 201 13 is_stmt 0 view .LVU15
  70 003a 0022     		movs	r2, #0
  71 003c 1A61     		str	r2, [r3, #16]
 202:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 203:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 204:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CR &= 0xEAF6ED7FU;
  72              		.loc 1 204 3 is_stmt 1 view .LVU16
  73              		.loc 1 204 6 is_stmt 0 view .LVU17
  74 003e 1968     		ldr	r1, [r3]
  75              		.loc 1 204 11 view .LVU18
  76 0040 204A     		ldr	r2, .L5+12
  77 0042 0A40     		ands	r2, r2, r1
  78 0044 1A60     		str	r2, [r3]
 205:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 206:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 207:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  79              		.loc 1 207 3 is_stmt 1 view .LVU19
ARM GAS  /tmp/ccHNAuhv.s 			page 6


  80              		.loc 1 207 32 is_stmt 0 view .LVU20
  81 0046 1D4B     		ldr	r3, .L5+4
  82 0048 1B68     		ldr	r3, [r3]
  83              		.loc 1 207 5 view .LVU21
  84 004a 13F0080F 		tst	r3, #8
  85 004e 06D0     		beq	.L3
 208:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 209:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 210:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  86              		.loc 1 210 5 is_stmt 1 view .LVU22
  87 0050 1A4A     		ldr	r2, .L5+4
  88 0052 1368     		ldr	r3, [r2]
  89 0054 23F00F03 		bic	r3, r3, #15
  90 0058 43F00703 		orr	r3, r3, #7
  91 005c 1360     		str	r3, [r2]
  92              	.L3:
 211:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 212:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 213:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset D1CFGR register */
 214:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->D1CFGR = 0x00000000;
  93              		.loc 1 214 3 view .LVU23
  94              		.loc 1 214 15 is_stmt 0 view .LVU24
  95 005e 184B     		ldr	r3, .L5+8
  96 0060 0022     		movs	r2, #0
  97 0062 9A61     		str	r2, [r3, #24]
 215:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 216:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset D2CFGR register */
 217:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->D2CFGR = 0x00000000;
  98              		.loc 1 217 3 is_stmt 1 view .LVU25
  99              		.loc 1 217 15 is_stmt 0 view .LVU26
 100 0064 DA61     		str	r2, [r3, #28]
 218:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 219:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset D3CFGR register */
 220:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->D3CFGR = 0x00000000;
 101              		.loc 1 220 3 is_stmt 1 view .LVU27
 102              		.loc 1 220 15 is_stmt 0 view .LVU28
 103 0066 1A62     		str	r2, [r3, #32]
 221:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 222:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLLCKSELR register */
 223:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLLCKSELR = 0x02020200;
 104              		.loc 1 223 3 is_stmt 1 view .LVU29
 105              		.loc 1 223 18 is_stmt 0 view .LVU30
 106 0068 1749     		ldr	r1, .L5+16
 107 006a 9962     		str	r1, [r3, #40]
 224:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 225:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLLCFGR register */
 226:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLLCFGR = 0x01FF0000;
 108              		.loc 1 226 3 is_stmt 1 view .LVU31
 109              		.loc 1 226 16 is_stmt 0 view .LVU32
 110 006c 1749     		ldr	r1, .L5+20
 111 006e D962     		str	r1, [r3, #44]
 227:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL1DIVR register */
 228:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL1DIVR = 0x01010280;
 112              		.loc 1 228 3 is_stmt 1 view .LVU33
 113              		.loc 1 228 17 is_stmt 0 view .LVU34
 114 0070 1749     		ldr	r1, .L5+24
 115 0072 1963     		str	r1, [r3, #48]
ARM GAS  /tmp/ccHNAuhv.s 			page 7


 229:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL1FRACR register */
 230:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL1FRACR = 0x00000000;
 116              		.loc 1 230 3 is_stmt 1 view .LVU35
 117              		.loc 1 230 18 is_stmt 0 view .LVU36
 118 0074 5A63     		str	r2, [r3, #52]
 231:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 232:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL2DIVR register */
 233:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL2DIVR = 0x01010280;
 119              		.loc 1 233 3 is_stmt 1 view .LVU37
 120              		.loc 1 233 17 is_stmt 0 view .LVU38
 121 0076 9963     		str	r1, [r3, #56]
 234:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 235:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL2FRACR register */
 236:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 237:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL2FRACR = 0x00000000;
 122              		.loc 1 237 3 is_stmt 1 view .LVU39
 123              		.loc 1 237 18 is_stmt 0 view .LVU40
 124 0078 DA63     		str	r2, [r3, #60]
 238:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL3DIVR register */
 239:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL3DIVR = 0x01010280;
 125              		.loc 1 239 3 is_stmt 1 view .LVU41
 126              		.loc 1 239 17 is_stmt 0 view .LVU42
 127 007a 1964     		str	r1, [r3, #64]
 240:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 241:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL3FRACR register */
 242:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL3FRACR = 0x00000000;
 128              		.loc 1 242 3 is_stmt 1 view .LVU43
 129              		.loc 1 242 18 is_stmt 0 view .LVU44
 130 007c 5A64     		str	r2, [r3, #68]
 243:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 244:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset HSEBYP bit */
 245:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CR &= 0xFFFBFFFFU;
 131              		.loc 1 245 3 is_stmt 1 view .LVU45
 132              		.loc 1 245 6 is_stmt 0 view .LVU46
 133 007e 1968     		ldr	r1, [r3]
 134              		.loc 1 245 11 view .LVU47
 135 0080 21F48021 		bic	r1, r1, #262144
 136 0084 1960     		str	r1, [r3]
 246:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 247:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Disable all interrupts */
 248:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CIER = 0x00000000;
 137              		.loc 1 248 3 is_stmt 1 view .LVU48
 138              		.loc 1 248 13 is_stmt 0 view .LVU49
 139 0086 1A66     		str	r2, [r3, #96]
 249:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 250:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Enable CortexM7 HSEM EXTI line (line 78)*/
 251:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   EXTI_D2->EMR3 |= 0x4000UL;
 140              		.loc 1 251 3 is_stmt 1 view .LVU50
 141              		.loc 1 251 10 is_stmt 0 view .LVU51
 142 0088 4FF0B042 		mov	r2, #1476395008
 143 008c D2F8E430 		ldr	r3, [r2, #228]
 144              		.loc 1 251 17 view .LVU52
 145 0090 43F48043 		orr	r3, r3, #16384
 146 0094 C2F8E430 		str	r3, [r2, #228]
 252:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 253:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 147              		.loc 1 253 3 is_stmt 1 view .LVU53
ARM GAS  /tmp/ccHNAuhv.s 			page 8


 148              		.loc 1 253 13 is_stmt 0 view .LVU54
 149 0098 0E4B     		ldr	r3, .L5+28
 150 009a 1B68     		ldr	r3, [r3]
 151              		.loc 1 253 22 view .LVU55
 152 009c 6FF30F03 		bfc	r3, #0, #16
 153              		.loc 1 253 5 view .LVU56
 154 00a0 B3F1005F 		cmp	r3, #536870912
 155 00a4 03D2     		bcs	.L4
 254:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 255:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* if stm32h7 revY*/
 256:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 257:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 156              		.loc 1 257 5 is_stmt 1 view .LVU57
 157              		.loc 1 257 35 is_stmt 0 view .LVU58
 158 00a6 0C4B     		ldr	r3, .L5+32
 159 00a8 0122     		movs	r2, #1
 160 00aa C3F80821 		str	r2, [r3, #264]
 161              	.L4:
 258:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 259:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 260:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM7*/
 261:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 262:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM4)
 263:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 264:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(USER_VECT_TAB_ADDRESS)
 265:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 266:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* USER_VECT_TAB_ADDRESS */
 267:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 268:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #elif defined(CORE_CM7)
 269:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /*
 270:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * Disable the FMC bank1 (enabled after reset).
 271:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 272:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 273:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    */
 274:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 162              		.loc 1 274 3 is_stmt 1 view .LVU59
 163              		.loc 1 274 24 is_stmt 0 view .LVU60
 164 00ae 0B4B     		ldr	r3, .L5+36
 165 00b0 43F2D202 		movw	r2, #12498
 166 00b4 1A60     		str	r2, [r3]
 275:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 276:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Configure the Vector Table location -------------------------------------*/
 277:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(USER_VECT_TAB_ADDRESS)
 278:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 279:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* USER_VECT_TAB_ADDRESS */
 280:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 281:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 282:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #error Please #define CORE_CM4 or CORE_CM7
 283:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM4 */
 284:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** }
 167              		.loc 1 284 1 view .LVU61
 168 00b6 7047     		bx	lr
 169              	.L6:
 170              		.align	2
 171              	.L5:
 172 00b8 00ED00E0 		.word	-536810240
 173 00bc 00200052 		.word	1375739904
ARM GAS  /tmp/ccHNAuhv.s 			page 9


 174 00c0 00440258 		.word	1476543488
 175 00c4 7FEDF6EA 		.word	-352916097
 176 00c8 00020202 		.word	33686016
 177 00cc 0000FF01 		.word	33488896
 178 00d0 80020101 		.word	16843392
 179 00d4 0010005C 		.word	1543507968
 180 00d8 00800051 		.word	1358987264
 181 00dc 00400052 		.word	1375748096
 182              		.cfi_endproc
 183              	.LFE144:
 185              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 186              		.align	1
 187              		.global	SystemCoreClockUpdate
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	SystemCoreClockUpdate:
 193              	.LFB145:
 285:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 286:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 287:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 288:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         The SystemCoreClock variable contains the core clock , it can
 289:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         be used by the user application to setup the SysTick timer or configure
 290:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         other parameters.
 291:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 292:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @note   Each time the core clock changes, this function must be called
 293:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 294:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         based on this variable will be incorrect.
 295:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 296:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @note   - The system frequency computed by this function is not the real
 297:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           frequency in the chip. It is calculated based on the predefined
 298:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           constant and the selected clock source:
 299:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 300:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 301:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 302:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 303:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 304:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 305:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 306:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 307:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             4 MHz) but the real value may vary depending on the variations
 308:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             in voltage and temperature.
 309:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 310:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             64 MHz) but the real value may vary depending on the variations
 311:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             in voltage and temperature.
 312:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 313:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 314:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 315:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *              frequency of the crystal used. Otherwise, this function may
 316:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *              have wrong result.
 317:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 318:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         - The result of this function could be not correct when using fractional
 319:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           value for HSE crystal.
 320:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @param  None
 321:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @retval None
 322:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 323:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** void SystemCoreClockUpdate (void)
ARM GAS  /tmp/ccHNAuhv.s 			page 10


 324:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** {
 194              		.loc 1 324 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0000 10B4     		push	{r4}
 200              	.LCFI0:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 4, -4
 325:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 203              		.loc 1 325 3 view .LVU63
 326:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t common_system_clock;
 204              		.loc 1 326 3 view .LVU64
 327:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   float_t fracn1, pllvco;
 205              		.loc 1 327 3 view .LVU65
 328:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 329:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 330:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 331:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 206              		.loc 1 331 3 view .LVU66
 207              		.loc 1 331 14 is_stmt 0 view .LVU67
 208 0002 894B     		ldr	r3, .L20
 209 0004 1B69     		ldr	r3, [r3, #16]
 210              		.loc 1 331 21 view .LVU68
 211 0006 03F03803 		and	r3, r3, #56
 212              		.loc 1 331 3 view .LVU69
 213 000a 182B     		cmp	r3, #24
 214 000c 00F2ED80 		bhi	.L8
 215 0010 01A2     		adr	r2, .L10
 216 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 217 0016 00BF     		.p2align 2
 218              	.L10:
 219 0018 81000000 		.word	.L13+1
 220 001c EB010000 		.word	.L8+1
 221 0020 EB010000 		.word	.L8+1
 222 0024 EB010000 		.word	.L8+1
 223 0028 EB010000 		.word	.L8+1
 224 002c EB010000 		.word	.L8+1
 225 0030 EB010000 		.word	.L8+1
 226 0034 EB010000 		.word	.L8+1
 227 0038 7D000000 		.word	.L12+1
 228 003c EB010000 		.word	.L8+1
 229 0040 EB010000 		.word	.L8+1
 230 0044 EB010000 		.word	.L8+1
 231 0048 EB010000 		.word	.L8+1
 232 004c EB010000 		.word	.L8+1
 233 0050 EB010000 		.word	.L8+1
 234 0054 EB010000 		.word	.L8+1
 235 0058 23020000 		.word	.L18+1
 236 005c EB010000 		.word	.L8+1
 237 0060 EB010000 		.word	.L8+1
 238 0064 EB010000 		.word	.L8+1
 239 0068 EB010000 		.word	.L8+1
 240 006c EB010000 		.word	.L8+1
 241 0070 EB010000 		.word	.L8+1
 242 0074 EB010000 		.word	.L8+1
ARM GAS  /tmp/ccHNAuhv.s 			page 11


 243 0078 8F000000 		.word	.L9+1
 244              		.p2align 1
 245              	.L12:
 246 007c 6B4A     		ldr	r2, .L20+4
 247 007e BAE0     		b	.L11
 248              	.L13:
 332:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 333:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 334:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 249              		.loc 1 334 5 is_stmt 1 view .LVU70
 250              		.loc 1 334 57 is_stmt 0 view .LVU71
 251 0080 694B     		ldr	r3, .L20
 252 0082 1B68     		ldr	r3, [r3]
 253              		.loc 1 334 78 view .LVU72
 254 0084 C3F3C103 		ubfx	r3, r3, #3, #2
 255              		.loc 1 334 25 view .LVU73
 256 0088 694A     		ldr	r2, .L20+8
 257 008a DA40     		lsrs	r2, r2, r3
 258              	.LVL0:
 335:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 259              		.loc 1 335 5 is_stmt 1 view .LVU74
 260 008c B3E0     		b	.L11
 261              	.LVL1:
 262              	.L9:
 336:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 337:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 338:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = CSI_VALUE;
 339:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 340:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 341:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 342:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = HSE_VALUE;
 343:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 344:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 345:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 346:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 347:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 348:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     SYSCLK = PLL_VCO / PLLR
 349:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     */
 350:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 263              		.loc 1 350 5 view .LVU75
 264              		.loc 1 350 21 is_stmt 0 view .LVU76
 265 008e 664B     		ldr	r3, .L20
 266 0090 996A     		ldr	r1, [r3, #40]
 267              		.loc 1 350 15 view .LVU77
 268 0092 01F00301 		and	r1, r1, #3
 269              	.LVL2:
 351:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 270              		.loc 1 351 5 is_stmt 1 view .LVU78
 271              		.loc 1 351 17 is_stmt 0 view .LVU79
 272 0096 9C6A     		ldr	r4, [r3, #40]
 273              		.loc 1 351 10 view .LVU80
 274 0098 C4F30512 		ubfx	r2, r4, #4, #6
 275              	.LVL3:
 352:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 276              		.loc 1 352 5 is_stmt 1 view .LVU81
 277              		.loc 1 352 22 is_stmt 0 view .LVU82
 278 009c D86A     		ldr	r0, [r3, #44]
ARM GAS  /tmp/ccHNAuhv.s 			page 12


 279              		.loc 1 352 15 view .LVU83
 280 009e 00F00100 		and	r0, r0, #1
 281              	.LVL4:
 353:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 282              		.loc 1 353 5 is_stmt 1 view .LVU84
 283              		.loc 1 353 50 is_stmt 0 view .LVU85
 284 00a2 5B6B     		ldr	r3, [r3, #52]
 285              		.loc 1 353 85 view .LVU86
 286 00a4 C3F3CC03 		ubfx	r3, r3, #3, #13
 287              		.loc 1 353 23 view .LVU87
 288 00a8 00FB03F3 		mul	r3, r0, r3
 289              		.loc 1 353 12 view .LVU88
 290 00ac 07EE903A 		vmov	s15, r3	@ int
 291 00b0 F8EE677A 		vcvt.f32.u32	s15, s15
 292              	.LVL5:
 354:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 355:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     if (pllm != 0U)
 293              		.loc 1 355 5 is_stmt 1 view .LVU89
 294              		.loc 1 355 8 is_stmt 0 view .LVU90
 295 00b4 14F47C7F 		tst	r4, #1008
 296 00b8 00F09D80 		beq	.L11
 356:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     {
 357:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       switch (pllsource)
 297              		.loc 1 357 7 is_stmt 1 view .LVU91
 298 00bc 0129     		cmp	r1, #1
 299 00be 36D0     		beq	.L14
 300 00c0 0229     		cmp	r1, #2
 301 00c2 51D0     		beq	.L15
 302 00c4 0029     		cmp	r1, #0
 303 00c6 6CD1     		bne	.L16
 358:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       {
 359:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 360:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 361:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 304              		.loc 1 361 9 view .LVU92
 305              		.loc 1 361 39 is_stmt 0 view .LVU93
 306 00c8 5748     		ldr	r0, .L20
 307              	.LVL6:
 308              		.loc 1 361 39 view .LVU94
 309 00ca 0168     		ldr	r1, [r0]
 310              	.LVL7:
 311              		.loc 1 361 60 view .LVU95
 312 00cc C1F3C101 		ubfx	r1, r1, #3, #2
 313              		.loc 1 361 18 view .LVU96
 314 00d0 574B     		ldr	r3, .L20+8
 315 00d2 CB40     		lsrs	r3, r3, r1
 316              	.LVL8:
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 317              		.loc 1 362 9 is_stmt 1 view .LVU97
 318              		.loc 1 362 20 is_stmt 0 view .LVU98
 319 00d4 07EE103A 		vmov	s14, r3	@ int
 320 00d8 F8EE476A 		vcvt.f32.u32	s13, s14
 321              		.loc 1 362 40 view .LVU99
 322 00dc 07EE102A 		vmov	s14, r2	@ int
 323 00e0 B8EE476A 		vcvt.f32.u32	s12, s14
 324              		.loc 1 362 38 view .LVU100
 325 00e4 86EE867A 		vdiv.f32	s14, s13, s12
ARM GAS  /tmp/ccHNAuhv.s 			page 13


 326              		.loc 1 362 81 view .LVU101
 327 00e8 036B     		ldr	r3, [r0, #48]
 328              	.LVL9:
 329              		.loc 1 362 67 view .LVU102
 330 00ea C3F30803 		ubfx	r3, r3, #0, #9
 331              		.loc 1 362 58 view .LVU103
 332 00ee 06EE903A 		vmov	s13, r3	@ int
 333 00f2 F8EE666A 		vcvt.f32.u32	s13, s13
 334              		.loc 1 362 120 view .LVU104
 335 00f6 9FED4F6A 		vldr.32	s12, .L20+12
 336 00fa 67EE867A 		vmul.f32	s15, s15, s12
 337              	.LVL10:
 338              		.loc 1 362 111 view .LVU105
 339 00fe 76EEA77A 		vadd.f32	s15, s13, s15
 340              		.loc 1 362 138 view .LVU106
 341 0102 F7EE006A 		vmov.f32	s13, #1.0e+0
 342 0106 77EEA67A 		vadd.f32	s15, s15, s13
 343              		.loc 1 362 16 view .LVU107
 344 010a 27EE277A 		vmul.f32	s14, s14, s15
 345              	.LVL11:
 363:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 364:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 346              		.loc 1 364 9 is_stmt 1 view .LVU108
 347              	.L17:
 365:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 366:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 368:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 369:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 370:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 372:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 373:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 374:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       default:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 377:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 378:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       }
 379:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 348              		.loc 1 379 7 view .LVU109
 349              		.loc 1 379 20 is_stmt 0 view .LVU110
 350 010e 464B     		ldr	r3, .L20
 351 0110 1B6B     		ldr	r3, [r3, #48]
 352              		.loc 1 379 50 view .LVU111
 353 0112 C3F34623 		ubfx	r3, r3, #9, #7
 354              		.loc 1 379 12 view .LVU112
 355 0116 0133     		adds	r3, r3, #1
 356              	.LVL12:
 380:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 357              		.loc 1 380 7 is_stmt 1 view .LVU113
 358              		.loc 1 380 57 is_stmt 0 view .LVU114
 359 0118 07EE903A 		vmov	s15, r3	@ int
 360 011c F8EE677A 		vcvt.f32.u32	s15, s15
 361              		.loc 1 380 40 view .LVU115
 362 0120 C7EE276A 		vdiv.f32	s13, s14, s15
 363              		.loc 1 380 27 view .LVU116
 364 0124 FCEEE67A 		vcvt.u32.f32	s15, s13
ARM GAS  /tmp/ccHNAuhv.s 			page 14


 365 0128 17EE902A 		vmov	r2, s15	@ int
 366              	.LVL13:
 367              		.loc 1 380 27 view .LVU117
 368 012c 63E0     		b	.L11
 369              	.LVL14:
 370              	.L14:
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 371              		.loc 1 367 11 is_stmt 1 view .LVU118
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 372              		.loc 1 367 42 is_stmt 0 view .LVU119
 373 012e 07EE102A 		vmov	s14, r2	@ int
 374 0132 F8EE476A 		vcvt.f32.u32	s13, s14
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 375              		.loc 1 367 40 view .LVU120
 376 0136 9FED406A 		vldr.32	s12, .L20+16
 377 013a 86EE267A 		vdiv.f32	s14, s12, s13
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 378              		.loc 1 367 83 view .LVU121
 379 013e 3A4B     		ldr	r3, .L20
 380 0140 1B6B     		ldr	r3, [r3, #48]
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 381              		.loc 1 367 69 view .LVU122
 382 0142 C3F30803 		ubfx	r3, r3, #0, #9
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 383              		.loc 1 367 60 view .LVU123
 384 0146 06EE903A 		vmov	s13, r3	@ int
 385 014a F8EE666A 		vcvt.f32.u32	s13, s13
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 386              		.loc 1 367 122 view .LVU124
 387 014e 9FED396A 		vldr.32	s12, .L20+12
 388 0152 67EE867A 		vmul.f32	s15, s15, s12
 389              	.LVL15:
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 390              		.loc 1 367 113 view .LVU125
 391 0156 76EEA77A 		vadd.f32	s15, s13, s15
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 392              		.loc 1 367 140 view .LVU126
 393 015a F7EE006A 		vmov.f32	s13, #1.0e+0
 394 015e 77EEA67A 		vadd.f32	s15, s15, s13
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 395              		.loc 1 367 18 view .LVU127
 396 0162 27EE277A 		vmul.f32	s14, s14, s15
 397              	.LVL16:
 368:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 398              		.loc 1 368 9 is_stmt 1 view .LVU128
 399 0166 D2E7     		b	.L17
 400              	.LVL17:
 401              	.L15:
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 402              		.loc 1 371 11 view .LVU129
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 403              		.loc 1 371 42 is_stmt 0 view .LVU130
 404 0168 07EE102A 		vmov	s14, r2	@ int
 405 016c F8EE476A 		vcvt.f32.u32	s13, s14
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 406              		.loc 1 371 40 view .LVU131
 407 0170 9FED326A 		vldr.32	s12, .L20+20
ARM GAS  /tmp/ccHNAuhv.s 			page 15


 408 0174 86EE267A 		vdiv.f32	s14, s12, s13
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 409              		.loc 1 371 83 view .LVU132
 410 0178 2B4B     		ldr	r3, .L20
 411 017a 1B6B     		ldr	r3, [r3, #48]
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 412              		.loc 1 371 69 view .LVU133
 413 017c C3F30803 		ubfx	r3, r3, #0, #9
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 414              		.loc 1 371 60 view .LVU134
 415 0180 06EE903A 		vmov	s13, r3	@ int
 416 0184 F8EE666A 		vcvt.f32.u32	s13, s13
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 417              		.loc 1 371 122 view .LVU135
 418 0188 9FED2A6A 		vldr.32	s12, .L20+12
 419 018c 67EE867A 		vmul.f32	s15, s15, s12
 420              	.LVL18:
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 421              		.loc 1 371 113 view .LVU136
 422 0190 76EEA77A 		vadd.f32	s15, s13, s15
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 423              		.loc 1 371 140 view .LVU137
 424 0194 F7EE006A 		vmov.f32	s13, #1.0e+0
 425 0198 77EEA67A 		vadd.f32	s15, s15, s13
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 426              		.loc 1 371 18 view .LVU138
 427 019c 27EE277A 		vmul.f32	s14, s14, s15
 428              	.LVL19:
 372:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 429              		.loc 1 372 9 is_stmt 1 view .LVU139
 430 01a0 B5E7     		b	.L17
 431              	.LVL20:
 432              	.L16:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 433              		.loc 1 375 11 view .LVU140
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 434              		.loc 1 375 41 is_stmt 0 view .LVU141
 435 01a2 2148     		ldr	r0, .L20
 436              	.LVL21:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 437              		.loc 1 375 41 view .LVU142
 438 01a4 0168     		ldr	r1, [r0]
 439              	.LVL22:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 440              		.loc 1 375 62 view .LVU143
 441 01a6 C1F3C101 		ubfx	r1, r1, #3, #2
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 442              		.loc 1 375 20 view .LVU144
 443 01aa 214B     		ldr	r3, .L20+8
 444 01ac CB40     		lsrs	r3, r3, r1
 445              	.LVL23:
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 446              		.loc 1 376 11 is_stmt 1 view .LVU145
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 447              		.loc 1 376 21 is_stmt 0 view .LVU146
 448 01ae 07EE103A 		vmov	s14, r3	@ int
 449 01b2 F8EE476A 		vcvt.f32.u32	s13, s14
ARM GAS  /tmp/ccHNAuhv.s 			page 16


 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 450              		.loc 1 376 41 view .LVU147
 451 01b6 07EE102A 		vmov	s14, r2	@ int
 452 01ba B8EE476A 		vcvt.f32.u32	s12, s14
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 453              		.loc 1 376 39 view .LVU148
 454 01be 86EE867A 		vdiv.f32	s14, s13, s12
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 455              		.loc 1 376 82 view .LVU149
 456 01c2 036B     		ldr	r3, [r0, #48]
 457              	.LVL24:
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 458              		.loc 1 376 68 view .LVU150
 459 01c4 C3F30803 		ubfx	r3, r3, #0, #9
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 460              		.loc 1 376 59 view .LVU151
 461 01c8 06EE903A 		vmov	s13, r3	@ int
 462 01cc F8EE666A 		vcvt.f32.u32	s13, s13
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 463              		.loc 1 376 121 view .LVU152
 464 01d0 9FED186A 		vldr.32	s12, .L20+12
 465 01d4 67EE867A 		vmul.f32	s15, s15, s12
 466              	.LVL25:
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 467              		.loc 1 376 112 view .LVU153
 468 01d8 76EEA77A 		vadd.f32	s15, s13, s15
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 469              		.loc 1 376 139 view .LVU154
 470 01dc F7EE006A 		vmov.f32	s13, #1.0e+0
 471 01e0 77EEA67A 		vadd.f32	s15, s15, s13
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 472              		.loc 1 376 18 view .LVU155
 473 01e4 27EE277A 		vmul.f32	s14, s14, s15
 474              	.LVL26:
 377:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       }
 475              		.loc 1 377 9 is_stmt 1 view .LVU156
 476 01e8 91E7     		b	.L17
 477              	.LVL27:
 478              	.L8:
 381:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 382:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     else
 383:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     {
 384:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock = 0U;
 385:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 386:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 387:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 388:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   default:
 389:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 479              		.loc 1 389 5 view .LVU157
 480              		.loc 1 389 57 is_stmt 0 view .LVU158
 481 01ea 0F4B     		ldr	r3, .L20
 482 01ec 1B68     		ldr	r3, [r3]
 483              		.loc 1 389 78 view .LVU159
 484 01ee C3F3C103 		ubfx	r3, r3, #3, #2
 485              		.loc 1 389 25 view .LVU160
 486 01f2 0F4A     		ldr	r2, .L20+8
 487 01f4 DA40     		lsrs	r2, r2, r3
ARM GAS  /tmp/ccHNAuhv.s 			page 17


 488              	.LVL28:
 390:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 489              		.loc 1 390 5 is_stmt 1 view .LVU161
 490              	.L11:
 391:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 392:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 393:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 394:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 491              		.loc 1 394 3 view .LVU162
 492              		.loc 1 394 30 is_stmt 0 view .LVU163
 493 01f6 0C48     		ldr	r0, .L20
 494 01f8 8369     		ldr	r3, [r0, #24]
 495              		.loc 1 394 59 view .LVU164
 496 01fa C3F30323 		ubfx	r3, r3, #8, #4
 497              		.loc 1 394 25 view .LVU165
 498 01fe 1049     		ldr	r1, .L20+24
 499 0200 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 500              	.LVL29:
 395:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 396:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 397:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   common_system_clock >>= tmp;
 501              		.loc 1 397 3 is_stmt 1 view .LVU166
 502              		.loc 1 397 23 is_stmt 0 view .LVU167
 503 0202 DA40     		lsrs	r2, r2, r3
 504              	.LVL30:
 398:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 399:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 400:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 505              		.loc 1 400 3 is_stmt 1 view .LVU168
 506              		.loc 1 400 66 is_stmt 0 view .LVU169
 507 0204 8369     		ldr	r3, [r0, #24]
 508              	.LVL31:
 509              		.loc 1 400 93 view .LVU170
 510 0206 03F00F03 		and	r3, r3, #15
 511              		.loc 1 400 61 view .LVU171
 512 020a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 513              		.loc 1 400 118 view .LVU172
 514 020c 03F01F03 		and	r3, r3, #31
 515              		.loc 1 400 40 view .LVU173
 516 0210 22FA03F3 		lsr	r3, r2, r3
 517              		.loc 1 400 17 view .LVU174
 518 0214 0B49     		ldr	r1, .L20+28
 519              		.loc 1 400 17 view .LVU175
 520 0216 0B60     		str	r3, [r1]
 401:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 402:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM4)
 403:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SystemCoreClock = SystemD2Clock;
 404:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 405:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SystemCoreClock = common_system_clock;
 521              		.loc 1 405 3 is_stmt 1 view .LVU176
 522              		.loc 1 405 19 is_stmt 0 view .LVU177
 523 0218 0B4B     		ldr	r3, .L20+32
 524 021a 1A60     		str	r2, [r3]
 406:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM4 */
 407:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** }
 525              		.loc 1 407 1 view .LVU178
 526 021c 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccHNAuhv.s 			page 18


 527              	.LCFI1:
 528              		.cfi_remember_state
 529              		.cfi_restore 4
 530              		.cfi_def_cfa_offset 0
 531 0220 7047     		bx	lr
 532              	.LVL32:
 533              	.L18:
 534              	.LCFI2:
 535              		.cfi_restore_state
 342:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 536              		.loc 1 342 25 view .LVU179
 537 0222 0A4A     		ldr	r2, .L20+36
 538 0224 E7E7     		b	.L11
 539              	.L21:
 540 0226 00BF     		.align	2
 541              	.L20:
 542 0228 00440258 		.word	1476543488
 543 022c 00093D00 		.word	4000000
 544 0230 0090D003 		.word	64000000
 545 0234 00000039 		.word	956301312
 546 0238 0024744A 		.word	1249125376
 547 023c 20BCBE4B 		.word	1270791200
 548 0240 00000000 		.word	D1CorePrescTable
 549 0244 00000000 		.word	SystemD2Clock
 550 0248 00000000 		.word	SystemCoreClock
 551 024c 40787D01 		.word	25000000
 552              		.cfi_endproc
 553              	.LFE145:
 555              		.global	D1CorePrescTable
 556              		.section	.rodata.D1CorePrescTable,"a"
 557              		.align	2
 560              	D1CorePrescTable:
 561 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 561      01020304 
 561      01020304 
 561      06
 562 000d 070809   		.ascii	"\007\010\011"
 563              		.global	SystemD2Clock
 564              		.section	.data.SystemD2Clock,"aw"
 565              		.align	2
 568              	SystemD2Clock:
 569 0000 0090D003 		.word	64000000
 570              		.global	SystemCoreClock
 571              		.section	.data.SystemCoreClock,"aw"
 572              		.align	2
 575              	SystemCoreClock:
 576 0000 0090D003 		.word	64000000
 577              		.text
 578              	.Letext0:
 579              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 580              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 581              		.file 4 "../../Drivers/CMSIS/Include/core_cm7.h"
 582              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 583              		.file 6 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h755xx.h"
 584              		.file 7 "/usr/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccHNAuhv.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx_dualcore_boot_cm4_cm7.c
     /tmp/ccHNAuhv.s:20     .text.SystemInit:00000000 $t
     /tmp/ccHNAuhv.s:26     .text.SystemInit:00000000 SystemInit
     /tmp/ccHNAuhv.s:172    .text.SystemInit:000000b8 $d
     /tmp/ccHNAuhv.s:186    .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccHNAuhv.s:192    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccHNAuhv.s:219    .text.SystemCoreClockUpdate:00000018 $d
     /tmp/ccHNAuhv.s:244    .text.SystemCoreClockUpdate:0000007c $t
     /tmp/ccHNAuhv.s:542    .text.SystemCoreClockUpdate:00000228 $d
     /tmp/ccHNAuhv.s:560    .rodata.D1CorePrescTable:00000000 D1CorePrescTable
     /tmp/ccHNAuhv.s:568    .data.SystemD2Clock:00000000 SystemD2Clock
     /tmp/ccHNAuhv.s:575    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccHNAuhv.s:557    .rodata.D1CorePrescTable:00000000 $d
     /tmp/ccHNAuhv.s:565    .data.SystemD2Clock:00000000 $d
     /tmp/ccHNAuhv.s:572    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS
