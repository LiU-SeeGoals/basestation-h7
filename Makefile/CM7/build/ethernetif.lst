ARM GAS  /tmp/ccM1xvf3.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"ethernetif.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "../../CM7/LWIP/Target/ethernetif.c"
  19              		.section	.text.ETH_PHY_IO_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	ETH_PHY_IO_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ETH_PHY_IO_DeInit:
  27              	.LFB180:
   1:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN Header */
   2:../../CM7/LWIP/Target/ethernetif.c **** /**
   3:../../CM7/LWIP/Target/ethernetif.c ****   ******************************************************************************
   4:../../CM7/LWIP/Target/ethernetif.c ****   * File Name          : ethernetif.c
   5:../../CM7/LWIP/Target/ethernetif.c ****   * Description        : This file provides code for the configuration
   6:../../CM7/LWIP/Target/ethernetif.c ****   *                      of the ethernetif.c MiddleWare.
   7:../../CM7/LWIP/Target/ethernetif.c ****   ******************************************************************************
   8:../../CM7/LWIP/Target/ethernetif.c ****   * @attention
   9:../../CM7/LWIP/Target/ethernetif.c ****   *
  10:../../CM7/LWIP/Target/ethernetif.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:../../CM7/LWIP/Target/ethernetif.c ****   * All rights reserved.
  12:../../CM7/LWIP/Target/ethernetif.c ****   *
  13:../../CM7/LWIP/Target/ethernetif.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:../../CM7/LWIP/Target/ethernetif.c ****   * in the root directory of this software component.
  15:../../CM7/LWIP/Target/ethernetif.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:../../CM7/LWIP/Target/ethernetif.c ****   *
  17:../../CM7/LWIP/Target/ethernetif.c ****   ******************************************************************************
  18:../../CM7/LWIP/Target/ethernetif.c ****   */
  19:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END Header */
  20:../../CM7/LWIP/Target/ethernetif.c **** 
  21:../../CM7/LWIP/Target/ethernetif.c **** /* Includes ------------------------------------------------------------------*/
  22:../../CM7/LWIP/Target/ethernetif.c **** #include "main.h"
  23:../../CM7/LWIP/Target/ethernetif.c **** #include "lwip/opt.h"
  24:../../CM7/LWIP/Target/ethernetif.c **** #include "lwip/mem.h"
  25:../../CM7/LWIP/Target/ethernetif.c **** #include "lwip/memp.h"
  26:../../CM7/LWIP/Target/ethernetif.c **** #include "lwip/timeouts.h"
  27:../../CM7/LWIP/Target/ethernetif.c **** #include "netif/ethernet.h"
  28:../../CM7/LWIP/Target/ethernetif.c **** #include "netif/etharp.h"
  29:../../CM7/LWIP/Target/ethernetif.c **** #include "lwip/ethip6.h"
  30:../../CM7/LWIP/Target/ethernetif.c **** #include "ethernetif.h"
  31:../../CM7/LWIP/Target/ethernetif.c **** #include "lan8742.h"
ARM GAS  /tmp/ccM1xvf3.s 			page 2


  32:../../CM7/LWIP/Target/ethernetif.c **** #include <string.h>
  33:../../CM7/LWIP/Target/ethernetif.c **** 
  34:../../CM7/LWIP/Target/ethernetif.c **** /* Within 'USER CODE' section, code will be kept by default at each generation */
  35:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 0 */
  36:../../CM7/LWIP/Target/ethernetif.c **** 
  37:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END 0 */
  38:../../CM7/LWIP/Target/ethernetif.c **** 
  39:../../CM7/LWIP/Target/ethernetif.c **** /* Private define ------------------------------------------------------------*/
  40:../../CM7/LWIP/Target/ethernetif.c **** 
  41:../../CM7/LWIP/Target/ethernetif.c **** /* Network interface name */
  42:../../CM7/LWIP/Target/ethernetif.c **** #define IFNAME0 's'
  43:../../CM7/LWIP/Target/ethernetif.c **** #define IFNAME1 't'
  44:../../CM7/LWIP/Target/ethernetif.c **** 
  45:../../CM7/LWIP/Target/ethernetif.c **** /* ETH Setting  */
  46:../../CM7/LWIP/Target/ethernetif.c **** #define ETH_DMA_TRANSMIT_TIMEOUT               ( 20U )
  47:../../CM7/LWIP/Target/ethernetif.c **** #define ETH_TX_BUFFER_MAX             ((ETH_TX_DESC_CNT) * 2U)
  48:../../CM7/LWIP/Target/ethernetif.c **** /* ETH_RX_BUFFER_SIZE parameter is defined in lwipopts.h */
  49:../../CM7/LWIP/Target/ethernetif.c **** 
  50:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 1 */
  51:../../CM7/LWIP/Target/ethernetif.c **** 
  52:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END 1 */
  53:../../CM7/LWIP/Target/ethernetif.c **** 
  54:../../CM7/LWIP/Target/ethernetif.c **** /* Private variables ---------------------------------------------------------*/
  55:../../CM7/LWIP/Target/ethernetif.c **** /*
  56:../../CM7/LWIP/Target/ethernetif.c **** @Note: This interface is implemented to operate in zero-copy mode only:
  57:../../CM7/LWIP/Target/ethernetif.c ****         - Rx Buffers will be allocated from LwIP stack Rx memory pool,
  58:../../CM7/LWIP/Target/ethernetif.c ****           then passed to ETH HAL driver.
  59:../../CM7/LWIP/Target/ethernetif.c ****         - Tx Buffers will be allocated from LwIP stack memory heap,
  60:../../CM7/LWIP/Target/ethernetif.c ****           then passed to ETH HAL driver.
  61:../../CM7/LWIP/Target/ethernetif.c **** 
  62:../../CM7/LWIP/Target/ethernetif.c **** @Notes:
  63:../../CM7/LWIP/Target/ethernetif.c ****   1.a. ETH DMA Rx descriptors must be contiguous, the default count is 4,
  64:../../CM7/LWIP/Target/ethernetif.c ****        to customize it please redefine ETH_RX_DESC_CNT in ETH GUI (Rx Descriptor Length)
  65:../../CM7/LWIP/Target/ethernetif.c ****        so that updated value will be generated in stm32xxxx_hal_conf.h
  66:../../CM7/LWIP/Target/ethernetif.c ****   1.b. ETH DMA Tx descriptors must be contiguous, the default count is 4,
  67:../../CM7/LWIP/Target/ethernetif.c ****        to customize it please redefine ETH_TX_DESC_CNT in ETH GUI (Tx Descriptor Length)
  68:../../CM7/LWIP/Target/ethernetif.c ****        so that updated value will be generated in stm32xxxx_hal_conf.h
  69:../../CM7/LWIP/Target/ethernetif.c **** 
  70:../../CM7/LWIP/Target/ethernetif.c ****   2.a. Rx Buffers number must be between ETH_RX_DESC_CNT and 2*ETH_RX_DESC_CNT
  71:../../CM7/LWIP/Target/ethernetif.c ****   2.b. Rx Buffers must have the same size: ETH_RX_BUFFER_SIZE, this value must
  72:../../CM7/LWIP/Target/ethernetif.c ****        passed to ETH DMA in the init field (heth.Init.RxBuffLen)
  73:../../CM7/LWIP/Target/ethernetif.c ****   2.c  The RX Ruffers addresses and sizes must be properly defined to be aligned
  74:../../CM7/LWIP/Target/ethernetif.c ****        to L1-CACHE line size (32 bytes).
  75:../../CM7/LWIP/Target/ethernetif.c **** */
  76:../../CM7/LWIP/Target/ethernetif.c **** 
  77:../../CM7/LWIP/Target/ethernetif.c **** /* Data Type Definitions */
  78:../../CM7/LWIP/Target/ethernetif.c **** typedef enum
  79:../../CM7/LWIP/Target/ethernetif.c **** {
  80:../../CM7/LWIP/Target/ethernetif.c ****   RX_ALLOC_OK       = 0x00,
  81:../../CM7/LWIP/Target/ethernetif.c ****   RX_ALLOC_ERROR    = 0x01
  82:../../CM7/LWIP/Target/ethernetif.c **** } RxAllocStatusTypeDef;
  83:../../CM7/LWIP/Target/ethernetif.c **** 
  84:../../CM7/LWIP/Target/ethernetif.c **** typedef struct
  85:../../CM7/LWIP/Target/ethernetif.c **** {
  86:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf_custom pbuf_custom;
  87:../../CM7/LWIP/Target/ethernetif.c ****   uint8_t buff[(ETH_RX_BUFFER_SIZE + 31) & ~31] __ALIGNED(32);
  88:../../CM7/LWIP/Target/ethernetif.c **** } RxBuff_t;
ARM GAS  /tmp/ccM1xvf3.s 			page 3


  89:../../CM7/LWIP/Target/ethernetif.c **** 
  90:../../CM7/LWIP/Target/ethernetif.c **** /* Memory Pool Declaration */
  91:../../CM7/LWIP/Target/ethernetif.c **** #define ETH_RX_BUFFER_CNT             12U
  92:../../CM7/LWIP/Target/ethernetif.c **** LWIP_MEMPOOL_DECLARE(RX_POOL, ETH_RX_BUFFER_CNT, sizeof(RxBuff_t), "Zero-copy RX PBUF pool");
  93:../../CM7/LWIP/Target/ethernetif.c **** 
  94:../../CM7/LWIP/Target/ethernetif.c **** /* Variable Definitions */
  95:../../CM7/LWIP/Target/ethernetif.c **** static uint8_t RxAllocStatus;
  96:../../CM7/LWIP/Target/ethernetif.c **** 
  97:../../CM7/LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  98:../../CM7/LWIP/Target/ethernetif.c **** 
  99:../../CM7/LWIP/Target/ethernetif.c **** #pragma location=0x30040000
 100:../../CM7/LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx DMA Descriptors */
 101:../../CM7/LWIP/Target/ethernetif.c **** #pragma location=0x30040060
 102:../../CM7/LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx DMA Descriptors */
 103:../../CM7/LWIP/Target/ethernetif.c **** 
 104:../../CM7/LWIP/Target/ethernetif.c **** #elif defined ( __CC_ARM )  /* MDK ARM Compiler */
 105:../../CM7/LWIP/Target/ethernetif.c **** 
 106:../../CM7/LWIP/Target/ethernetif.c **** __attribute__((at(0x30040000))) ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx D
 107:../../CM7/LWIP/Target/ethernetif.c **** __attribute__((at(0x30040060))) ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx D
 108:../../CM7/LWIP/Target/ethernetif.c **** 
 109:../../CM7/LWIP/Target/ethernetif.c **** #elif defined ( __GNUC__ ) /* GNU Compiler */
 110:../../CM7/LWIP/Target/ethernetif.c **** 
 111:../../CM7/LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMARxDscrTab[ETH_RX_DESC_CNT] __attribute__((section(".RxDecripSection"))); /* E
 112:../../CM7/LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMATxDscrTab[ETH_TX_DESC_CNT] __attribute__((section(".TxDecripSection")));   /*
 113:../../CM7/LWIP/Target/ethernetif.c **** 
 114:../../CM7/LWIP/Target/ethernetif.c **** #endif
 115:../../CM7/LWIP/Target/ethernetif.c **** 
 116:../../CM7/LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 117:../../CM7/LWIP/Target/ethernetif.c **** #pragma location = 0x30040400
 118:../../CM7/LWIP/Target/ethernetif.c **** extern u8_t memp_memory_RX_POOL_base[];
 119:../../CM7/LWIP/Target/ethernetif.c **** 
 120:../../CM7/LWIP/Target/ethernetif.c **** #elif defined ( __CC_ARM ) /* MDK ARM Compiler */
 121:../../CM7/LWIP/Target/ethernetif.c **** __attribute__((section(".Rx_PoolSection"))) extern u8_t memp_memory_RX_POOL_base[];
 122:../../CM7/LWIP/Target/ethernetif.c **** 
 123:../../CM7/LWIP/Target/ethernetif.c **** #elif defined ( __GNUC__ ) /* GNU */
 124:../../CM7/LWIP/Target/ethernetif.c **** __attribute__((section(".Rx_PoolSection"))) extern u8_t memp_memory_RX_POOL_base[];
 125:../../CM7/LWIP/Target/ethernetif.c **** #endif
 126:../../CM7/LWIP/Target/ethernetif.c **** 
 127:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 2 */
 128:../../CM7/LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 129:../../CM7/LWIP/Target/ethernetif.c **** #pragma location = 0x30040400
 130:../../CM7/LWIP/Target/ethernetif.c **** extern u8_t memp_memory_RX_POOL_base[];
 131:../../CM7/LWIP/Target/ethernetif.c **** 
 132:../../CM7/LWIP/Target/ethernetif.c **** #elif defined ( __CC_ARM )  /* MDK ARM Compiler */
 133:../../CM7/LWIP/Target/ethernetif.c **** __attribute__((at(0x30040400)) extern u8_t memp_memory_RX_POOL_base[];
 134:../../CM7/LWIP/Target/ethernetif.c **** 
 135:../../CM7/LWIP/Target/ethernetif.c **** #elif defined ( __GNUC__ ) /* GNU Compiler */
 136:../../CM7/LWIP/Target/ethernetif.c **** __attribute__((section(".Rx_PoolSection"))) extern u8_t memp_memory_RX_POOL_base[];
 137:../../CM7/LWIP/Target/ethernetif.c **** #endif
 138:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END 2 */
 139:../../CM7/LWIP/Target/ethernetif.c **** 
 140:../../CM7/LWIP/Target/ethernetif.c **** /* Global Ethernet handle */
 141:../../CM7/LWIP/Target/ethernetif.c **** ETH_HandleTypeDef heth;
 142:../../CM7/LWIP/Target/ethernetif.c **** ETH_TxPacketConfig TxConfig;
 143:../../CM7/LWIP/Target/ethernetif.c **** 
 144:../../CM7/LWIP/Target/ethernetif.c **** /* Private function prototypes -----------------------------------------------*/
 145:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_Init(void);
ARM GAS  /tmp/ccM1xvf3.s 			page 4


 146:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_DeInit (void);
 147:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_ReadReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t *pRegVal);
 148:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_WriteReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t RegVal);
 149:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_GetTick(void);
 150:../../CM7/LWIP/Target/ethernetif.c **** 
 151:../../CM7/LWIP/Target/ethernetif.c **** lan8742_Object_t LAN8742;
 152:../../CM7/LWIP/Target/ethernetif.c **** lan8742_IOCtx_t  LAN8742_IOCtx = {ETH_PHY_IO_Init,
 153:../../CM7/LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_DeInit,
 154:../../CM7/LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_WriteReg,
 155:../../CM7/LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_ReadReg,
 156:../../CM7/LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_GetTick};
 157:../../CM7/LWIP/Target/ethernetif.c **** 
 158:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 3 */
 159:../../CM7/LWIP/Target/ethernetif.c **** 
 160:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END 3 */
 161:../../CM7/LWIP/Target/ethernetif.c **** 
 162:../../CM7/LWIP/Target/ethernetif.c **** /* Private functions ---------------------------------------------------------*/
 163:../../CM7/LWIP/Target/ethernetif.c **** void pbuf_free_custom(struct pbuf *p);
 164:../../CM7/LWIP/Target/ethernetif.c **** 
 165:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 4 */
 166:../../CM7/LWIP/Target/ethernetif.c **** 
 167:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END 4 */
 168:../../CM7/LWIP/Target/ethernetif.c **** 
 169:../../CM7/LWIP/Target/ethernetif.c **** /*******************************************************************************
 170:../../CM7/LWIP/Target/ethernetif.c ****                        LL Driver Interface ( LwIP stack --> ETH)
 171:../../CM7/LWIP/Target/ethernetif.c **** *******************************************************************************/
 172:../../CM7/LWIP/Target/ethernetif.c **** /**
 173:../../CM7/LWIP/Target/ethernetif.c ****  * @brief In this function, the hardware should be initialized.
 174:../../CM7/LWIP/Target/ethernetif.c ****  * Called from ethernetif_init().
 175:../../CM7/LWIP/Target/ethernetif.c ****  *
 176:../../CM7/LWIP/Target/ethernetif.c ****  * @param netif the already initialized lwip network interface structure
 177:../../CM7/LWIP/Target/ethernetif.c ****  *        for this ethernetif
 178:../../CM7/LWIP/Target/ethernetif.c ****  */
 179:../../CM7/LWIP/Target/ethernetif.c **** static void low_level_init(struct netif *netif)
 180:../../CM7/LWIP/Target/ethernetif.c **** {
 181:../../CM7/LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 182:../../CM7/LWIP/Target/ethernetif.c ****   /* Start ETH HAL Init */
 183:../../CM7/LWIP/Target/ethernetif.c **** 
 184:../../CM7/LWIP/Target/ethernetif.c ****    uint8_t MACAddr[6] ;
 185:../../CM7/LWIP/Target/ethernetif.c ****   heth.Instance = ETH;
 186:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 187:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 188:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 189:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 190:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x13;
 191:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x37;
 192:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 193:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 194:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 195:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 196:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1536;
 197:../../CM7/LWIP/Target/ethernetif.c **** 
 198:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN MACADDRESS */
 199:../../CM7/LWIP/Target/ethernetif.c **** 
 200:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE END MACADDRESS */
 201:../../CM7/LWIP/Target/ethernetif.c **** 
 202:../../CM7/LWIP/Target/ethernetif.c ****   hal_eth_init_status = HAL_ETH_Init(&heth);
ARM GAS  /tmp/ccM1xvf3.s 			page 5


 203:../../CM7/LWIP/Target/ethernetif.c **** 
 204:../../CM7/LWIP/Target/ethernetif.c ****   memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 205:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 206:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 207:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 208:../../CM7/LWIP/Target/ethernetif.c **** 
 209:../../CM7/LWIP/Target/ethernetif.c ****   /* End ETH HAL Init */
 210:../../CM7/LWIP/Target/ethernetif.c **** 
 211:../../CM7/LWIP/Target/ethernetif.c ****   /* Initialize the RX POOL */
 212:../../CM7/LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_INIT(RX_POOL);
 213:../../CM7/LWIP/Target/ethernetif.c **** 
 214:../../CM7/LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 215:../../CM7/LWIP/Target/ethernetif.c **** 
 216:../../CM7/LWIP/Target/ethernetif.c ****   /* set MAC hardware address length */
 217:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr_len = ETH_HWADDR_LEN;
 218:../../CM7/LWIP/Target/ethernetif.c **** 
 219:../../CM7/LWIP/Target/ethernetif.c ****   /* set MAC hardware address */
 220:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[0] =  heth.Init.MACAddr[0];
 221:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 222:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 223:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 224:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 225:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 226:../../CM7/LWIP/Target/ethernetif.c **** 
 227:../../CM7/LWIP/Target/ethernetif.c ****   /* maximum transfer unit */
 228:../../CM7/LWIP/Target/ethernetif.c ****   netif->mtu = ETH_MAX_PAYLOAD;
 229:../../CM7/LWIP/Target/ethernetif.c **** 
 230:../../CM7/LWIP/Target/ethernetif.c ****   /* Accept broadcast address and ARP traffic */
 231:../../CM7/LWIP/Target/ethernetif.c ****   /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
 232:../../CM7/LWIP/Target/ethernetif.c ****   #if LWIP_ARP
 233:../../CM7/LWIP/Target/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP;
 234:../../CM7/LWIP/Target/ethernetif.c ****   #else
 235:../../CM7/LWIP/Target/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST;
 236:../../CM7/LWIP/Target/ethernetif.c ****   #endif /* LWIP_ARP */
 237:../../CM7/LWIP/Target/ethernetif.c **** 
 238:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN PHY_PRE_CONFIG */
 239:../../CM7/LWIP/Target/ethernetif.c **** 
 240:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END PHY_PRE_CONFIG */
 241:../../CM7/LWIP/Target/ethernetif.c ****   /* Set PHY IO functions */
 242:../../CM7/LWIP/Target/ethernetif.c ****   LAN8742_RegisterBusIO(&LAN8742, &LAN8742_IOCtx);
 243:../../CM7/LWIP/Target/ethernetif.c **** 
 244:../../CM7/LWIP/Target/ethernetif.c ****   /* Initialize the LAN8742 ETH PHY */
 245:../../CM7/LWIP/Target/ethernetif.c ****   if(LAN8742_Init(&LAN8742) != LAN8742_STATUS_OK)
 246:../../CM7/LWIP/Target/ethernetif.c ****   {
 247:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_link_down(netif);
 248:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 249:../../CM7/LWIP/Target/ethernetif.c ****     return;
 250:../../CM7/LWIP/Target/ethernetif.c ****   }
 251:../../CM7/LWIP/Target/ethernetif.c **** 
 252:../../CM7/LWIP/Target/ethernetif.c ****   if (hal_eth_init_status == HAL_OK)
 253:../../CM7/LWIP/Target/ethernetif.c ****   {
 254:../../CM7/LWIP/Target/ethernetif.c ****   /* Get link state */
 255:../../CM7/LWIP/Target/ethernetif.c ****   ethernet_link_check_state(netif);
 256:../../CM7/LWIP/Target/ethernetif.c ****   }
 257:../../CM7/LWIP/Target/ethernetif.c ****   else
 258:../../CM7/LWIP/Target/ethernetif.c ****   {
 259:../../CM7/LWIP/Target/ethernetif.c ****     Error_Handler();
ARM GAS  /tmp/ccM1xvf3.s 			page 6


 260:../../CM7/LWIP/Target/ethernetif.c ****   }
 261:../../CM7/LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 262:../../CM7/LWIP/Target/ethernetif.c **** 
 263:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN LOW_LEVEL_INIT */
 264:../../CM7/LWIP/Target/ethernetif.c **** 
 265:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END LOW_LEVEL_INIT */
 266:../../CM7/LWIP/Target/ethernetif.c **** }
 267:../../CM7/LWIP/Target/ethernetif.c **** 
 268:../../CM7/LWIP/Target/ethernetif.c **** /**
 269:../../CM7/LWIP/Target/ethernetif.c ****  * @brief This function should do the actual transmission of the packet. The packet is
 270:../../CM7/LWIP/Target/ethernetif.c ****  * contained in the pbuf that is passed to the function. This pbuf
 271:../../CM7/LWIP/Target/ethernetif.c ****  * might be chained.
 272:../../CM7/LWIP/Target/ethernetif.c ****  *
 273:../../CM7/LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 274:../../CM7/LWIP/Target/ethernetif.c ****  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
 275:../../CM7/LWIP/Target/ethernetif.c ****  * @return ERR_OK if the packet could be sent
 276:../../CM7/LWIP/Target/ethernetif.c ****  *         an err_t value if the packet couldn't be sent
 277:../../CM7/LWIP/Target/ethernetif.c ****  *
 278:../../CM7/LWIP/Target/ethernetif.c ****  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
 279:../../CM7/LWIP/Target/ethernetif.c ****  *       strange results. You might consider waiting for space in the DMA queue
 280:../../CM7/LWIP/Target/ethernetif.c ****  *       to become available since the stack doesn't retry to send a packet
 281:../../CM7/LWIP/Target/ethernetif.c ****  *       dropped because of memory failure (except for the TCP timers).
 282:../../CM7/LWIP/Target/ethernetif.c ****  */
 283:../../CM7/LWIP/Target/ethernetif.c **** 
 284:../../CM7/LWIP/Target/ethernetif.c **** static err_t low_level_output(struct netif *netif, struct pbuf *p)
 285:../../CM7/LWIP/Target/ethernetif.c **** {
 286:../../CM7/LWIP/Target/ethernetif.c ****   uint32_t i = 0U;
 287:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *q = NULL;
 288:../../CM7/LWIP/Target/ethernetif.c ****   err_t errval = ERR_OK;
 289:../../CM7/LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef Txbuffer[ETH_TX_DESC_CNT] = {0};
 290:../../CM7/LWIP/Target/ethernetif.c **** 
 291:../../CM7/LWIP/Target/ethernetif.c ****   memset(Txbuffer, 0 , ETH_TX_DESC_CNT*sizeof(ETH_BufferTypeDef));
 292:../../CM7/LWIP/Target/ethernetif.c **** 
 293:../../CM7/LWIP/Target/ethernetif.c ****   for(q = p; q != NULL; q = q->next)
 294:../../CM7/LWIP/Target/ethernetif.c ****   {
 295:../../CM7/LWIP/Target/ethernetif.c ****     if(i >= ETH_TX_DESC_CNT)
 296:../../CM7/LWIP/Target/ethernetif.c ****       return ERR_IF;
 297:../../CM7/LWIP/Target/ethernetif.c **** 
 298:../../CM7/LWIP/Target/ethernetif.c ****     Txbuffer[i].buffer = q->payload;
 299:../../CM7/LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 300:../../CM7/LWIP/Target/ethernetif.c **** 
 301:../../CM7/LWIP/Target/ethernetif.c ****     if(i>0)
 302:../../CM7/LWIP/Target/ethernetif.c ****     {
 303:../../CM7/LWIP/Target/ethernetif.c ****       Txbuffer[i-1].next = &Txbuffer[i];
 304:../../CM7/LWIP/Target/ethernetif.c ****     }
 305:../../CM7/LWIP/Target/ethernetif.c **** 
 306:../../CM7/LWIP/Target/ethernetif.c ****     if(q->next == NULL)
 307:../../CM7/LWIP/Target/ethernetif.c ****     {
 308:../../CM7/LWIP/Target/ethernetif.c ****       Txbuffer[i].next = NULL;
 309:../../CM7/LWIP/Target/ethernetif.c ****     }
 310:../../CM7/LWIP/Target/ethernetif.c **** 
 311:../../CM7/LWIP/Target/ethernetif.c ****     i++;
 312:../../CM7/LWIP/Target/ethernetif.c ****   }
 313:../../CM7/LWIP/Target/ethernetif.c **** 
 314:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.Length = p->tot_len;
 315:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 316:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.pData = p;
ARM GAS  /tmp/ccM1xvf3.s 			page 7


 317:../../CM7/LWIP/Target/ethernetif.c **** 
 318:../../CM7/LWIP/Target/ethernetif.c ****   HAL_ETH_Transmit(&heth, &TxConfig, ETH_DMA_TRANSMIT_TIMEOUT);
 319:../../CM7/LWIP/Target/ethernetif.c **** 
 320:../../CM7/LWIP/Target/ethernetif.c ****   return errval;
 321:../../CM7/LWIP/Target/ethernetif.c **** }
 322:../../CM7/LWIP/Target/ethernetif.c **** 
 323:../../CM7/LWIP/Target/ethernetif.c **** /**
 324:../../CM7/LWIP/Target/ethernetif.c ****  * @brief Should allocate a pbuf and transfer the bytes of the incoming
 325:../../CM7/LWIP/Target/ethernetif.c ****  * packet from the interface into the pbuf.
 326:../../CM7/LWIP/Target/ethernetif.c ****  *
 327:../../CM7/LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 328:../../CM7/LWIP/Target/ethernetif.c ****  * @return a pbuf filled with the received packet (including MAC header)
 329:../../CM7/LWIP/Target/ethernetif.c ****  *         NULL on memory error
 330:../../CM7/LWIP/Target/ethernetif.c ****    */
 331:../../CM7/LWIP/Target/ethernetif.c **** static struct pbuf * low_level_input(struct netif *netif)
 332:../../CM7/LWIP/Target/ethernetif.c **** {
 333:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 334:../../CM7/LWIP/Target/ethernetif.c **** 
 335:../../CM7/LWIP/Target/ethernetif.c ****   if(RxAllocStatus == RX_ALLOC_OK)
 336:../../CM7/LWIP/Target/ethernetif.c ****   {
 337:../../CM7/LWIP/Target/ethernetif.c ****     HAL_ETH_ReadData(&heth, (void **)&p);
 338:../../CM7/LWIP/Target/ethernetif.c ****   }
 339:../../CM7/LWIP/Target/ethernetif.c **** 
 340:../../CM7/LWIP/Target/ethernetif.c ****   return p;
 341:../../CM7/LWIP/Target/ethernetif.c **** }
 342:../../CM7/LWIP/Target/ethernetif.c **** 
 343:../../CM7/LWIP/Target/ethernetif.c **** /**
 344:../../CM7/LWIP/Target/ethernetif.c ****  * @brief This function should be called when a packet is ready to be read
 345:../../CM7/LWIP/Target/ethernetif.c ****  * from the interface. It uses the function low_level_input() that
 346:../../CM7/LWIP/Target/ethernetif.c ****  * should handle the actual reception of bytes from the network
 347:../../CM7/LWIP/Target/ethernetif.c ****  * interface. Then the type of the received packet is determined and
 348:../../CM7/LWIP/Target/ethernetif.c ****  * the appropriate input function is called.
 349:../../CM7/LWIP/Target/ethernetif.c ****  *
 350:../../CM7/LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 351:../../CM7/LWIP/Target/ethernetif.c ****  */
 352:../../CM7/LWIP/Target/ethernetif.c **** void ethernetif_input(struct netif *netif)
 353:../../CM7/LWIP/Target/ethernetif.c **** {
 354:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 355:../../CM7/LWIP/Target/ethernetif.c **** 
 356:../../CM7/LWIP/Target/ethernetif.c ****   do
 357:../../CM7/LWIP/Target/ethernetif.c ****   {
 358:../../CM7/LWIP/Target/ethernetif.c ****     p = low_level_input( netif );
 359:../../CM7/LWIP/Target/ethernetif.c ****     if (p != NULL)
 360:../../CM7/LWIP/Target/ethernetif.c ****     {
 361:../../CM7/LWIP/Target/ethernetif.c ****       if (netif->input( p, netif) != ERR_OK )
 362:../../CM7/LWIP/Target/ethernetif.c ****       {
 363:../../CM7/LWIP/Target/ethernetif.c ****         pbuf_free(p);
 364:../../CM7/LWIP/Target/ethernetif.c ****       }
 365:../../CM7/LWIP/Target/ethernetif.c ****     }
 366:../../CM7/LWIP/Target/ethernetif.c ****   } while(p!=NULL);
 367:../../CM7/LWIP/Target/ethernetif.c **** }
 368:../../CM7/LWIP/Target/ethernetif.c **** 
 369:../../CM7/LWIP/Target/ethernetif.c **** #if !LWIP_ARP
 370:../../CM7/LWIP/Target/ethernetif.c **** /**
 371:../../CM7/LWIP/Target/ethernetif.c ****  * This function has to be completed by user in case of ARP OFF.
 372:../../CM7/LWIP/Target/ethernetif.c ****  *
 373:../../CM7/LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
ARM GAS  /tmp/ccM1xvf3.s 			page 8


 374:../../CM7/LWIP/Target/ethernetif.c ****  * @return ERR_OK if ...
 375:../../CM7/LWIP/Target/ethernetif.c ****  */
 376:../../CM7/LWIP/Target/ethernetif.c **** static err_t low_level_output_arp_off(struct netif *netif, struct pbuf *q, const ip4_addr_t *ipaddr
 377:../../CM7/LWIP/Target/ethernetif.c **** {
 378:../../CM7/LWIP/Target/ethernetif.c ****   err_t errval;
 379:../../CM7/LWIP/Target/ethernetif.c ****   errval = ERR_OK;
 380:../../CM7/LWIP/Target/ethernetif.c **** 
 381:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 5 */
 382:../../CM7/LWIP/Target/ethernetif.c **** 
 383:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END 5 */
 384:../../CM7/LWIP/Target/ethernetif.c **** 
 385:../../CM7/LWIP/Target/ethernetif.c ****   return errval;
 386:../../CM7/LWIP/Target/ethernetif.c **** 
 387:../../CM7/LWIP/Target/ethernetif.c **** }
 388:../../CM7/LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 389:../../CM7/LWIP/Target/ethernetif.c **** 
 390:../../CM7/LWIP/Target/ethernetif.c **** /**
 391:../../CM7/LWIP/Target/ethernetif.c ****  * @brief Should be called at the beginning of the program to set up the
 392:../../CM7/LWIP/Target/ethernetif.c ****  * network interface. It calls the function low_level_init() to do the
 393:../../CM7/LWIP/Target/ethernetif.c ****  * actual setup of the hardware.
 394:../../CM7/LWIP/Target/ethernetif.c ****  *
 395:../../CM7/LWIP/Target/ethernetif.c ****  * This function should be passed as a parameter to netif_add().
 396:../../CM7/LWIP/Target/ethernetif.c ****  *
 397:../../CM7/LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 398:../../CM7/LWIP/Target/ethernetif.c ****  * @return ERR_OK if the loopif is initialized
 399:../../CM7/LWIP/Target/ethernetif.c ****  *         ERR_MEM if private data couldn't be allocated
 400:../../CM7/LWIP/Target/ethernetif.c ****  *         any other err_t on error
 401:../../CM7/LWIP/Target/ethernetif.c ****  */
 402:../../CM7/LWIP/Target/ethernetif.c **** err_t ethernetif_init(struct netif *netif)
 403:../../CM7/LWIP/Target/ethernetif.c **** {
 404:../../CM7/LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 405:../../CM7/LWIP/Target/ethernetif.c **** 
 406:../../CM7/LWIP/Target/ethernetif.c **** #if LWIP_NETIF_HOSTNAME
 407:../../CM7/LWIP/Target/ethernetif.c ****   /* Initialize interface hostname */
 408:../../CM7/LWIP/Target/ethernetif.c ****   netif->hostname = "lwip";
 409:../../CM7/LWIP/Target/ethernetif.c **** #endif /* LWIP_NETIF_HOSTNAME */
 410:../../CM7/LWIP/Target/ethernetif.c **** 
 411:../../CM7/LWIP/Target/ethernetif.c ****   /*
 412:../../CM7/LWIP/Target/ethernetif.c ****    * Initialize the snmp variables and counters inside the struct netif.
 413:../../CM7/LWIP/Target/ethernetif.c ****    * The last argument should be replaced with your link speed, in units
 414:../../CM7/LWIP/Target/ethernetif.c ****    * of bits per second.
 415:../../CM7/LWIP/Target/ethernetif.c ****    */
 416:../../CM7/LWIP/Target/ethernetif.c ****   // MIB2_INIT_NETIF(netif, snmp_ifType_ethernet_csmacd, LINK_SPEED_OF_YOUR_NETIF_IN_BPS);
 417:../../CM7/LWIP/Target/ethernetif.c **** 
 418:../../CM7/LWIP/Target/ethernetif.c ****   netif->name[0] = IFNAME0;
 419:../../CM7/LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 420:../../CM7/LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 421:../../CM7/LWIP/Target/ethernetif.c ****    * You can instead declare your own function an call etharp_output()
 422:../../CM7/LWIP/Target/ethernetif.c ****    * from it if you have to do some checks before sending (e.g. if link
 423:../../CM7/LWIP/Target/ethernetif.c ****    * is available...) */
 424:../../CM7/LWIP/Target/ethernetif.c **** 
 425:../../CM7/LWIP/Target/ethernetif.c **** #if LWIP_IPV4
 426:../../CM7/LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 427:../../CM7/LWIP/Target/ethernetif.c **** #if LWIP_ARP
 428:../../CM7/LWIP/Target/ethernetif.c ****   netif->output = etharp_output;
 429:../../CM7/LWIP/Target/ethernetif.c **** #else
 430:../../CM7/LWIP/Target/ethernetif.c ****   /* The user should write its own code in low_level_output_arp_off function */
ARM GAS  /tmp/ccM1xvf3.s 			page 9


 431:../../CM7/LWIP/Target/ethernetif.c ****   netif->output = low_level_output_arp_off;
 432:../../CM7/LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 433:../../CM7/LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 434:../../CM7/LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV4 */
 435:../../CM7/LWIP/Target/ethernetif.c **** 
 436:../../CM7/LWIP/Target/ethernetif.c **** #if LWIP_IPV6
 437:../../CM7/LWIP/Target/ethernetif.c ****   netif->output_ip6 = ethip6_output;
 438:../../CM7/LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV6 */
 439:../../CM7/LWIP/Target/ethernetif.c **** 
 440:../../CM7/LWIP/Target/ethernetif.c ****   netif->linkoutput = low_level_output;
 441:../../CM7/LWIP/Target/ethernetif.c **** 
 442:../../CM7/LWIP/Target/ethernetif.c ****   /* initialize the hardware */
 443:../../CM7/LWIP/Target/ethernetif.c ****   low_level_init(netif);
 444:../../CM7/LWIP/Target/ethernetif.c **** 
 445:../../CM7/LWIP/Target/ethernetif.c ****   return ERR_OK;
 446:../../CM7/LWIP/Target/ethernetif.c **** }
 447:../../CM7/LWIP/Target/ethernetif.c **** 
 448:../../CM7/LWIP/Target/ethernetif.c **** /**
 449:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  Custom Rx pbuf free callback
 450:../../CM7/LWIP/Target/ethernetif.c ****   * @param  pbuf: pbuf to be freed
 451:../../CM7/LWIP/Target/ethernetif.c ****   * @retval None
 452:../../CM7/LWIP/Target/ethernetif.c ****   */
 453:../../CM7/LWIP/Target/ethernetif.c **** void pbuf_free_custom(struct pbuf *p)
 454:../../CM7/LWIP/Target/ethernetif.c **** {
 455:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf = (struct pbuf_custom*)p;
 456:../../CM7/LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_FREE(RX_POOL, custom_pbuf);
 457:../../CM7/LWIP/Target/ethernetif.c **** 
 458:../../CM7/LWIP/Target/ethernetif.c ****   /* If the Rx Buffer Pool was exhausted, signal the ethernetif_input task to
 459:../../CM7/LWIP/Target/ethernetif.c ****    * call HAL_ETH_GetRxDataBuffer to rebuild the Rx descriptors. */
 460:../../CM7/LWIP/Target/ethernetif.c **** 
 461:../../CM7/LWIP/Target/ethernetif.c ****   if (RxAllocStatus == RX_ALLOC_ERROR)
 462:../../CM7/LWIP/Target/ethernetif.c ****   {
 463:../../CM7/LWIP/Target/ethernetif.c ****     RxAllocStatus = RX_ALLOC_OK;
 464:../../CM7/LWIP/Target/ethernetif.c ****   }
 465:../../CM7/LWIP/Target/ethernetif.c **** }
 466:../../CM7/LWIP/Target/ethernetif.c **** 
 467:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 6 */
 468:../../CM7/LWIP/Target/ethernetif.c **** 
 469:../../CM7/LWIP/Target/ethernetif.c **** /**
 470:../../CM7/LWIP/Target/ethernetif.c **** * @brief  Returns the current time in milliseconds
 471:../../CM7/LWIP/Target/ethernetif.c **** *         when LWIP_TIMERS == 1 and NO_SYS == 1
 472:../../CM7/LWIP/Target/ethernetif.c **** * @param  None
 473:../../CM7/LWIP/Target/ethernetif.c **** * @retval Current Time value
 474:../../CM7/LWIP/Target/ethernetif.c **** */
 475:../../CM7/LWIP/Target/ethernetif.c **** u32_t sys_now(void)
 476:../../CM7/LWIP/Target/ethernetif.c **** {
 477:../../CM7/LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 478:../../CM7/LWIP/Target/ethernetif.c **** }
 479:../../CM7/LWIP/Target/ethernetif.c **** 
 480:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END 6 */
 481:../../CM7/LWIP/Target/ethernetif.c **** 
 482:../../CM7/LWIP/Target/ethernetif.c **** /**
 483:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  Initializes the ETH MSP.
 484:../../CM7/LWIP/Target/ethernetif.c ****   * @param  ethHandle: ETH handle
 485:../../CM7/LWIP/Target/ethernetif.c ****   * @retval None
 486:../../CM7/LWIP/Target/ethernetif.c ****   */
 487:../../CM7/LWIP/Target/ethernetif.c **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 10


 488:../../CM7/LWIP/Target/ethernetif.c **** void HAL_ETH_MspInit(ETH_HandleTypeDef* ethHandle)
 489:../../CM7/LWIP/Target/ethernetif.c **** {
 490:../../CM7/LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 491:../../CM7/LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 492:../../CM7/LWIP/Target/ethernetif.c ****   {
 493:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 0 */
 494:../../CM7/LWIP/Target/ethernetif.c **** 
 495:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspInit 0 */
 496:../../CM7/LWIP/Target/ethernetif.c ****     /* Enable Peripheral clock */
 497:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1MAC_CLK_ENABLE();
 498:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 499:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 500:../../CM7/LWIP/Target/ethernetif.c **** 
 501:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 502:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 503:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 504:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 505:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 506:../../CM7/LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 507:../../CM7/LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 508:../../CM7/LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 509:../../CM7/LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 510:../../CM7/LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 511:../../CM7/LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 512:../../CM7/LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 513:../../CM7/LWIP/Target/ethernetif.c ****     PG11     ------> ETH_TX_EN
 514:../../CM7/LWIP/Target/ethernetif.c ****     PG13     ------> ETH_TXD0
 515:../../CM7/LWIP/Target/ethernetif.c ****     */
 516:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5;
 517:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 518:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 519:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 520:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 521:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 522:../../CM7/LWIP/Target/ethernetif.c **** 
 523:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_7;
 524:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 525:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 526:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 527:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 528:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 529:../../CM7/LWIP/Target/ethernetif.c **** 
 530:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_13;
 531:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 532:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 533:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 534:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 535:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 536:../../CM7/LWIP/Target/ethernetif.c **** 
 537:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_13;
 538:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 539:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 540:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 541:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 542:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 543:../../CM7/LWIP/Target/ethernetif.c **** 
 544:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 1 */
ARM GAS  /tmp/ccM1xvf3.s 			page 11


 545:../../CM7/LWIP/Target/ethernetif.c **** 
 546:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspInit 1 */
 547:../../CM7/LWIP/Target/ethernetif.c ****   }
 548:../../CM7/LWIP/Target/ethernetif.c **** }
 549:../../CM7/LWIP/Target/ethernetif.c **** 
 550:../../CM7/LWIP/Target/ethernetif.c **** void HAL_ETH_MspDeInit(ETH_HandleTypeDef* ethHandle)
 551:../../CM7/LWIP/Target/ethernetif.c **** {
 552:../../CM7/LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 553:../../CM7/LWIP/Target/ethernetif.c ****   {
 554:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 0 */
 555:../../CM7/LWIP/Target/ethernetif.c **** 
 556:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 0 */
 557:../../CM7/LWIP/Target/ethernetif.c ****     /* Disable Peripheral clock */
 558:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1MAC_CLK_DISABLE();
 559:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_DISABLE();
 560:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_DISABLE();
 561:../../CM7/LWIP/Target/ethernetif.c **** 
 562:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 563:../../CM7/LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 564:../../CM7/LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 565:../../CM7/LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 566:../../CM7/LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 567:../../CM7/LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 568:../../CM7/LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 569:../../CM7/LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 570:../../CM7/LWIP/Target/ethernetif.c ****     PG11     ------> ETH_TX_EN
 571:../../CM7/LWIP/Target/ethernetif.c ****     PG13     ------> ETH_TXD0
 572:../../CM7/LWIP/Target/ethernetif.c ****     */
 573:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5);
 574:../../CM7/LWIP/Target/ethernetif.c **** 
 575:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_7);
 576:../../CM7/LWIP/Target/ethernetif.c **** 
 577:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_13);
 578:../../CM7/LWIP/Target/ethernetif.c **** 
 579:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOG, GPIO_PIN_11|GPIO_PIN_13);
 580:../../CM7/LWIP/Target/ethernetif.c **** 
 581:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 1 */
 582:../../CM7/LWIP/Target/ethernetif.c **** 
 583:../../CM7/LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 1 */
 584:../../CM7/LWIP/Target/ethernetif.c ****   }
 585:../../CM7/LWIP/Target/ethernetif.c **** }
 586:../../CM7/LWIP/Target/ethernetif.c **** 
 587:../../CM7/LWIP/Target/ethernetif.c **** /*******************************************************************************
 588:../../CM7/LWIP/Target/ethernetif.c ****                        PHI IO Functions
 589:../../CM7/LWIP/Target/ethernetif.c **** *******************************************************************************/
 590:../../CM7/LWIP/Target/ethernetif.c **** /**
 591:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  Initializes the MDIO interface GPIO and clocks.
 592:../../CM7/LWIP/Target/ethernetif.c ****   * @param  None
 593:../../CM7/LWIP/Target/ethernetif.c ****   * @retval 0 if OK, -1 if ERROR
 594:../../CM7/LWIP/Target/ethernetif.c ****   */
 595:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_Init(void)
 596:../../CM7/LWIP/Target/ethernetif.c **** {
 597:../../CM7/LWIP/Target/ethernetif.c ****   /* We assume that MDIO GPIO configuration is already done
 598:../../CM7/LWIP/Target/ethernetif.c ****      in the ETH_MspInit() else it should be done here
 599:../../CM7/LWIP/Target/ethernetif.c ****   */
 600:../../CM7/LWIP/Target/ethernetif.c **** 
 601:../../CM7/LWIP/Target/ethernetif.c ****   /* Configure the MDIO Clock */
ARM GAS  /tmp/ccM1xvf3.s 			page 12


 602:../../CM7/LWIP/Target/ethernetif.c ****   HAL_ETH_SetMDIOClockRange(&heth);
 603:../../CM7/LWIP/Target/ethernetif.c **** 
 604:../../CM7/LWIP/Target/ethernetif.c ****   return 0;
 605:../../CM7/LWIP/Target/ethernetif.c **** }
 606:../../CM7/LWIP/Target/ethernetif.c **** 
 607:../../CM7/LWIP/Target/ethernetif.c **** /**
 608:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  De-Initializes the MDIO interface .
 609:../../CM7/LWIP/Target/ethernetif.c ****   * @param  None
 610:../../CM7/LWIP/Target/ethernetif.c ****   * @retval 0 if OK, -1 if ERROR
 611:../../CM7/LWIP/Target/ethernetif.c ****   */
 612:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_DeInit (void)
 613:../../CM7/LWIP/Target/ethernetif.c **** {
  28              		.loc 1 613 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 614:../../CM7/LWIP/Target/ethernetif.c ****   return 0;
  33              		.loc 1 614 3 view .LVU1
 615:../../CM7/LWIP/Target/ethernetif.c **** }
  34              		.loc 1 615 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE180:
  40              		.section	.text.low_level_input,"ax",%progbits
  41              		.align	1
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	low_level_input:
  47              	.LVL0:
  48              	.LFB172:
 332:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
  49              		.loc 1 332 1 is_stmt 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 8
  52              		@ frame_needed = 0, uses_anonymous_args = 0
 332:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
  53              		.loc 1 332 1 is_stmt 0 view .LVU4
  54 0000 00B5     		push	{lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 14, -4
  58 0002 83B0     		sub	sp, sp, #12
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 16
 333:../../CM7/LWIP/Target/ethernetif.c **** 
  61              		.loc 1 333 3 is_stmt 1 view .LVU5
 333:../../CM7/LWIP/Target/ethernetif.c **** 
  62              		.loc 1 333 16 is_stmt 0 view .LVU6
  63 0004 0023     		movs	r3, #0
  64 0006 0193     		str	r3, [sp, #4]
 335:../../CM7/LWIP/Target/ethernetif.c ****   {
  65              		.loc 1 335 3 is_stmt 1 view .LVU7
 335:../../CM7/LWIP/Target/ethernetif.c ****   {
  66              		.loc 1 335 20 is_stmt 0 view .LVU8
ARM GAS  /tmp/ccM1xvf3.s 			page 13


  67 0008 054B     		ldr	r3, .L6
  68 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335:../../CM7/LWIP/Target/ethernetif.c ****   {
  69              		.loc 1 335 5 view .LVU9
  70 000c 1BB1     		cbz	r3, .L5
  71              	.LVL1:
  72              	.L3:
 340:../../CM7/LWIP/Target/ethernetif.c **** }
  73              		.loc 1 340 3 is_stmt 1 view .LVU10
 341:../../CM7/LWIP/Target/ethernetif.c **** 
  74              		.loc 1 341 1 is_stmt 0 view .LVU11
  75 000e 0198     		ldr	r0, [sp, #4]
  76 0010 03B0     		add	sp, sp, #12
  77              	.LCFI2:
  78              		.cfi_remember_state
  79              		.cfi_def_cfa_offset 4
  80              		@ sp needed
  81 0012 5DF804FB 		ldr	pc, [sp], #4
  82              	.LVL2:
  83              	.L5:
  84              	.LCFI3:
  85              		.cfi_restore_state
 337:../../CM7/LWIP/Target/ethernetif.c ****   }
  86              		.loc 1 337 5 is_stmt 1 view .LVU12
  87 0016 01A9     		add	r1, sp, #4
  88 0018 0248     		ldr	r0, .L6+4
  89              	.LVL3:
 337:../../CM7/LWIP/Target/ethernetif.c ****   }
  90              		.loc 1 337 5 is_stmt 0 view .LVU13
  91 001a FFF7FEFF 		bl	HAL_ETH_ReadData
  92              	.LVL4:
  93 001e F6E7     		b	.L3
  94              	.L7:
  95              		.align	2
  96              	.L6:
  97 0020 00000000 		.word	RxAllocStatus
  98 0024 00000000 		.word	heth
  99              		.cfi_endproc
 100              	.LFE172:
 102              		.section	.text.low_level_output,"ax",%progbits
 103              		.align	1
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	low_level_output:
 109              	.LVL5:
 110              	.LFB171:
 285:../../CM7/LWIP/Target/ethernetif.c ****   uint32_t i = 0U;
 111              		.loc 1 285 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 48
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 285:../../CM7/LWIP/Target/ethernetif.c ****   uint32_t i = 0U;
 115              		.loc 1 285 1 is_stmt 0 view .LVU15
 116 0000 70B5     		push	{r4, r5, r6, lr}
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccM1xvf3.s 			page 14


 119              		.cfi_offset 4, -16
 120              		.cfi_offset 5, -12
 121              		.cfi_offset 6, -8
 122              		.cfi_offset 14, -4
 123 0002 8CB0     		sub	sp, sp, #48
 124              	.LCFI5:
 125              		.cfi_def_cfa_offset 64
 126 0004 0C46     		mov	r4, r1
 286:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *q = NULL;
 127              		.loc 1 286 3 is_stmt 1 view .LVU16
 128              	.LVL6:
 287:../../CM7/LWIP/Target/ethernetif.c ****   err_t errval = ERR_OK;
 129              		.loc 1 287 3 view .LVU17
 288:../../CM7/LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef Txbuffer[ETH_TX_DESC_CNT] = {0};
 130              		.loc 1 288 3 view .LVU18
 289:../../CM7/LWIP/Target/ethernetif.c **** 
 131              		.loc 1 289 3 view .LVU19
 289:../../CM7/LWIP/Target/ethernetif.c **** 
 132              		.loc 1 289 21 is_stmt 0 view .LVU20
 133 0006 3026     		movs	r6, #48
 134 0008 3246     		mov	r2, r6
 135 000a 0021     		movs	r1, #0
 136              	.LVL7:
 289:../../CM7/LWIP/Target/ethernetif.c **** 
 137              		.loc 1 289 21 view .LVU21
 138 000c 6846     		mov	r0, sp
 139              	.LVL8:
 289:../../CM7/LWIP/Target/ethernetif.c **** 
 140              		.loc 1 289 21 view .LVU22
 141 000e FFF7FEFF 		bl	memset
 142              	.LVL9:
 291:../../CM7/LWIP/Target/ethernetif.c **** 
 143              		.loc 1 291 3 is_stmt 1 view .LVU23
 144 0012 3246     		mov	r2, r6
 145 0014 0021     		movs	r1, #0
 146 0016 6846     		mov	r0, sp
 147 0018 FFF7FEFF 		bl	memset
 148              	.LVL10:
 293:../../CM7/LWIP/Target/ethernetif.c ****   {
 149              		.loc 1 293 3 view .LVU24
 293:../../CM7/LWIP/Target/ethernetif.c ****   {
 150              		.loc 1 293 9 is_stmt 0 view .LVU25
 151 001c 2246     		mov	r2, r4
 286:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *q = NULL;
 152              		.loc 1 286 12 view .LVU26
 153 001e 0023     		movs	r3, #0
 293:../../CM7/LWIP/Target/ethernetif.c ****   {
 154              		.loc 1 293 3 view .LVU27
 155 0020 03E0     		b	.L9
 156              	.LVL11:
 157              	.L11:
 306:../../CM7/LWIP/Target/ethernetif.c ****     {
 158              		.loc 1 306 5 is_stmt 1 view .LVU28
 306:../../CM7/LWIP/Target/ethernetif.c ****     {
 159              		.loc 1 306 9 is_stmt 0 view .LVU29
 160 0022 1168     		ldr	r1, [r2]
 306:../../CM7/LWIP/Target/ethernetif.c ****     {
ARM GAS  /tmp/ccM1xvf3.s 			page 15


 161              		.loc 1 306 7 view .LVU30
 162 0024 E9B1     		cbz	r1, .L16
 163              	.L12:
 311:../../CM7/LWIP/Target/ethernetif.c ****   }
 164              		.loc 1 311 5 is_stmt 1 view .LVU31
 311:../../CM7/LWIP/Target/ethernetif.c ****   }
 165              		.loc 1 311 6 is_stmt 0 view .LVU32
 166 0026 0133     		adds	r3, r3, #1
 167              	.LVL12:
 293:../../CM7/LWIP/Target/ethernetif.c ****   {
 168              		.loc 1 293 27 is_stmt 1 discriminator 2 view .LVU33
 169 0028 1268     		ldr	r2, [r2]
 170              	.LVL13:
 171              	.L9:
 293:../../CM7/LWIP/Target/ethernetif.c ****   {
 172              		.loc 1 293 16 discriminator 1 view .LVU34
 173 002a 1AB3     		cbz	r2, .L17
 295:../../CM7/LWIP/Target/ethernetif.c ****       return ERR_IF;
 174              		.loc 1 295 5 view .LVU35
 295:../../CM7/LWIP/Target/ethernetif.c ****       return ERR_IF;
 175              		.loc 1 295 7 is_stmt 0 view .LVU36
 176 002c 032B     		cmp	r3, #3
 177 002e 2DD8     		bhi	.L14
 298:../../CM7/LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 178              		.loc 1 298 5 is_stmt 1 view .LVU37
 298:../../CM7/LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 179              		.loc 1 298 27 is_stmt 0 view .LVU38
 180 0030 5168     		ldr	r1, [r2, #4]
 298:../../CM7/LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 181              		.loc 1 298 24 view .LVU39
 182 0032 03EB4300 		add	r0, r3, r3, lsl #1
 183 0036 0CAD     		add	r5, sp, #48
 184 0038 05EB8000 		add	r0, r5, r0, lsl #2
 185 003c 40F8301C 		str	r1, [r0, #-48]
 299:../../CM7/LWIP/Target/ethernetif.c **** 
 186              		.loc 1 299 5 is_stmt 1 view .LVU40
 299:../../CM7/LWIP/Target/ethernetif.c **** 
 187              		.loc 1 299 24 is_stmt 0 view .LVU41
 188 0040 5189     		ldrh	r1, [r2, #10]
 299:../../CM7/LWIP/Target/ethernetif.c **** 
 189              		.loc 1 299 21 view .LVU42
 190 0042 40F82C1C 		str	r1, [r0, #-44]
 301:../../CM7/LWIP/Target/ethernetif.c ****     {
 191              		.loc 1 301 5 is_stmt 1 view .LVU43
 301:../../CM7/LWIP/Target/ethernetif.c ****     {
 192              		.loc 1 301 7 is_stmt 0 view .LVU44
 193 0046 002B     		cmp	r3, #0
 194 0048 EBD0     		beq	.L11
 303:../../CM7/LWIP/Target/ethernetif.c ****     }
 195              		.loc 1 303 7 is_stmt 1 view .LVU45
 303:../../CM7/LWIP/Target/ethernetif.c ****     }
 196              		.loc 1 303 17 is_stmt 0 view .LVU46
 197 004a 581E     		subs	r0, r3, #1
 303:../../CM7/LWIP/Target/ethernetif.c ****     }
 198              		.loc 1 303 28 view .LVU47
 199 004c 03EB430C 		add	ip, r3, r3, lsl #1
 200 0050 0DEB8C01 		add	r1, sp, ip, lsl #2
ARM GAS  /tmp/ccM1xvf3.s 			page 16


 303:../../CM7/LWIP/Target/ethernetif.c ****     }
 201              		.loc 1 303 26 view .LVU48
 202 0054 00EB4000 		add	r0, r0, r0, lsl #1
 203 0058 05EB8000 		add	r0, r5, r0, lsl #2
 204 005c 40F8281C 		str	r1, [r0, #-40]
 205 0060 DFE7     		b	.L11
 206              	.L16:
 308:../../CM7/LWIP/Target/ethernetif.c ****     }
 207              		.loc 1 308 7 is_stmt 1 view .LVU49
 308:../../CM7/LWIP/Target/ethernetif.c ****     }
 208              		.loc 1 308 24 is_stmt 0 view .LVU50
 209 0062 03EB4301 		add	r1, r3, r3, lsl #1
 210 0066 0CA8     		add	r0, sp, #48
 211 0068 00EB8101 		add	r1, r0, r1, lsl #2
 212 006c 0020     		movs	r0, #0
 213 006e 41F8280C 		str	r0, [r1, #-40]
 214 0072 D8E7     		b	.L12
 215              	.L17:
 314:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 216              		.loc 1 314 3 is_stmt 1 view .LVU51
 314:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 217              		.loc 1 314 22 is_stmt 0 view .LVU52
 218 0074 2389     		ldrh	r3, [r4, #8]
 219              	.LVL14:
 314:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 220              		.loc 1 314 19 view .LVU53
 221 0076 0749     		ldr	r1, .L18
 222 0078 4B60     		str	r3, [r1, #4]
 315:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.pData = p;
 223              		.loc 1 315 3 is_stmt 1 view .LVU54
 315:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.pData = p;
 224              		.loc 1 315 21 is_stmt 0 view .LVU55
 225 007a C1F808D0 		str	sp, [r1, #8]
 316:../../CM7/LWIP/Target/ethernetif.c **** 
 226              		.loc 1 316 3 is_stmt 1 view .LVU56
 316:../../CM7/LWIP/Target/ethernetif.c **** 
 227              		.loc 1 316 18 is_stmt 0 view .LVU57
 228 007e 4C63     		str	r4, [r1, #52]
 318:../../CM7/LWIP/Target/ethernetif.c **** 
 229              		.loc 1 318 3 is_stmt 1 view .LVU58
 230 0080 1422     		movs	r2, #20
 231              	.LVL15:
 318:../../CM7/LWIP/Target/ethernetif.c **** 
 232              		.loc 1 318 3 is_stmt 0 view .LVU59
 233 0082 0548     		ldr	r0, .L18+4
 234 0084 FFF7FEFF 		bl	HAL_ETH_Transmit
 235              	.LVL16:
 320:../../CM7/LWIP/Target/ethernetif.c **** }
 236              		.loc 1 320 3 is_stmt 1 view .LVU60
 320:../../CM7/LWIP/Target/ethernetif.c **** }
 237              		.loc 1 320 10 is_stmt 0 view .LVU61
 238 0088 0020     		movs	r0, #0
 239 008a 01E0     		b	.L10
 240              	.LVL17:
 241              	.L14:
 296:../../CM7/LWIP/Target/ethernetif.c **** 
 242              		.loc 1 296 14 view .LVU62
ARM GAS  /tmp/ccM1xvf3.s 			page 17


 243 008c 6FF00B00 		mvn	r0, #11
 244              	.LVL18:
 245              	.L10:
 321:../../CM7/LWIP/Target/ethernetif.c **** 
 246              		.loc 1 321 1 view .LVU63
 247 0090 0CB0     		add	sp, sp, #48
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 16
 250              		@ sp needed
 251 0092 70BD     		pop	{r4, r5, r6, pc}
 252              	.LVL19:
 253              	.L19:
 321:../../CM7/LWIP/Target/ethernetif.c **** 
 254              		.loc 1 321 1 view .LVU64
 255              		.align	2
 256              	.L18:
 257 0094 00000000 		.word	TxConfig
 258 0098 00000000 		.word	heth
 259              		.cfi_endproc
 260              	.LFE171:
 262              		.section	.text.pbuf_free_custom,"ax",%progbits
 263              		.align	1
 264              		.global	pbuf_free_custom
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	pbuf_free_custom:
 270              	.LVL20:
 271              	.LFB175:
 454:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf = (struct pbuf_custom*)p;
 272              		.loc 1 454 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 454:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf = (struct pbuf_custom*)p;
 276              		.loc 1 454 1 is_stmt 0 view .LVU66
 277 0000 08B5     		push	{r3, lr}
 278              	.LCFI7:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
 282 0002 0146     		mov	r1, r0
 455:../../CM7/LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_FREE(RX_POOL, custom_pbuf);
 283              		.loc 1 455 3 is_stmt 1 view .LVU67
 284              	.LVL21:
 456:../../CM7/LWIP/Target/ethernetif.c **** 
 285              		.loc 1 456 3 view .LVU68
 286 0004 0548     		ldr	r0, .L24
 287              	.LVL22:
 456:../../CM7/LWIP/Target/ethernetif.c **** 
 288              		.loc 1 456 3 is_stmt 0 view .LVU69
 289 0006 FFF7FEFF 		bl	memp_free_pool
 290              	.LVL23:
 461:../../CM7/LWIP/Target/ethernetif.c ****   {
 291              		.loc 1 461 3 is_stmt 1 view .LVU70
 461:../../CM7/LWIP/Target/ethernetif.c ****   {
 292              		.loc 1 461 21 is_stmt 0 view .LVU71
ARM GAS  /tmp/ccM1xvf3.s 			page 18


 293 000a 054B     		ldr	r3, .L24+4
 294 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 461:../../CM7/LWIP/Target/ethernetif.c ****   {
 295              		.loc 1 461 6 view .LVU72
 296 000e 012B     		cmp	r3, #1
 297 0010 00D0     		beq	.L23
 298              	.L20:
 465:../../CM7/LWIP/Target/ethernetif.c **** 
 299              		.loc 1 465 1 view .LVU73
 300 0012 08BD     		pop	{r3, pc}
 301              	.L23:
 463:../../CM7/LWIP/Target/ethernetif.c ****   }
 302              		.loc 1 463 5 is_stmt 1 view .LVU74
 463:../../CM7/LWIP/Target/ethernetif.c ****   }
 303              		.loc 1 463 19 is_stmt 0 view .LVU75
 304 0014 024B     		ldr	r3, .L24+4
 305 0016 0022     		movs	r2, #0
 306 0018 1A70     		strb	r2, [r3]
 465:../../CM7/LWIP/Target/ethernetif.c **** 
 307              		.loc 1 465 1 view .LVU76
 308 001a FAE7     		b	.L20
 309              	.L25:
 310              		.align	2
 311              	.L24:
 312 001c 00000000 		.word	memp_RX_POOL
 313 0020 00000000 		.word	RxAllocStatus
 314              		.cfi_endproc
 315              	.LFE175:
 317              		.section	.text.ETH_PHY_IO_GetTick,"ax",%progbits
 318              		.align	1
 319              		.global	ETH_PHY_IO_GetTick
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	ETH_PHY_IO_GetTick:
 325              	.LFB183:
 616:../../CM7/LWIP/Target/ethernetif.c **** 
 617:../../CM7/LWIP/Target/ethernetif.c **** /**
 618:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  Read a PHY register through the MDIO interface.
 619:../../CM7/LWIP/Target/ethernetif.c ****   * @param  DevAddr: PHY port address
 620:../../CM7/LWIP/Target/ethernetif.c ****   * @param  RegAddr: PHY register address
 621:../../CM7/LWIP/Target/ethernetif.c ****   * @param  pRegVal: pointer to hold the register value
 622:../../CM7/LWIP/Target/ethernetif.c ****   * @retval 0 if OK -1 if Error
 623:../../CM7/LWIP/Target/ethernetif.c ****   */
 624:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_ReadReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t *pRegVal)
 625:../../CM7/LWIP/Target/ethernetif.c **** {
 626:../../CM7/LWIP/Target/ethernetif.c ****   if(HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 627:../../CM7/LWIP/Target/ethernetif.c ****   {
 628:../../CM7/LWIP/Target/ethernetif.c ****     return -1;
 629:../../CM7/LWIP/Target/ethernetif.c ****   }
 630:../../CM7/LWIP/Target/ethernetif.c **** 
 631:../../CM7/LWIP/Target/ethernetif.c ****   return 0;
 632:../../CM7/LWIP/Target/ethernetif.c **** }
 633:../../CM7/LWIP/Target/ethernetif.c **** 
 634:../../CM7/LWIP/Target/ethernetif.c **** /**
 635:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  Write a value to a PHY register through the MDIO interface.
 636:../../CM7/LWIP/Target/ethernetif.c ****   * @param  DevAddr: PHY port address
ARM GAS  /tmp/ccM1xvf3.s 			page 19


 637:../../CM7/LWIP/Target/ethernetif.c ****   * @param  RegAddr: PHY register address
 638:../../CM7/LWIP/Target/ethernetif.c ****   * @param  RegVal: Value to be written
 639:../../CM7/LWIP/Target/ethernetif.c ****   * @retval 0 if OK -1 if Error
 640:../../CM7/LWIP/Target/ethernetif.c ****   */
 641:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_WriteReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t RegVal)
 642:../../CM7/LWIP/Target/ethernetif.c **** {
 643:../../CM7/LWIP/Target/ethernetif.c ****   if(HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 644:../../CM7/LWIP/Target/ethernetif.c ****   {
 645:../../CM7/LWIP/Target/ethernetif.c ****     return -1;
 646:../../CM7/LWIP/Target/ethernetif.c ****   }
 647:../../CM7/LWIP/Target/ethernetif.c **** 
 648:../../CM7/LWIP/Target/ethernetif.c ****   return 0;
 649:../../CM7/LWIP/Target/ethernetif.c **** }
 650:../../CM7/LWIP/Target/ethernetif.c **** 
 651:../../CM7/LWIP/Target/ethernetif.c **** /**
 652:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  Get the time in millisecons used for internal PHY driver process.
 653:../../CM7/LWIP/Target/ethernetif.c ****   * @retval Time value
 654:../../CM7/LWIP/Target/ethernetif.c ****   */
 655:../../CM7/LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_GetTick(void)
 656:../../CM7/LWIP/Target/ethernetif.c **** {
 326              		.loc 1 656 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330 0000 08B5     		push	{r3, lr}
 331              	.LCFI8:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 657:../../CM7/LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 335              		.loc 1 657 3 view .LVU78
 336              		.loc 1 657 10 is_stmt 0 view .LVU79
 337 0002 FFF7FEFF 		bl	HAL_GetTick
 338              	.LVL24:
 658:../../CM7/LWIP/Target/ethernetif.c **** }
 339              		.loc 1 658 1 view .LVU80
 340 0006 08BD     		pop	{r3, pc}
 341              		.cfi_endproc
 342              	.LFE183:
 344              		.section	.text.ETH_PHY_IO_Init,"ax",%progbits
 345              		.align	1
 346              		.global	ETH_PHY_IO_Init
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	ETH_PHY_IO_Init:
 352              	.LFB179:
 596:../../CM7/LWIP/Target/ethernetif.c ****   /* We assume that MDIO GPIO configuration is already done
 353              		.loc 1 596 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 08B5     		push	{r3, lr}
 358              	.LCFI9:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
ARM GAS  /tmp/ccM1xvf3.s 			page 20


 602:../../CM7/LWIP/Target/ethernetif.c **** 
 362              		.loc 1 602 3 view .LVU82
 363 0002 0248     		ldr	r0, .L30
 364 0004 FFF7FEFF 		bl	HAL_ETH_SetMDIOClockRange
 365              	.LVL25:
 604:../../CM7/LWIP/Target/ethernetif.c **** }
 366              		.loc 1 604 3 view .LVU83
 605:../../CM7/LWIP/Target/ethernetif.c **** 
 367              		.loc 1 605 1 is_stmt 0 view .LVU84
 368 0008 0020     		movs	r0, #0
 369 000a 08BD     		pop	{r3, pc}
 370              	.L31:
 371              		.align	2
 372              	.L30:
 373 000c 00000000 		.word	heth
 374              		.cfi_endproc
 375              	.LFE179:
 377              		.section	.text.ETH_PHY_IO_ReadReg,"ax",%progbits
 378              		.align	1
 379              		.global	ETH_PHY_IO_ReadReg
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	ETH_PHY_IO_ReadReg:
 385              	.LVL26:
 386              	.LFB181:
 625:../../CM7/LWIP/Target/ethernetif.c ****   if(HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 387              		.loc 1 625 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 625:../../CM7/LWIP/Target/ethernetif.c ****   if(HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 391              		.loc 1 625 1 is_stmt 0 view .LVU86
 392 0000 08B5     		push	{r3, lr}
 393              	.LCFI10:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 3, -8
 396              		.cfi_offset 14, -4
 397 0002 1346     		mov	r3, r2
 626:../../CM7/LWIP/Target/ethernetif.c ****   {
 398              		.loc 1 626 3 is_stmt 1 view .LVU87
 626:../../CM7/LWIP/Target/ethernetif.c ****   {
 399              		.loc 1 626 6 is_stmt 0 view .LVU88
 400 0004 0A46     		mov	r2, r1
 401              	.LVL27:
 626:../../CM7/LWIP/Target/ethernetif.c ****   {
 402              		.loc 1 626 6 view .LVU89
 403 0006 0146     		mov	r1, r0
 404              	.LVL28:
 626:../../CM7/LWIP/Target/ethernetif.c ****   {
 405              		.loc 1 626 6 view .LVU90
 406 0008 0348     		ldr	r0, .L37
 407              	.LVL29:
 626:../../CM7/LWIP/Target/ethernetif.c ****   {
 408              		.loc 1 626 6 view .LVU91
 409 000a FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 410              	.LVL30:
ARM GAS  /tmp/ccM1xvf3.s 			page 21


 626:../../CM7/LWIP/Target/ethernetif.c ****   {
 411              		.loc 1 626 5 discriminator 1 view .LVU92
 412 000e 00B9     		cbnz	r0, .L36
 413              	.L32:
 632:../../CM7/LWIP/Target/ethernetif.c **** 
 414              		.loc 1 632 1 view .LVU93
 415 0010 08BD     		pop	{r3, pc}
 416              	.L36:
 628:../../CM7/LWIP/Target/ethernetif.c ****   }
 417              		.loc 1 628 12 view .LVU94
 418 0012 4FF0FF30 		mov	r0, #-1
 419 0016 FBE7     		b	.L32
 420              	.L38:
 421              		.align	2
 422              	.L37:
 423 0018 00000000 		.word	heth
 424              		.cfi_endproc
 425              	.LFE181:
 427              		.section	.text.ETH_PHY_IO_WriteReg,"ax",%progbits
 428              		.align	1
 429              		.global	ETH_PHY_IO_WriteReg
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	ETH_PHY_IO_WriteReg:
 435              	.LVL31:
 436              	.LFB182:
 642:../../CM7/LWIP/Target/ethernetif.c ****   if(HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 437              		.loc 1 642 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 642:../../CM7/LWIP/Target/ethernetif.c ****   if(HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 441              		.loc 1 642 1 is_stmt 0 view .LVU96
 442 0000 08B5     		push	{r3, lr}
 443              	.LCFI11:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 3, -8
 446              		.cfi_offset 14, -4
 447 0002 1346     		mov	r3, r2
 643:../../CM7/LWIP/Target/ethernetif.c ****   {
 448              		.loc 1 643 3 is_stmt 1 view .LVU97
 643:../../CM7/LWIP/Target/ethernetif.c ****   {
 449              		.loc 1 643 6 is_stmt 0 view .LVU98
 450 0004 0A46     		mov	r2, r1
 451              	.LVL32:
 643:../../CM7/LWIP/Target/ethernetif.c ****   {
 452              		.loc 1 643 6 view .LVU99
 453 0006 0146     		mov	r1, r0
 454              	.LVL33:
 643:../../CM7/LWIP/Target/ethernetif.c ****   {
 455              		.loc 1 643 6 view .LVU100
 456 0008 0348     		ldr	r0, .L44
 457              	.LVL34:
 643:../../CM7/LWIP/Target/ethernetif.c ****   {
 458              		.loc 1 643 6 view .LVU101
 459 000a FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
ARM GAS  /tmp/ccM1xvf3.s 			page 22


 460              	.LVL35:
 643:../../CM7/LWIP/Target/ethernetif.c ****   {
 461              		.loc 1 643 5 discriminator 1 view .LVU102
 462 000e 00B9     		cbnz	r0, .L43
 463              	.L39:
 649:../../CM7/LWIP/Target/ethernetif.c **** 
 464              		.loc 1 649 1 view .LVU103
 465 0010 08BD     		pop	{r3, pc}
 466              	.L43:
 645:../../CM7/LWIP/Target/ethernetif.c ****   }
 467              		.loc 1 645 12 view .LVU104
 468 0012 4FF0FF30 		mov	r0, #-1
 469 0016 FBE7     		b	.L39
 470              	.L45:
 471              		.align	2
 472              	.L44:
 473 0018 00000000 		.word	heth
 474              		.cfi_endproc
 475              	.LFE182:
 477              		.section	.text.ethernetif_input,"ax",%progbits
 478              		.align	1
 479              		.global	ethernetif_input
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 484              	ethernetif_input:
 485              	.LVL36:
 486              	.LFB173:
 353:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 487              		.loc 1 353 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 353:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 491              		.loc 1 353 1 is_stmt 0 view .LVU106
 492 0000 38B5     		push	{r3, r4, r5, lr}
 493              	.LCFI12:
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 3, -16
 496              		.cfi_offset 4, -12
 497              		.cfi_offset 5, -8
 498              		.cfi_offset 14, -4
 499 0002 0546     		mov	r5, r0
 354:../../CM7/LWIP/Target/ethernetif.c **** 
 500              		.loc 1 354 3 is_stmt 1 view .LVU107
 501              	.LVL37:
 354:../../CM7/LWIP/Target/ethernetif.c **** 
 502              		.loc 1 354 3 is_stmt 0 view .LVU108
 503 0004 00E0     		b	.L48
 504              	.LVL38:
 505              	.L47:
 366:../../CM7/LWIP/Target/ethernetif.c **** }
 506              		.loc 1 366 12 is_stmt 1 view .LVU109
 507 0006 74B1     		cbz	r4, .L50
 508              	.LVL39:
 509              	.L48:
 356:../../CM7/LWIP/Target/ethernetif.c ****   {
ARM GAS  /tmp/ccM1xvf3.s 			page 23


 510              		.loc 1 356 3 view .LVU110
 358:../../CM7/LWIP/Target/ethernetif.c ****     if (p != NULL)
 511              		.loc 1 358 5 view .LVU111
 358:../../CM7/LWIP/Target/ethernetif.c ****     if (p != NULL)
 512              		.loc 1 358 9 is_stmt 0 view .LVU112
 513 0008 2846     		mov	r0, r5
 514 000a FFF7FEFF 		bl	low_level_input
 515              	.LVL40:
 359:../../CM7/LWIP/Target/ethernetif.c ****     {
 516              		.loc 1 359 5 is_stmt 1 view .LVU113
 359:../../CM7/LWIP/Target/ethernetif.c ****     {
 517              		.loc 1 359 8 is_stmt 0 view .LVU114
 518 000e 0446     		mov	r4, r0
 519 0010 0028     		cmp	r0, #0
 520 0012 F8D0     		beq	.L47
 361:../../CM7/LWIP/Target/ethernetif.c ****       {
 521              		.loc 1 361 7 is_stmt 1 view .LVU115
 361:../../CM7/LWIP/Target/ethernetif.c ****       {
 522              		.loc 1 361 16 is_stmt 0 view .LVU116
 523 0014 2B69     		ldr	r3, [r5, #16]
 361:../../CM7/LWIP/Target/ethernetif.c ****       {
 524              		.loc 1 361 11 view .LVU117
 525 0016 2946     		mov	r1, r5
 526 0018 9847     		blx	r3
 527              	.LVL41:
 361:../../CM7/LWIP/Target/ethernetif.c ****       {
 528              		.loc 1 361 10 discriminator 1 view .LVU118
 529 001a 0028     		cmp	r0, #0
 530 001c F3D0     		beq	.L47
 363:../../CM7/LWIP/Target/ethernetif.c ****       }
 531              		.loc 1 363 9 is_stmt 1 view .LVU119
 532 001e 2046     		mov	r0, r4
 533 0020 FFF7FEFF 		bl	pbuf_free
 534              	.LVL42:
 535 0024 EFE7     		b	.L47
 536              	.L50:
 367:../../CM7/LWIP/Target/ethernetif.c **** 
 537              		.loc 1 367 1 is_stmt 0 view .LVU120
 538 0026 38BD     		pop	{r3, r4, r5, pc}
 367:../../CM7/LWIP/Target/ethernetif.c **** 
 539              		.loc 1 367 1 view .LVU121
 540              		.cfi_endproc
 541              	.LFE173:
 543              		.section	.text.sys_now,"ax",%progbits
 544              		.align	1
 545              		.global	sys_now
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	sys_now:
 551              	.LFB176:
 476:../../CM7/LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 552              		.loc 1 476 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccM1xvf3.s 			page 24


 557              	.LCFI13:
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 3, -8
 560              		.cfi_offset 14, -4
 477:../../CM7/LWIP/Target/ethernetif.c **** }
 561              		.loc 1 477 3 view .LVU123
 477:../../CM7/LWIP/Target/ethernetif.c **** }
 562              		.loc 1 477 10 is_stmt 0 view .LVU124
 563 0002 FFF7FEFF 		bl	HAL_GetTick
 564              	.LVL43:
 478:../../CM7/LWIP/Target/ethernetif.c **** 
 565              		.loc 1 478 1 view .LVU125
 566 0006 08BD     		pop	{r3, pc}
 567              		.cfi_endproc
 568              	.LFE176:
 570              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 571              		.align	1
 572              		.global	HAL_ETH_MspInit
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	HAL_ETH_MspInit:
 578              	.LVL44:
 579              	.LFB177:
 489:../../CM7/LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 580              		.loc 1 489 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 48
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 489:../../CM7/LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 584              		.loc 1 489 1 is_stmt 0 view .LVU127
 585 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 586              	.LCFI14:
 587              		.cfi_def_cfa_offset 20
 588              		.cfi_offset 4, -20
 589              		.cfi_offset 5, -16
 590              		.cfi_offset 6, -12
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 8DB0     		sub	sp, sp, #52
 594              	.LCFI15:
 595              		.cfi_def_cfa_offset 72
 490:../../CM7/LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 596              		.loc 1 490 3 is_stmt 1 view .LVU128
 490:../../CM7/LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 597              		.loc 1 490 20 is_stmt 0 view .LVU129
 598 0004 0023     		movs	r3, #0
 599 0006 0793     		str	r3, [sp, #28]
 600 0008 0893     		str	r3, [sp, #32]
 601 000a 0993     		str	r3, [sp, #36]
 602 000c 0A93     		str	r3, [sp, #40]
 603 000e 0B93     		str	r3, [sp, #44]
 491:../../CM7/LWIP/Target/ethernetif.c ****   {
 604              		.loc 1 491 3 is_stmt 1 view .LVU130
 491:../../CM7/LWIP/Target/ethernetif.c ****   {
 605              		.loc 1 491 15 is_stmt 0 view .LVU131
 606 0010 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccM1xvf3.s 			page 25


 491:../../CM7/LWIP/Target/ethernetif.c ****   {
 607              		.loc 1 491 5 view .LVU132
 608 0012 434B     		ldr	r3, .L57
 609 0014 9A42     		cmp	r2, r3
 610 0016 01D0     		beq	.L56
 611              	.LVL45:
 612              	.L53:
 548:../../CM7/LWIP/Target/ethernetif.c **** 
 613              		.loc 1 548 1 view .LVU133
 614 0018 0DB0     		add	sp, sp, #52
 615              	.LCFI16:
 616              		.cfi_remember_state
 617              		.cfi_def_cfa_offset 20
 618              		@ sp needed
 619 001a F0BD     		pop	{r4, r5, r6, r7, pc}
 620              	.LVL46:
 621              	.L56:
 622              	.LCFI17:
 623              		.cfi_restore_state
 497:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 624              		.loc 1 497 5 is_stmt 1 view .LVU134
 625              	.LBB18:
 497:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 626              		.loc 1 497 5 view .LVU135
 497:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 627              		.loc 1 497 5 view .LVU136
 628 001c 414B     		ldr	r3, .L57+4
 629 001e D3F8D820 		ldr	r2, [r3, #216]
 630 0022 42F40042 		orr	r2, r2, #32768
 631 0026 C3F8D820 		str	r2, [r3, #216]
 497:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 632              		.loc 1 497 5 view .LVU137
 633 002a D3F8D820 		ldr	r2, [r3, #216]
 634 002e 02F40042 		and	r2, r2, #32768
 635 0032 0092     		str	r2, [sp]
 497:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 636              		.loc 1 497 5 view .LVU138
 637 0034 009A     		ldr	r2, [sp]
 638              	.LBE18:
 497:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 639              		.loc 1 497 5 view .LVU139
 498:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 640              		.loc 1 498 5 view .LVU140
 641              	.LBB19:
 498:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 642              		.loc 1 498 5 view .LVU141
 498:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 643              		.loc 1 498 5 view .LVU142
 644 0036 D3F8D820 		ldr	r2, [r3, #216]
 645 003a 42F48032 		orr	r2, r2, #65536
 646 003e C3F8D820 		str	r2, [r3, #216]
 498:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 647              		.loc 1 498 5 view .LVU143
 648 0042 D3F8D820 		ldr	r2, [r3, #216]
 649 0046 02F48032 		and	r2, r2, #65536
 650 004a 0192     		str	r2, [sp, #4]
 498:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
ARM GAS  /tmp/ccM1xvf3.s 			page 26


 651              		.loc 1 498 5 view .LVU144
 652 004c 019A     		ldr	r2, [sp, #4]
 653              	.LBE19:
 498:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 654              		.loc 1 498 5 view .LVU145
 499:../../CM7/LWIP/Target/ethernetif.c **** 
 655              		.loc 1 499 5 view .LVU146
 656              	.LBB20:
 499:../../CM7/LWIP/Target/ethernetif.c **** 
 657              		.loc 1 499 5 view .LVU147
 499:../../CM7/LWIP/Target/ethernetif.c **** 
 658              		.loc 1 499 5 view .LVU148
 659 004e D3F8D820 		ldr	r2, [r3, #216]
 660 0052 42F40032 		orr	r2, r2, #131072
 661 0056 C3F8D820 		str	r2, [r3, #216]
 499:../../CM7/LWIP/Target/ethernetif.c **** 
 662              		.loc 1 499 5 view .LVU149
 663 005a D3F8D820 		ldr	r2, [r3, #216]
 664 005e 02F40032 		and	r2, r2, #131072
 665 0062 0292     		str	r2, [sp, #8]
 499:../../CM7/LWIP/Target/ethernetif.c **** 
 666              		.loc 1 499 5 view .LVU150
 667 0064 029A     		ldr	r2, [sp, #8]
 668              	.LBE20:
 499:../../CM7/LWIP/Target/ethernetif.c **** 
 669              		.loc 1 499 5 view .LVU151
 501:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 670              		.loc 1 501 5 view .LVU152
 671              	.LBB21:
 501:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 672              		.loc 1 501 5 view .LVU153
 501:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 673              		.loc 1 501 5 view .LVU154
 674 0066 D3F8E020 		ldr	r2, [r3, #224]
 675 006a 42F00402 		orr	r2, r2, #4
 676 006e C3F8E020 		str	r2, [r3, #224]
 501:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 677              		.loc 1 501 5 view .LVU155
 678 0072 D3F8E020 		ldr	r2, [r3, #224]
 679 0076 02F00402 		and	r2, r2, #4
 680 007a 0392     		str	r2, [sp, #12]
 501:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 681              		.loc 1 501 5 view .LVU156
 682 007c 039A     		ldr	r2, [sp, #12]
 683              	.LBE21:
 501:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 684              		.loc 1 501 5 view .LVU157
 502:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 685              		.loc 1 502 5 view .LVU158
 686              	.LBB22:
 502:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 687              		.loc 1 502 5 view .LVU159
 502:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 688              		.loc 1 502 5 view .LVU160
 689 007e D3F8E020 		ldr	r2, [r3, #224]
 690 0082 42F00102 		orr	r2, r2, #1
 691 0086 C3F8E020 		str	r2, [r3, #224]
ARM GAS  /tmp/ccM1xvf3.s 			page 27


 502:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 692              		.loc 1 502 5 view .LVU161
 693 008a D3F8E020 		ldr	r2, [r3, #224]
 694 008e 02F00102 		and	r2, r2, #1
 695 0092 0492     		str	r2, [sp, #16]
 502:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 696              		.loc 1 502 5 view .LVU162
 697 0094 049A     		ldr	r2, [sp, #16]
 698              	.LBE22:
 502:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 699              		.loc 1 502 5 view .LVU163
 503:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 700              		.loc 1 503 5 view .LVU164
 701              	.LBB23:
 503:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 702              		.loc 1 503 5 view .LVU165
 503:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 703              		.loc 1 503 5 view .LVU166
 704 0096 D3F8E020 		ldr	r2, [r3, #224]
 705 009a 42F00202 		orr	r2, r2, #2
 706 009e C3F8E020 		str	r2, [r3, #224]
 503:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 707              		.loc 1 503 5 view .LVU167
 708 00a2 D3F8E020 		ldr	r2, [r3, #224]
 709 00a6 02F00202 		and	r2, r2, #2
 710 00aa 0592     		str	r2, [sp, #20]
 503:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 711              		.loc 1 503 5 view .LVU168
 712 00ac 059A     		ldr	r2, [sp, #20]
 713              	.LBE23:
 503:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 714              		.loc 1 503 5 view .LVU169
 504:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 715              		.loc 1 504 5 view .LVU170
 716              	.LBB24:
 504:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 717              		.loc 1 504 5 view .LVU171
 504:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 718              		.loc 1 504 5 view .LVU172
 719 00ae D3F8E020 		ldr	r2, [r3, #224]
 720 00b2 42F04002 		orr	r2, r2, #64
 721 00b6 C3F8E020 		str	r2, [r3, #224]
 504:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 722              		.loc 1 504 5 view .LVU173
 723 00ba D3F8E030 		ldr	r3, [r3, #224]
 724 00be 03F04003 		and	r3, r3, #64
 725 00c2 0693     		str	r3, [sp, #24]
 504:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 726              		.loc 1 504 5 view .LVU174
 727 00c4 069B     		ldr	r3, [sp, #24]
 728              	.LBE24:
 504:../../CM7/LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 729              		.loc 1 504 5 view .LVU175
 516:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 730              		.loc 1 516 5 view .LVU176
 516:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 731              		.loc 1 516 25 is_stmt 0 view .LVU177
ARM GAS  /tmp/ccM1xvf3.s 			page 28


 732 00c6 3223     		movs	r3, #50
 733 00c8 0793     		str	r3, [sp, #28]
 517:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 734              		.loc 1 517 5 is_stmt 1 view .LVU178
 517:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 735              		.loc 1 517 26 is_stmt 0 view .LVU179
 736 00ca 0227     		movs	r7, #2
 737 00cc 0897     		str	r7, [sp, #32]
 518:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 738              		.loc 1 518 5 is_stmt 1 view .LVU180
 519:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 739              		.loc 1 519 5 view .LVU181
 520:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 740              		.loc 1 520 5 view .LVU182
 520:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 741              		.loc 1 520 31 is_stmt 0 view .LVU183
 742 00ce 0B26     		movs	r6, #11
 743 00d0 0B96     		str	r6, [sp, #44]
 521:../../CM7/LWIP/Target/ethernetif.c **** 
 744              		.loc 1 521 5 is_stmt 1 view .LVU184
 745 00d2 07AD     		add	r5, sp, #28
 746 00d4 2946     		mov	r1, r5
 747 00d6 1448     		ldr	r0, .L57+8
 748              	.LVL47:
 521:../../CM7/LWIP/Target/ethernetif.c **** 
 749              		.loc 1 521 5 is_stmt 0 view .LVU185
 750 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 751              	.LVL48:
 523:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 752              		.loc 1 523 5 is_stmt 1 view .LVU186
 523:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 753              		.loc 1 523 25 is_stmt 0 view .LVU187
 754 00dc 8623     		movs	r3, #134
 755 00de 0793     		str	r3, [sp, #28]
 524:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 756              		.loc 1 524 5 is_stmt 1 view .LVU188
 524:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 757              		.loc 1 524 26 is_stmt 0 view .LVU189
 758 00e0 0897     		str	r7, [sp, #32]
 525:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 759              		.loc 1 525 5 is_stmt 1 view .LVU190
 525:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 760              		.loc 1 525 26 is_stmt 0 view .LVU191
 761 00e2 0024     		movs	r4, #0
 762 00e4 0994     		str	r4, [sp, #36]
 526:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 763              		.loc 1 526 5 is_stmt 1 view .LVU192
 526:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 764              		.loc 1 526 27 is_stmt 0 view .LVU193
 765 00e6 0A94     		str	r4, [sp, #40]
 527:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 766              		.loc 1 527 5 is_stmt 1 view .LVU194
 527:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 767              		.loc 1 527 31 is_stmt 0 view .LVU195
 768 00e8 0B96     		str	r6, [sp, #44]
 528:../../CM7/LWIP/Target/ethernetif.c **** 
 769              		.loc 1 528 5 is_stmt 1 view .LVU196
ARM GAS  /tmp/ccM1xvf3.s 			page 29


 770 00ea 2946     		mov	r1, r5
 771 00ec 0F48     		ldr	r0, .L57+12
 772 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 773              	.LVL49:
 530:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 774              		.loc 1 530 5 view .LVU197
 530:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 775              		.loc 1 530 25 is_stmt 0 view .LVU198
 776 00f2 4FF40053 		mov	r3, #8192
 777 00f6 0793     		str	r3, [sp, #28]
 531:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 778              		.loc 1 531 5 is_stmt 1 view .LVU199
 531:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 779              		.loc 1 531 26 is_stmt 0 view .LVU200
 780 00f8 0897     		str	r7, [sp, #32]
 532:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 781              		.loc 1 532 5 is_stmt 1 view .LVU201
 532:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 782              		.loc 1 532 26 is_stmt 0 view .LVU202
 783 00fa 0994     		str	r4, [sp, #36]
 533:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 784              		.loc 1 533 5 is_stmt 1 view .LVU203
 533:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 785              		.loc 1 533 27 is_stmt 0 view .LVU204
 786 00fc 0A94     		str	r4, [sp, #40]
 534:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 787              		.loc 1 534 5 is_stmt 1 view .LVU205
 534:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 788              		.loc 1 534 31 is_stmt 0 view .LVU206
 789 00fe 0B96     		str	r6, [sp, #44]
 535:../../CM7/LWIP/Target/ethernetif.c **** 
 790              		.loc 1 535 5 is_stmt 1 view .LVU207
 791 0100 2946     		mov	r1, r5
 792 0102 0B48     		ldr	r0, .L57+16
 793 0104 FFF7FEFF 		bl	HAL_GPIO_Init
 794              	.LVL50:
 537:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 795              		.loc 1 537 5 view .LVU208
 537:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 796              		.loc 1 537 25 is_stmt 0 view .LVU209
 797 0108 4FF42053 		mov	r3, #10240
 798 010c 0793     		str	r3, [sp, #28]
 538:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 799              		.loc 1 538 5 is_stmt 1 view .LVU210
 538:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 800              		.loc 1 538 26 is_stmt 0 view .LVU211
 801 010e 0897     		str	r7, [sp, #32]
 539:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 802              		.loc 1 539 5 is_stmt 1 view .LVU212
 539:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 803              		.loc 1 539 26 is_stmt 0 view .LVU213
 804 0110 0994     		str	r4, [sp, #36]
 540:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 805              		.loc 1 540 5 is_stmt 1 view .LVU214
 540:../../CM7/LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 806              		.loc 1 540 27 is_stmt 0 view .LVU215
 807 0112 0A94     		str	r4, [sp, #40]
ARM GAS  /tmp/ccM1xvf3.s 			page 30


 541:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 808              		.loc 1 541 5 is_stmt 1 view .LVU216
 541:../../CM7/LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 809              		.loc 1 541 31 is_stmt 0 view .LVU217
 810 0114 0B96     		str	r6, [sp, #44]
 542:../../CM7/LWIP/Target/ethernetif.c **** 
 811              		.loc 1 542 5 is_stmt 1 view .LVU218
 812 0116 2946     		mov	r1, r5
 813 0118 0648     		ldr	r0, .L57+20
 814 011a FFF7FEFF 		bl	HAL_GPIO_Init
 815              	.LVL51:
 548:../../CM7/LWIP/Target/ethernetif.c **** 
 816              		.loc 1 548 1 is_stmt 0 view .LVU219
 817 011e 7BE7     		b	.L53
 818              	.L58:
 819              		.align	2
 820              	.L57:
 821 0120 00800240 		.word	1073905664
 822 0124 00440258 		.word	1476543488
 823 0128 00080258 		.word	1476528128
 824 012c 00000258 		.word	1476526080
 825 0130 00040258 		.word	1476527104
 826 0134 00180258 		.word	1476532224
 827              		.cfi_endproc
 828              	.LFE177:
 830              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 831              		.align	1
 832              		.global	HAL_ETH_MspDeInit
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	HAL_ETH_MspDeInit:
 838              	.LVL52:
 839              	.LFB178:
 551:../../CM7/LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 840              		.loc 1 551 1 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 551:../../CM7/LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 844              		.loc 1 551 1 is_stmt 0 view .LVU221
 845 0000 08B5     		push	{r3, lr}
 846              	.LCFI18:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 3, -8
 849              		.cfi_offset 14, -4
 552:../../CM7/LWIP/Target/ethernetif.c ****   {
 850              		.loc 1 552 3 is_stmt 1 view .LVU222
 552:../../CM7/LWIP/Target/ethernetif.c ****   {
 851              		.loc 1 552 15 is_stmt 0 view .LVU223
 852 0002 0268     		ldr	r2, [r0]
 552:../../CM7/LWIP/Target/ethernetif.c ****   {
 853              		.loc 1 552 5 view .LVU224
 854 0004 144B     		ldr	r3, .L63
 855 0006 9A42     		cmp	r2, r3
 856 0008 00D0     		beq	.L62
 857              	.LVL53:
ARM GAS  /tmp/ccM1xvf3.s 			page 31


 858              	.L59:
 585:../../CM7/LWIP/Target/ethernetif.c **** 
 859              		.loc 1 585 1 view .LVU225
 860 000a 08BD     		pop	{r3, pc}
 861              	.LVL54:
 862              	.L62:
 558:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_DISABLE();
 863              		.loc 1 558 5 is_stmt 1 view .LVU226
 864 000c 134B     		ldr	r3, .L63+4
 865 000e D3F8D820 		ldr	r2, [r3, #216]
 866 0012 22F40042 		bic	r2, r2, #32768
 867 0016 C3F8D820 		str	r2, [r3, #216]
 559:../../CM7/LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_DISABLE();
 868              		.loc 1 559 5 view .LVU227
 869 001a D3F8D820 		ldr	r2, [r3, #216]
 870 001e 22F48032 		bic	r2, r2, #65536
 871 0022 C3F8D820 		str	r2, [r3, #216]
 560:../../CM7/LWIP/Target/ethernetif.c **** 
 872              		.loc 1 560 5 view .LVU228
 873 0026 D3F8D820 		ldr	r2, [r3, #216]
 874 002a 22F40032 		bic	r2, r2, #131072
 875 002e C3F8D820 		str	r2, [r3, #216]
 573:../../CM7/LWIP/Target/ethernetif.c **** 
 876              		.loc 1 573 5 view .LVU229
 877 0032 3221     		movs	r1, #50
 878 0034 0A48     		ldr	r0, .L63+8
 879              	.LVL55:
 573:../../CM7/LWIP/Target/ethernetif.c **** 
 880              		.loc 1 573 5 is_stmt 0 view .LVU230
 881 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 882              	.LVL56:
 575:../../CM7/LWIP/Target/ethernetif.c **** 
 883              		.loc 1 575 5 is_stmt 1 view .LVU231
 884 003a 8621     		movs	r1, #134
 885 003c 0948     		ldr	r0, .L63+12
 886 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 887              	.LVL57:
 577:../../CM7/LWIP/Target/ethernetif.c **** 
 888              		.loc 1 577 5 view .LVU232
 889 0042 4FF40051 		mov	r1, #8192
 890 0046 0848     		ldr	r0, .L63+16
 891 0048 FFF7FEFF 		bl	HAL_GPIO_DeInit
 892              	.LVL58:
 579:../../CM7/LWIP/Target/ethernetif.c **** 
 893              		.loc 1 579 5 view .LVU233
 894 004c 4FF42051 		mov	r1, #10240
 895 0050 0648     		ldr	r0, .L63+20
 896 0052 FFF7FEFF 		bl	HAL_GPIO_DeInit
 897              	.LVL59:
 585:../../CM7/LWIP/Target/ethernetif.c **** 
 898              		.loc 1 585 1 is_stmt 0 view .LVU234
 899 0056 D8E7     		b	.L59
 900              	.L64:
 901              		.align	2
 902              	.L63:
 903 0058 00800240 		.word	1073905664
 904 005c 00440258 		.word	1476543488
ARM GAS  /tmp/ccM1xvf3.s 			page 32


 905 0060 00080258 		.word	1476528128
 906 0064 00000258 		.word	1476526080
 907 0068 00040258 		.word	1476527104
 908 006c 00180258 		.word	1476532224
 909              		.cfi_endproc
 910              	.LFE178:
 912              		.section	.text.ethernet_link_check_state,"ax",%progbits
 913              		.align	1
 914              		.global	ethernet_link_check_state
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 919              	ethernet_link_check_state:
 920              	.LVL60:
 921              	.LFB184:
 659:../../CM7/LWIP/Target/ethernetif.c **** 
 660:../../CM7/LWIP/Target/ethernetif.c **** /**
 661:../../CM7/LWIP/Target/ethernetif.c ****   * @brief  Check the ETH link state then update ETH driver and netif link accordingly.
 662:../../CM7/LWIP/Target/ethernetif.c ****   * @retval None
 663:../../CM7/LWIP/Target/ethernetif.c ****   */
 664:../../CM7/LWIP/Target/ethernetif.c **** void ethernet_link_check_state(struct netif *netif)
 665:../../CM7/LWIP/Target/ethernetif.c **** {
 922              		.loc 1 665 1 is_stmt 1 view -0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 104
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		.loc 1 665 1 is_stmt 0 view .LVU236
 927 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 928              	.LCFI19:
 929              		.cfi_def_cfa_offset 24
 930              		.cfi_offset 4, -24
 931              		.cfi_offset 5, -20
 932              		.cfi_offset 6, -16
 933              		.cfi_offset 7, -12
 934              		.cfi_offset 8, -8
 935              		.cfi_offset 14, -4
 936 0004 9AB0     		sub	sp, sp, #104
 937              	.LCFI20:
 938              		.cfi_def_cfa_offset 128
 939 0006 0446     		mov	r4, r0
 666:../../CM7/LWIP/Target/ethernetif.c ****   ETH_MACConfigTypeDef MACConf = {0};
 940              		.loc 1 666 3 is_stmt 1 view .LVU237
 941              		.loc 1 666 24 is_stmt 0 view .LVU238
 942 0008 6422     		movs	r2, #100
 943 000a 0021     		movs	r1, #0
 944 000c 01A8     		add	r0, sp, #4
 945              	.LVL61:
 946              		.loc 1 666 24 view .LVU239
 947 000e FFF7FEFF 		bl	memset
 948              	.LVL62:
 667:../../CM7/LWIP/Target/ethernetif.c ****   int32_t PHYLinkState = 0;
 949              		.loc 1 667 3 is_stmt 1 view .LVU240
 668:../../CM7/LWIP/Target/ethernetif.c ****   uint32_t linkchanged = 0U, speed = 0U, duplex = 0U;
 950              		.loc 1 668 3 view .LVU241
 669:../../CM7/LWIP/Target/ethernetif.c **** 
 670:../../CM7/LWIP/Target/ethernetif.c ****   PHYLinkState = LAN8742_GetLinkState(&LAN8742);
 951              		.loc 1 670 3 view .LVU242
ARM GAS  /tmp/ccM1xvf3.s 			page 33


 952              		.loc 1 670 18 is_stmt 0 view .LVU243
 953 0012 2848     		ldr	r0, .L77
 954 0014 FFF7FEFF 		bl	LAN8742_GetLinkState
 955              	.LVL63:
 671:../../CM7/LWIP/Target/ethernetif.c **** 
 672:../../CM7/LWIP/Target/ethernetif.c ****   if(netif_is_link_up(netif) && (PHYLinkState <= LAN8742_STATUS_LINK_DOWN))
 956              		.loc 1 672 3 is_stmt 1 view .LVU244
 957              		.loc 1 672 6 is_stmt 0 view .LVU245
 958 0018 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 959              		.loc 1 672 5 view .LVU246
 960 001c 13F0040F 		tst	r3, #4
 961 0020 01D0     		beq	.L66
 962              		.loc 1 672 30 discriminator 1 view .LVU247
 963 0022 0128     		cmp	r0, #1
 964 0024 12DD     		ble	.L76
 965              	.L66:
 673:../../CM7/LWIP/Target/ethernetif.c ****   {
 674:../../CM7/LWIP/Target/ethernetif.c ****     HAL_ETH_Stop(&heth);
 675:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 676:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_link_down(netif);
 677:../../CM7/LWIP/Target/ethernetif.c ****   }
 678:../../CM7/LWIP/Target/ethernetif.c ****   else if(!netif_is_link_up(netif) && (PHYLinkState > LAN8742_STATUS_LINK_DOWN))
 966              		.loc 1 678 8 is_stmt 1 view .LVU248
 967              		.loc 1 678 10 is_stmt 0 view .LVU249
 968 0026 13F0040F 		tst	r3, #4
 969 002a 33D1     		bne	.L65
 970              		.loc 1 678 36 discriminator 1 view .LVU250
 971 002c 0128     		cmp	r0, #1
 972 002e 31DD     		ble	.L65
 679:../../CM7/LWIP/Target/ethernetif.c ****   {
 680:../../CM7/LWIP/Target/ethernetif.c ****     switch (PHYLinkState)
 973              		.loc 1 680 5 is_stmt 1 view .LVU251
 974 0030 831E     		subs	r3, r0, #2
 975 0032 032B     		cmp	r3, #3
 976 0034 2ED8     		bhi	.L65
 977 0036 01A2     		adr	r2, .L69
 978 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 979              		.p2align 2
 980              	.L69:
 981 003c 61000000 		.word	.L72+1
 982 0040 A5000000 		.word	.L71+1
 983 0044 9B000000 		.word	.L70+1
 984 0048 AD000000 		.word	.L73+1
 985              		.p2align 1
 986              	.L76:
 674:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 987              		.loc 1 674 5 view .LVU252
 988 004c 1A48     		ldr	r0, .L77+4
 989              	.LVL64:
 674:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 990              		.loc 1 674 5 is_stmt 0 view .LVU253
 991 004e FFF7FEFF 		bl	HAL_ETH_Stop
 992              	.LVL65:
 675:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_link_down(netif);
 993              		.loc 1 675 5 is_stmt 1 view .LVU254
 994 0052 2046     		mov	r0, r4
 995 0054 FFF7FEFF 		bl	netif_set_down
ARM GAS  /tmp/ccM1xvf3.s 			page 34


 996              	.LVL66:
 676:../../CM7/LWIP/Target/ethernetif.c ****   }
 997              		.loc 1 676 5 view .LVU255
 998 0058 2046     		mov	r0, r4
 999 005a FFF7FEFF 		bl	netif_set_link_down
 1000              	.LVL67:
 1001 005e 19E0     		b	.L65
 1002              	.LVL68:
 1003              	.L72:
 1004              		.loc 1 680 5 is_stmt 0 view .LVU256
 1005 0060 4FF40057 		mov	r7, #8192
 1006 0064 4FF48048 		mov	r8, #16384
 1007              	.LVL69:
 1008              	.L68:
 681:../../CM7/LWIP/Target/ethernetif.c ****     {
 682:../../CM7/LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_100MBITS_FULLDUPLEX:
 683:../../CM7/LWIP/Target/ethernetif.c ****       duplex = ETH_FULLDUPLEX_MODE;
 684:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 685:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 686:../../CM7/LWIP/Target/ethernetif.c ****       break;
 687:../../CM7/LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_100MBITS_HALFDUPLEX:
 688:../../CM7/LWIP/Target/ethernetif.c ****       duplex = ETH_HALFDUPLEX_MODE;
 689:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 690:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 691:../../CM7/LWIP/Target/ethernetif.c ****       break;
 692:../../CM7/LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_FULLDUPLEX:
 693:../../CM7/LWIP/Target/ethernetif.c ****       duplex = ETH_FULLDUPLEX_MODE;
 694:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 695:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 696:../../CM7/LWIP/Target/ethernetif.c ****       break;
 697:../../CM7/LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_HALFDUPLEX:
 698:../../CM7/LWIP/Target/ethernetif.c ****       duplex = ETH_HALFDUPLEX_MODE;
 699:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 700:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 701:../../CM7/LWIP/Target/ethernetif.c ****       break;
 702:../../CM7/LWIP/Target/ethernetif.c ****     default:
 703:../../CM7/LWIP/Target/ethernetif.c ****       break;
 704:../../CM7/LWIP/Target/ethernetif.c ****     }
 705:../../CM7/LWIP/Target/ethernetif.c **** 
 706:../../CM7/LWIP/Target/ethernetif.c ****     if(linkchanged)
 707:../../CM7/LWIP/Target/ethernetif.c ****     {
 708:../../CM7/LWIP/Target/ethernetif.c ****       /* Get MAC Config MAC */
 709:../../CM7/LWIP/Target/ethernetif.c ****       HAL_ETH_GetMACConfig(&heth, &MACConf);
 1009              		.loc 1 709 7 is_stmt 1 view .LVU257
 1010 0068 01AE     		add	r6, sp, #4
 1011 006a 134D     		ldr	r5, .L77+4
 1012 006c 3146     		mov	r1, r6
 1013 006e 2846     		mov	r0, r5
 1014              	.LVL70:
 1015              		.loc 1 709 7 is_stmt 0 view .LVU258
 1016 0070 FFF7FEFF 		bl	HAL_ETH_GetMACConfig
 1017              	.LVL71:
 710:../../CM7/LWIP/Target/ethernetif.c ****       MACConf.DuplexMode = duplex;
 1018              		.loc 1 710 7 is_stmt 1 view .LVU259
 1019              		.loc 1 710 26 is_stmt 0 view .LVU260
 1020 0074 0797     		str	r7, [sp, #28]
 711:../../CM7/LWIP/Target/ethernetif.c ****       MACConf.Speed = speed;
ARM GAS  /tmp/ccM1xvf3.s 			page 35


 1021              		.loc 1 711 7 is_stmt 1 view .LVU261
 1022              		.loc 1 711 21 is_stmt 0 view .LVU262
 1023 0076 CDF81880 		str	r8, [sp, #24]
 712:../../CM7/LWIP/Target/ethernetif.c ****       HAL_ETH_SetMACConfig(&heth, &MACConf);
 1024              		.loc 1 712 7 is_stmt 1 view .LVU263
 1025 007a 3146     		mov	r1, r6
 1026 007c 2846     		mov	r0, r5
 1027 007e FFF7FEFF 		bl	HAL_ETH_SetMACConfig
 1028              	.LVL72:
 713:../../CM7/LWIP/Target/ethernetif.c ****       HAL_ETH_Start(&heth);
 1029              		.loc 1 713 7 view .LVU264
 1030 0082 2846     		mov	r0, r5
 1031 0084 FFF7FEFF 		bl	HAL_ETH_Start
 1032              	.LVL73:
 714:../../CM7/LWIP/Target/ethernetif.c ****       netif_set_up(netif);
 1033              		.loc 1 714 7 view .LVU265
 1034 0088 2046     		mov	r0, r4
 1035 008a FFF7FEFF 		bl	netif_set_up
 1036              	.LVL74:
 715:../../CM7/LWIP/Target/ethernetif.c ****       netif_set_link_up(netif);
 1037              		.loc 1 715 7 view .LVU266
 1038 008e 2046     		mov	r0, r4
 1039 0090 FFF7FEFF 		bl	netif_set_link_up
 1040              	.LVL75:
 1041              	.L65:
 716:../../CM7/LWIP/Target/ethernetif.c ****     }
 717:../../CM7/LWIP/Target/ethernetif.c ****   }
 718:../../CM7/LWIP/Target/ethernetif.c **** 
 719:../../CM7/LWIP/Target/ethernetif.c **** }
 1042              		.loc 1 719 1 is_stmt 0 view .LVU267
 1043 0094 1AB0     		add	sp, sp, #104
 1044              	.LCFI21:
 1045              		.cfi_remember_state
 1046              		.cfi_def_cfa_offset 24
 1047              		@ sp needed
 1048 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1049              	.LVL76:
 1050              	.L70:
 1051              	.LCFI22:
 1052              		.cfi_restore_state
 693:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1053              		.loc 1 693 7 is_stmt 1 view .LVU268
 694:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1054              		.loc 1 694 7 view .LVU269
 695:../../CM7/LWIP/Target/ethernetif.c ****       break;
 1055              		.loc 1 695 7 view .LVU270
 696:../../CM7/LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_HALFDUPLEX:
 1056              		.loc 1 696 7 view .LVU271
 706:../../CM7/LWIP/Target/ethernetif.c ****     {
 1057              		.loc 1 706 5 view .LVU272
 693:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1058              		.loc 1 693 14 is_stmt 0 view .LVU273
 1059 009a 4FF40057 		mov	r7, #8192
 694:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1060              		.loc 1 694 13 view .LVU274
 1061 009e 4FF00008 		mov	r8, #0
 1062 00a2 E1E7     		b	.L68
ARM GAS  /tmp/ccM1xvf3.s 			page 36


 1063              	.LVL77:
 1064              	.L71:
 688:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1065              		.loc 1 688 7 is_stmt 1 view .LVU275
 689:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1066              		.loc 1 689 7 view .LVU276
 690:../../CM7/LWIP/Target/ethernetif.c ****       break;
 1067              		.loc 1 690 7 view .LVU277
 691:../../CM7/LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_FULLDUPLEX:
 1068              		.loc 1 691 7 view .LVU278
 706:../../CM7/LWIP/Target/ethernetif.c ****     {
 1069              		.loc 1 706 5 view .LVU279
 688:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1070              		.loc 1 688 14 is_stmt 0 view .LVU280
 1071 00a4 0027     		movs	r7, #0
 689:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1072              		.loc 1 689 13 view .LVU281
 1073 00a6 4FF48048 		mov	r8, #16384
 1074 00aa DDE7     		b	.L68
 1075              	.LVL78:
 1076              	.L73:
 698:../../CM7/LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1077              		.loc 1 698 14 view .LVU282
 1078 00ac 0027     		movs	r7, #0
 699:../../CM7/LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1079              		.loc 1 699 13 view .LVU283
 1080 00ae B846     		mov	r8, r7
 1081 00b0 DAE7     		b	.L68
 1082              	.L78:
 1083 00b2 00BF     		.align	2
 1084              	.L77:
 1085 00b4 00000000 		.word	LAN8742
 1086 00b8 00000000 		.word	heth
 1087              		.cfi_endproc
 1088              	.LFE184:
 1090              		.section	.text.low_level_init,"ax",%progbits
 1091              		.align	1
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1096              	low_level_init:
 1097              	.LVL79:
 1098              	.LFB170:
 180:../../CM7/LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 1099              		.loc 1 180 1 is_stmt 1 view -0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 8
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 180:../../CM7/LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 1103              		.loc 1 180 1 is_stmt 0 view .LVU285
 1104 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1105              	.LCFI23:
 1106              		.cfi_def_cfa_offset 24
 1107              		.cfi_offset 4, -24
 1108              		.cfi_offset 5, -20
 1109              		.cfi_offset 6, -16
 1110              		.cfi_offset 7, -12
ARM GAS  /tmp/ccM1xvf3.s 			page 37


 1111              		.cfi_offset 8, -8
 1112              		.cfi_offset 14, -4
 1113 0004 82B0     		sub	sp, sp, #8
 1114              	.LCFI24:
 1115              		.cfi_def_cfa_offset 32
 1116 0006 0446     		mov	r4, r0
 181:../../CM7/LWIP/Target/ethernetif.c ****   /* Start ETH HAL Init */
 1117              		.loc 1 181 3 is_stmt 1 view .LVU286
 1118              	.LVL80:
 184:../../CM7/LWIP/Target/ethernetif.c ****   heth.Instance = ETH;
 1119              		.loc 1 184 4 view .LVU287
 185:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 1120              		.loc 1 185 3 view .LVU288
 185:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 1121              		.loc 1 185 17 is_stmt 0 view .LVU289
 1122 0008 354D     		ldr	r5, .L86
 1123 000a 364B     		ldr	r3, .L86+4
 1124 000c 2B60     		str	r3, [r5]
 186:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 1125              		.loc 1 186 3 is_stmt 1 view .LVU290
 186:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 1126              		.loc 1 186 14 is_stmt 0 view .LVU291
 1127 000e 0027     		movs	r7, #0
 1128 0010 8DF80070 		strb	r7, [sp]
 187:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 1129              		.loc 1 187 3 is_stmt 1 view .LVU292
 187:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 1130              		.loc 1 187 14 is_stmt 0 view .LVU293
 1131 0014 8023     		movs	r3, #128
 1132 0016 8DF80130 		strb	r3, [sp, #1]
 188:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 1133              		.loc 1 188 3 is_stmt 1 view .LVU294
 188:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 1134              		.loc 1 188 14 is_stmt 0 view .LVU295
 1135 001a E123     		movs	r3, #225
 1136 001c 8DF80230 		strb	r3, [sp, #2]
 189:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x13;
 1137              		.loc 1 189 3 is_stmt 1 view .LVU296
 189:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x13;
 1138              		.loc 1 189 14 is_stmt 0 view .LVU297
 1139 0020 8DF80370 		strb	r7, [sp, #3]
 190:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x37;
 1140              		.loc 1 190 3 is_stmt 1 view .LVU298
 190:../../CM7/LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x37;
 1141              		.loc 1 190 14 is_stmt 0 view .LVU299
 1142 0024 1323     		movs	r3, #19
 1143 0026 8DF80430 		strb	r3, [sp, #4]
 191:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 1144              		.loc 1 191 3 is_stmt 1 view .LVU300
 191:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 1145              		.loc 1 191 14 is_stmt 0 view .LVU301
 1146 002a 3723     		movs	r3, #55
 1147 002c 8DF80530 		strb	r3, [sp, #5]
 192:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1148              		.loc 1 192 3 is_stmt 1 view .LVU302
 192:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1149              		.loc 1 192 21 is_stmt 0 view .LVU303
ARM GAS  /tmp/ccM1xvf3.s 			page 38


 1150 0030 C5F804D0 		str	sp, [r5, #4]
 193:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 1151              		.loc 1 193 3 is_stmt 1 view .LVU304
 193:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 1152              		.loc 1 193 28 is_stmt 0 view .LVU305
 1153 0034 0123     		movs	r3, #1
 1154 0036 2B72     		strb	r3, [r5, #8]
 194:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1155              		.loc 1 194 3 is_stmt 1 view .LVU306
 194:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1156              		.loc 1 194 20 is_stmt 0 view .LVU307
 1157 0038 2B4B     		ldr	r3, .L86+8
 1158 003a EB60     		str	r3, [r5, #12]
 195:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1536;
 1159              		.loc 1 195 3 is_stmt 1 view .LVU308
 195:../../CM7/LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1536;
 1160              		.loc 1 195 20 is_stmt 0 view .LVU309
 1161 003c 2B4B     		ldr	r3, .L86+12
 1162 003e 2B61     		str	r3, [r5, #16]
 196:../../CM7/LWIP/Target/ethernetif.c **** 
 1163              		.loc 1 196 3 is_stmt 1 view .LVU310
 196:../../CM7/LWIP/Target/ethernetif.c **** 
 1164              		.loc 1 196 23 is_stmt 0 view .LVU311
 1165 0040 4FF4C063 		mov	r3, #1536
 1166 0044 6B61     		str	r3, [r5, #20]
 202:../../CM7/LWIP/Target/ethernetif.c **** 
 1167              		.loc 1 202 3 is_stmt 1 view .LVU312
 202:../../CM7/LWIP/Target/ethernetif.c **** 
 1168              		.loc 1 202 25 is_stmt 0 view .LVU313
 1169 0046 2846     		mov	r0, r5
 1170              	.LVL81:
 202:../../CM7/LWIP/Target/ethernetif.c **** 
 1171              		.loc 1 202 25 view .LVU314
 1172 0048 FFF7FEFF 		bl	HAL_ETH_Init
 1173              	.LVL82:
 1174 004c 8046     		mov	r8, r0
 1175              	.LVL83:
 204:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 1176              		.loc 1 204 3 is_stmt 1 view .LVU315
 1177 004e 284E     		ldr	r6, .L86+16
 1178 0050 3822     		movs	r2, #56
 1179 0052 3946     		mov	r1, r7
 1180 0054 3046     		mov	r0, r6
 1181 0056 FFF7FEFF 		bl	memset
 1182              	.LVL84:
 205:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 1183              		.loc 1 205 3 view .LVU316
 205:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 1184              		.loc 1 205 23 is_stmt 0 view .LVU317
 1185 005a 2123     		movs	r3, #33
 1186 005c 3360     		str	r3, [r6]
 206:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1187              		.loc 1 206 3 is_stmt 1 view .LVU318
 206:../../CM7/LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1188              		.loc 1 206 25 is_stmt 0 view .LVU319
 1189 005e 4FF44033 		mov	r3, #196608
 1190 0062 7361     		str	r3, [r6, #20]
ARM GAS  /tmp/ccM1xvf3.s 			page 39


 207:../../CM7/LWIP/Target/ethernetif.c **** 
 1191              		.loc 1 207 3 is_stmt 1 view .LVU320
 212:../../CM7/LWIP/Target/ethernetif.c **** 
 1192              		.loc 1 212 3 view .LVU321
 1193 0064 2348     		ldr	r0, .L86+20
 1194 0066 FFF7FEFF 		bl	memp_init_pool
 1195              	.LVL85:
 217:../../CM7/LWIP/Target/ethernetif.c **** 
 1196              		.loc 1 217 3 view .LVU322
 217:../../CM7/LWIP/Target/ethernetif.c **** 
 1197              		.loc 1 217 21 is_stmt 0 view .LVU323
 1198 006a 0623     		movs	r3, #6
 1199 006c 84F83030 		strb	r3, [r4, #48]
 220:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 1200              		.loc 1 220 3 is_stmt 1 view .LVU324
 220:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 1201              		.loc 1 220 32 is_stmt 0 view .LVU325
 1202 0070 6B68     		ldr	r3, [r5, #4]
 220:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 1203              		.loc 1 220 40 view .LVU326
 1204 0072 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 220:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 1205              		.loc 1 220 20 view .LVU327
 1206 0074 84F82A20 		strb	r2, [r4, #42]
 221:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 1207              		.loc 1 221 3 is_stmt 1 view .LVU328
 221:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 1208              		.loc 1 221 20 is_stmt 0 view .LVU329
 1209 0078 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1210 007a 84F82B20 		strb	r2, [r4, #43]
 222:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 1211              		.loc 1 222 3 is_stmt 1 view .LVU330
 222:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 1212              		.loc 1 222 20 is_stmt 0 view .LVU331
 1213 007e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1214 0080 84F82C20 		strb	r2, [r4, #44]
 223:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 1215              		.loc 1 223 3 is_stmt 1 view .LVU332
 223:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 1216              		.loc 1 223 20 is_stmt 0 view .LVU333
 1217 0084 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1218 0086 84F82D20 		strb	r2, [r4, #45]
 224:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 1219              		.loc 1 224 3 is_stmt 1 view .LVU334
 224:../../CM7/LWIP/Target/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 1220              		.loc 1 224 20 is_stmt 0 view .LVU335
 1221 008a 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1222 008c 84F82E20 		strb	r2, [r4, #46]
 225:../../CM7/LWIP/Target/ethernetif.c **** 
 1223              		.loc 1 225 3 is_stmt 1 view .LVU336
 225:../../CM7/LWIP/Target/ethernetif.c **** 
 1224              		.loc 1 225 20 is_stmt 0 view .LVU337
 1225 0090 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1226 0092 84F82F30 		strb	r3, [r4, #47]
 228:../../CM7/LWIP/Target/ethernetif.c **** 
 1227              		.loc 1 228 3 is_stmt 1 view .LVU338
 228:../../CM7/LWIP/Target/ethernetif.c **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 40


 1228              		.loc 1 228 14 is_stmt 0 view .LVU339
 1229 0096 40F2DC53 		movw	r3, #1500
 1230 009a 2385     		strh	r3, [r4, #40]	@ movhi
 233:../../CM7/LWIP/Target/ethernetif.c ****   #else
 1231              		.loc 1 233 5 is_stmt 1 view .LVU340
 233:../../CM7/LWIP/Target/ethernetif.c ****   #else
 1232              		.loc 1 233 10 is_stmt 0 view .LVU341
 1233 009c 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 233:../../CM7/LWIP/Target/ethernetif.c ****   #else
 1234              		.loc 1 233 18 view .LVU342
 1235 00a0 43F00A03 		orr	r3, r3, #10
 1236 00a4 84F83130 		strb	r3, [r4, #49]
 242:../../CM7/LWIP/Target/ethernetif.c **** 
 1237              		.loc 1 242 3 is_stmt 1 view .LVU343
 1238 00a8 134D     		ldr	r5, .L86+24
 1239 00aa 1449     		ldr	r1, .L86+28
 1240 00ac 2846     		mov	r0, r5
 1241 00ae FFF7FEFF 		bl	LAN8742_RegisterBusIO
 1242              	.LVL86:
 245:../../CM7/LWIP/Target/ethernetif.c ****   {
 1243              		.loc 1 245 3 view .LVU344
 245:../../CM7/LWIP/Target/ethernetif.c ****   {
 1244              		.loc 1 245 6 is_stmt 0 view .LVU345
 1245 00b2 2846     		mov	r0, r5
 1246 00b4 FFF7FEFF 		bl	LAN8742_Init
 1247              	.LVL87:
 245:../../CM7/LWIP/Target/ethernetif.c ****   {
 1248              		.loc 1 245 5 discriminator 1 view .LVU346
 1249 00b8 40B9     		cbnz	r0, .L85
 252:../../CM7/LWIP/Target/ethernetif.c ****   {
 1250              		.loc 1 252 3 is_stmt 1 view .LVU347
 252:../../CM7/LWIP/Target/ethernetif.c ****   {
 1251              		.loc 1 252 6 is_stmt 0 view .LVU348
 1252 00ba B8F1000F 		cmp	r8, #0
 1253 00be 0CD1     		bne	.L82
 255:../../CM7/LWIP/Target/ethernetif.c ****   }
 1254              		.loc 1 255 3 is_stmt 1 view .LVU349
 1255 00c0 2046     		mov	r0, r4
 1256 00c2 FFF7FEFF 		bl	ethernet_link_check_state
 1257              	.LVL88:
 1258              	.L79:
 266:../../CM7/LWIP/Target/ethernetif.c **** 
 1259              		.loc 1 266 1 is_stmt 0 view .LVU350
 1260 00c6 02B0     		add	sp, sp, #8
 1261              	.LCFI25:
 1262              		.cfi_remember_state
 1263              		.cfi_def_cfa_offset 24
 1264              		@ sp needed
 1265 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1266              	.LVL89:
 1267              	.L85:
 1268              	.LCFI26:
 1269              		.cfi_restore_state
 247:../../CM7/LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 1270              		.loc 1 247 5 is_stmt 1 view .LVU351
 1271 00cc 2046     		mov	r0, r4
 1272 00ce FFF7FEFF 		bl	netif_set_link_down
ARM GAS  /tmp/ccM1xvf3.s 			page 41


 1273              	.LVL90:
 248:../../CM7/LWIP/Target/ethernetif.c ****     return;
 1274              		.loc 1 248 5 view .LVU352
 1275 00d2 2046     		mov	r0, r4
 1276 00d4 FFF7FEFF 		bl	netif_set_down
 1277              	.LVL91:
 249:../../CM7/LWIP/Target/ethernetif.c ****   }
 1278              		.loc 1 249 5 view .LVU353
 1279 00d8 F5E7     		b	.L79
 1280              	.L82:
 259:../../CM7/LWIP/Target/ethernetif.c ****   }
 1281              		.loc 1 259 5 view .LVU354
 1282 00da FFF7FEFF 		bl	Error_Handler
 1283              	.LVL92:
 1284 00de F2E7     		b	.L79
 1285              	.L87:
 1286              		.align	2
 1287              	.L86:
 1288 00e0 00000000 		.word	heth
 1289 00e4 00800240 		.word	1073905664
 1290 00e8 00000000 		.word	DMATxDscrTab
 1291 00ec 00000000 		.word	DMARxDscrTab
 1292 00f0 00000000 		.word	TxConfig
 1293 00f4 00000000 		.word	memp_RX_POOL
 1294 00f8 00000000 		.word	LAN8742
 1295 00fc 00000000 		.word	LAN8742_IOCtx
 1296              		.cfi_endproc
 1297              	.LFE170:
 1299              		.section	.rodata.ethernetif_init.str1.4,"aMS",%progbits,1
 1300              		.align	2
 1301              	.LC0:
 1302 0000 2E2E2F2E 		.ascii	"../../CM7/LWIP/Target/ethernetif.c\000"
 1302      2E2F434D 
 1302      372F4C57 
 1302      49502F54 
 1302      61726765 
 1303 0023 00       		.align	2
 1304              	.LC1:
 1305 0024 6E657469 		.ascii	"netif != NULL\000"
 1305      6620213D 
 1305      204E554C 
 1305      4C00
 1306 0032 0000     		.align	2
 1307              	.LC2:
 1308 0034 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 1308      7274696F 
 1308      6E202225 
 1308      73222066 
 1308      61696C65 
 1309              		.section	.text.ethernetif_init,"ax",%progbits
 1310              		.align	1
 1311              		.global	ethernetif_init
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1316              	ethernetif_init:
 1317              	.LVL93:
ARM GAS  /tmp/ccM1xvf3.s 			page 42


 1318              	.LFB174:
 403:../../CM7/LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1319              		.loc 1 403 1 view -0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 403:../../CM7/LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1323              		.loc 1 403 1 is_stmt 0 view .LVU356
 1324 0000 10B5     		push	{r4, lr}
 1325              	.LCFI27:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 4, -8
 1328              		.cfi_offset 14, -4
 404:../../CM7/LWIP/Target/ethernetif.c **** 
 1329              		.loc 1 404 3 is_stmt 1 view .LVU357
 404:../../CM7/LWIP/Target/ethernetif.c **** 
 1330              		.loc 1 404 3 view .LVU358
 1331 0002 0446     		mov	r4, r0
 1332 0004 70B1     		cbz	r0, .L91
 1333              	.LVL94:
 1334              	.L89:
 404:../../CM7/LWIP/Target/ethernetif.c **** 
 1335              		.loc 1 404 3 discriminator 3 view .LVU359
 404:../../CM7/LWIP/Target/ethernetif.c **** 
 1336              		.loc 1 404 3 discriminator 3 view .LVU360
 418:../../CM7/LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 1337              		.loc 1 418 3 view .LVU361
 418:../../CM7/LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 1338              		.loc 1 418 18 is_stmt 0 view .LVU362
 1339 0006 7323     		movs	r3, #115
 1340 0008 84F83230 		strb	r3, [r4, #50]
 419:../../CM7/LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 1341              		.loc 1 419 3 is_stmt 1 view .LVU363
 419:../../CM7/LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 1342              		.loc 1 419 18 is_stmt 0 view .LVU364
 1343 000c 7423     		movs	r3, #116
 1344 000e 84F83330 		strb	r3, [r4, #51]
 428:../../CM7/LWIP/Target/ethernetif.c **** #else
 1345              		.loc 1 428 3 is_stmt 1 view .LVU365
 428:../../CM7/LWIP/Target/ethernetif.c **** #else
 1346              		.loc 1 428 17 is_stmt 0 view .LVU366
 1347 0012 084B     		ldr	r3, .L92
 1348 0014 6361     		str	r3, [r4, #20]
 440:../../CM7/LWIP/Target/ethernetif.c **** 
 1349              		.loc 1 440 3 is_stmt 1 view .LVU367
 440:../../CM7/LWIP/Target/ethernetif.c **** 
 1350              		.loc 1 440 21 is_stmt 0 view .LVU368
 1351 0016 084B     		ldr	r3, .L92+4
 1352 0018 A361     		str	r3, [r4, #24]
 443:../../CM7/LWIP/Target/ethernetif.c **** 
 1353              		.loc 1 443 3 is_stmt 1 view .LVU369
 1354 001a 2046     		mov	r0, r4
 1355 001c FFF7FEFF 		bl	low_level_init
 1356              	.LVL95:
 445:../../CM7/LWIP/Target/ethernetif.c **** }
 1357              		.loc 1 445 3 view .LVU370
 446:../../CM7/LWIP/Target/ethernetif.c **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 43


 1358              		.loc 1 446 1 is_stmt 0 view .LVU371
 1359 0020 0020     		movs	r0, #0
 1360 0022 10BD     		pop	{r4, pc}
 1361              	.LVL96:
 1362              	.L91:
 404:../../CM7/LWIP/Target/ethernetif.c **** 
 1363              		.loc 1 404 3 is_stmt 1 discriminator 1 view .LVU372
 404:../../CM7/LWIP/Target/ethernetif.c **** 
 1364              		.loc 1 404 3 discriminator 1 view .LVU373
 1365 0024 054B     		ldr	r3, .L92+8
 1366 0026 4FF4CA72 		mov	r2, #404
 1367 002a 0549     		ldr	r1, .L92+12
 1368 002c 0548     		ldr	r0, .L92+16
 1369              	.LVL97:
 404:../../CM7/LWIP/Target/ethernetif.c **** 
 1370              		.loc 1 404 3 is_stmt 0 discriminator 1 view .LVU374
 1371 002e FFF7FEFF 		bl	printf
 1372              	.LVL98:
 1373 0032 E8E7     		b	.L89
 1374              	.L93:
 1375              		.align	2
 1376              	.L92:
 1377 0034 00000000 		.word	etharp_output
 1378 0038 00000000 		.word	low_level_output
 1379 003c 00000000 		.word	.LC0
 1380 0040 24000000 		.word	.LC1
 1381 0044 34000000 		.word	.LC2
 1382              		.cfi_endproc
 1383              	.LFE174:
 1385              		.section	.text.HAL_ETH_RxAllocateCallback,"ax",%progbits
 1386              		.align	1
 1387              		.global	HAL_ETH_RxAllocateCallback
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1392              	HAL_ETH_RxAllocateCallback:
 1393              	.LVL99:
 1394              	.LFB185:
 720:../../CM7/LWIP/Target/ethernetif.c **** 
 721:../../CM7/LWIP/Target/ethernetif.c **** void HAL_ETH_RxAllocateCallback(uint8_t **buff)
 722:../../CM7/LWIP/Target/ethernetif.c **** {
 1395              		.loc 1 722 1 is_stmt 1 view -0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              		.loc 1 722 1 is_stmt 0 view .LVU376
 1400 0000 10B5     		push	{r4, lr}
 1401              	.LCFI28:
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 4, -8
 1404              		.cfi_offset 14, -4
 1405 0002 82B0     		sub	sp, sp, #8
 1406              	.LCFI29:
 1407              		.cfi_def_cfa_offset 16
 1408 0004 0446     		mov	r4, r0
 723:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN HAL ETH RxAllocateCallback */
 724:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf_custom *p = LWIP_MEMPOOL_ALLOC(RX_POOL);
ARM GAS  /tmp/ccM1xvf3.s 			page 44


 1409              		.loc 1 724 3 is_stmt 1 view .LVU377
 1410              		.loc 1 724 27 is_stmt 0 view .LVU378
 1411 0006 0E48     		ldr	r0, .L98
 1412              	.LVL100:
 1413              		.loc 1 724 27 view .LVU379
 1414 0008 FFF7FEFF 		bl	memp_malloc_pool
 1415              	.LVL101:
 725:../../CM7/LWIP/Target/ethernetif.c ****   if (p)
 1416              		.loc 1 725 3 is_stmt 1 view .LVU380
 1417              		.loc 1 725 6 is_stmt 0 view .LVU381
 1418 000c 88B1     		cbz	r0, .L95
 1419 000e 0346     		mov	r3, r0
 726:../../CM7/LWIP/Target/ethernetif.c ****   {
 727:../../CM7/LWIP/Target/ethernetif.c ****     /* Get the buff from the struct pbuf address. */
 728:../../CM7/LWIP/Target/ethernetif.c ****     *buff = (uint8_t *)p + offsetof(RxBuff_t, buff);
 1420              		.loc 1 728 5 is_stmt 1 view .LVU382
 1421              		.loc 1 728 26 is_stmt 0 view .LVU383
 1422 0010 00F12002 		add	r2, r0, #32
 1423              		.loc 1 728 11 view .LVU384
 1424 0014 2260     		str	r2, [r4]
 729:../../CM7/LWIP/Target/ethernetif.c ****     p->custom_free_function = pbuf_free_custom;
 1425              		.loc 1 729 5 is_stmt 1 view .LVU385
 1426              		.loc 1 729 29 is_stmt 0 view .LVU386
 1427 0016 0B4A     		ldr	r2, .L98+4
 1428 0018 0261     		str	r2, [r0, #16]
 730:../../CM7/LWIP/Target/ethernetif.c ****     /* Initialize the struct pbuf.
 731:../../CM7/LWIP/Target/ethernetif.c ****     * This must be performed whenever a buffer's allocated because it may be
 732:../../CM7/LWIP/Target/ethernetif.c ****     * changed by lwIP or the app, e.g., pbuf_free decrements ref. */
 733:../../CM7/LWIP/Target/ethernetif.c ****     pbuf_alloced_custom(PBUF_RAW, 0, PBUF_REF, p, *buff, ETH_RX_BUFFER_SIZE);
 1429              		.loc 1 733 5 is_stmt 1 view .LVU387
 1430 001a 4FF4C062 		mov	r2, #1536
 1431 001e 0192     		str	r2, [sp, #4]
 1432 0020 2268     		ldr	r2, [r4]
 1433 0022 0092     		str	r2, [sp]
 1434 0024 4122     		movs	r2, #65
 1435 0026 0021     		movs	r1, #0
 1436 0028 0846     		mov	r0, r1
 1437              	.LVL102:
 1438              		.loc 1 733 5 is_stmt 0 view .LVU388
 1439 002a FFF7FEFF 		bl	pbuf_alloced_custom
 1440              	.LVL103:
 1441              	.L94:
 734:../../CM7/LWIP/Target/ethernetif.c ****   }
 735:../../CM7/LWIP/Target/ethernetif.c ****   else
 736:../../CM7/LWIP/Target/ethernetif.c ****   {
 737:../../CM7/LWIP/Target/ethernetif.c ****     RxAllocStatus = RX_ALLOC_ERROR;
 738:../../CM7/LWIP/Target/ethernetif.c ****     *buff = NULL;
 739:../../CM7/LWIP/Target/ethernetif.c ****   }
 740:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END HAL ETH RxAllocateCallback */
 741:../../CM7/LWIP/Target/ethernetif.c **** }
 1442              		.loc 1 741 1 view .LVU389
 1443 002e 02B0     		add	sp, sp, #8
 1444              	.LCFI30:
 1445              		.cfi_remember_state
 1446              		.cfi_def_cfa_offset 8
 1447              		@ sp needed
 1448 0030 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccM1xvf3.s 			page 45


 1449              	.LVL104:
 1450              	.L95:
 1451              	.LCFI31:
 1452              		.cfi_restore_state
 737:../../CM7/LWIP/Target/ethernetif.c ****     *buff = NULL;
 1453              		.loc 1 737 5 is_stmt 1 view .LVU390
 737:../../CM7/LWIP/Target/ethernetif.c ****     *buff = NULL;
 1454              		.loc 1 737 19 is_stmt 0 view .LVU391
 1455 0032 054B     		ldr	r3, .L98+8
 1456 0034 0122     		movs	r2, #1
 1457 0036 1A70     		strb	r2, [r3]
 738:../../CM7/LWIP/Target/ethernetif.c ****   }
 1458              		.loc 1 738 5 is_stmt 1 view .LVU392
 738:../../CM7/LWIP/Target/ethernetif.c ****   }
 1459              		.loc 1 738 11 is_stmt 0 view .LVU393
 1460 0038 0023     		movs	r3, #0
 1461 003a 2360     		str	r3, [r4]
 1462              		.loc 1 741 1 view .LVU394
 1463 003c F7E7     		b	.L94
 1464              	.L99:
 1465 003e 00BF     		.align	2
 1466              	.L98:
 1467 0040 00000000 		.word	memp_RX_POOL
 1468 0044 00000000 		.word	pbuf_free_custom
 1469 0048 00000000 		.word	RxAllocStatus
 1470              		.cfi_endproc
 1471              	.LFE185:
 1473              		.section	.text.HAL_ETH_RxLinkCallback,"ax",%progbits
 1474              		.align	1
 1475              		.global	HAL_ETH_RxLinkCallback
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1480              	HAL_ETH_RxLinkCallback:
 1481              	.LVL105:
 1482              	.LFB186:
 742:../../CM7/LWIP/Target/ethernetif.c **** 
 743:../../CM7/LWIP/Target/ethernetif.c **** void HAL_ETH_RxLinkCallback(void **pStart, void **pEnd, uint8_t *buff, uint16_t Length)
 744:../../CM7/LWIP/Target/ethernetif.c **** {
 1483              		.loc 1 744 1 is_stmt 1 view -0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488              		.loc 1 744 1 is_stmt 0 view .LVU396
 1489 0000 30B4     		push	{r4, r5}
 1490              	.LCFI32:
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 4, -8
 1493              		.cfi_offset 5, -4
 745:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN HAL ETH RxLinkCallback */
 746:../../CM7/LWIP/Target/ethernetif.c **** 
 747:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf **ppStart = (struct pbuf **)pStart;
 1494              		.loc 1 747 3 is_stmt 1 view .LVU397
 1495              	.LVL106:
 748:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf **ppEnd = (struct pbuf **)pEnd;
 1496              		.loc 1 748 3 view .LVU398
ARM GAS  /tmp/ccM1xvf3.s 			page 46


 749:../../CM7/LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 1497              		.loc 1 749 3 view .LVU399
 750:../../CM7/LWIP/Target/ethernetif.c **** 
 751:../../CM7/LWIP/Target/ethernetif.c ****   /* Get the struct pbuf from the buff address. */
 752:../../CM7/LWIP/Target/ethernetif.c ****   p = (struct pbuf *)(buff - offsetof(RxBuff_t, buff));
 1498              		.loc 1 752 3 view .LVU400
 1499              		.loc 1 752 5 is_stmt 0 view .LVU401
 1500 0002 A2F12004 		sub	r4, r2, #32
 1501              	.LVL107:
 753:../../CM7/LWIP/Target/ethernetif.c ****   p->next = NULL;
 1502              		.loc 1 753 3 is_stmt 1 view .LVU402
 1503              		.loc 1 753 11 is_stmt 0 view .LVU403
 1504 0006 0025     		movs	r5, #0
 1505 0008 42F8205C 		str	r5, [r2, #-32]
 754:../../CM7/LWIP/Target/ethernetif.c ****   p->tot_len = 0;
 1506              		.loc 1 754 3 is_stmt 1 view .LVU404
 1507              		.loc 1 754 14 is_stmt 0 view .LVU405
 1508 000c 22F8185C 		strh	r5, [r2, #-24]	@ movhi
 755:../../CM7/LWIP/Target/ethernetif.c ****   p->len = Length;
 1509              		.loc 1 755 3 is_stmt 1 view .LVU406
 1510              		.loc 1 755 10 is_stmt 0 view .LVU407
 1511 0010 22F8163C 		strh	r3, [r2, #-22]	@ movhi
 756:../../CM7/LWIP/Target/ethernetif.c **** 
 757:../../CM7/LWIP/Target/ethernetif.c ****   /* Chain the buffer. */
 758:../../CM7/LWIP/Target/ethernetif.c ****   if (!*ppStart)
 1512              		.loc 1 758 3 is_stmt 1 view .LVU408
 1513              		.loc 1 758 8 is_stmt 0 view .LVU409
 1514 0014 0568     		ldr	r5, [r0]
 1515              		.loc 1 758 6 view .LVU410
 1516 0016 25B1     		cbz	r5, .L108
 759:../../CM7/LWIP/Target/ethernetif.c ****   {
 760:../../CM7/LWIP/Target/ethernetif.c ****     /* The first buffer of the packet. */
 761:../../CM7/LWIP/Target/ethernetif.c ****     *ppStart = p;
 762:../../CM7/LWIP/Target/ethernetif.c ****   }
 763:../../CM7/LWIP/Target/ethernetif.c ****   else
 764:../../CM7/LWIP/Target/ethernetif.c ****   {
 765:../../CM7/LWIP/Target/ethernetif.c ****     /* Chain the buffer to the end of the packet. */
 766:../../CM7/LWIP/Target/ethernetif.c ****     (*ppEnd)->next = p;
 1517              		.loc 1 766 5 is_stmt 1 view .LVU411
 1518              		.loc 1 766 6 is_stmt 0 view .LVU412
 1519 0018 0D68     		ldr	r5, [r1]
 1520              		.loc 1 766 20 view .LVU413
 1521 001a 2C60     		str	r4, [r5]
 1522              	.L102:
 767:../../CM7/LWIP/Target/ethernetif.c ****   }
 768:../../CM7/LWIP/Target/ethernetif.c ****   *ppEnd  = p;
 1523              		.loc 1 768 3 is_stmt 1 view .LVU414
 1524              		.loc 1 768 11 is_stmt 0 view .LVU415
 1525 001c 0C60     		str	r4, [r1]
 769:../../CM7/LWIP/Target/ethernetif.c **** 
 770:../../CM7/LWIP/Target/ethernetif.c ****   /* Update the total length of all the buffers of the chain. Each pbuf in the chain should have it
 771:../../CM7/LWIP/Target/ethernetif.c ****    * set to its own length, plus the length of all the following pbufs in the chain. */
 772:../../CM7/LWIP/Target/ethernetif.c ****   for (p = *ppStart; p != NULL; p = p->next)
 1526              		.loc 1 772 3 is_stmt 1 view .LVU416
 1527              		.loc 1 772 10 is_stmt 0 view .LVU417
 1528 001e 0168     		ldr	r1, [r0]
 1529              	.LVL108:
ARM GAS  /tmp/ccM1xvf3.s 			page 47


 1530              		.loc 1 772 3 view .LVU418
 1531 0020 05E0     		b	.L103
 1532              	.LVL109:
 1533              	.L108:
 761:../../CM7/LWIP/Target/ethernetif.c ****   }
 1534              		.loc 1 761 5 is_stmt 1 view .LVU419
 761:../../CM7/LWIP/Target/ethernetif.c ****   }
 1535              		.loc 1 761 14 is_stmt 0 view .LVU420
 1536 0022 0460     		str	r4, [r0]
 1537 0024 FAE7     		b	.L102
 1538              	.LVL110:
 1539              	.L104:
 773:../../CM7/LWIP/Target/ethernetif.c ****   {
 774:../../CM7/LWIP/Target/ethernetif.c ****     p->tot_len += Length;
 1540              		.loc 1 774 5 is_stmt 1 view .LVU421
 1541              		.loc 1 774 6 is_stmt 0 view .LVU422
 1542 0026 0889     		ldrh	r0, [r1, #8]
 1543              		.loc 1 774 16 view .LVU423
 1544 0028 1844     		add	r0, r0, r3
 1545 002a 0881     		strh	r0, [r1, #8]	@ movhi
 772:../../CM7/LWIP/Target/ethernetif.c ****   {
 1546              		.loc 1 772 35 is_stmt 1 discriminator 3 view .LVU424
 1547 002c 0968     		ldr	r1, [r1]
 1548              	.LVL111:
 1549              	.L103:
 772:../../CM7/LWIP/Target/ethernetif.c ****   {
 1550              		.loc 1 772 24 discriminator 1 view .LVU425
 1551 002e 0029     		cmp	r1, #0
 1552 0030 F9D1     		bne	.L104
 775:../../CM7/LWIP/Target/ethernetif.c ****   }
 776:../../CM7/LWIP/Target/ethernetif.c **** 
 777:../../CM7/LWIP/Target/ethernetif.c ****   /* Invalidate data cache because Rx DMA's writing to physical memory makes it stale. */
 778:../../CM7/LWIP/Target/ethernetif.c ****   SCB_InvalidateDCache_by_Addr((uint32_t *)buff, Length);
 1553              		.loc 1 778 3 view .LVU426
 1554              	.LVL112:
 1555              	.LBB25:
 1556              	.LBI25:
 1557              		.file 2 "../../Drivers/CMSIS/Include/core_cm7.h"
   1:../../Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:../../Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:../../Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.1.1
   5:../../Drivers/CMSIS/Include/core_cm7.h ****  * @date     28. March 2019
   6:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/core_cm7.h **** /*
   8:../../Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../../Drivers/CMSIS/Include/core_cm7.h ****  *
  10:../../Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../Drivers/CMSIS/Include/core_cm7.h ****  *
  12:../../Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:../../Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:../../Drivers/CMSIS/Include/core_cm7.h ****  *
  16:../../Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../Drivers/CMSIS/Include/core_cm7.h ****  *
  18:../../Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccM1xvf3.s 			page 48


  20:../../Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:../../Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:../../Drivers/CMSIS/Include/core_cm7.h ****  */
  24:../../Drivers/CMSIS/Include/core_cm7.h **** 
  25:../../Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:../../Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:../../Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:../../Drivers/CMSIS/Include/core_cm7.h **** 
  31:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:../../Drivers/CMSIS/Include/core_cm7.h **** 
  34:../../Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:../../Drivers/CMSIS/Include/core_cm7.h **** 
  36:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:../../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:../../Drivers/CMSIS/Include/core_cm7.h **** 
  40:../../Drivers/CMSIS/Include/core_cm7.h **** /**
  41:../../Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../../Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../../Drivers/CMSIS/Include/core_cm7.h **** 
  44:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../../Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../../Drivers/CMSIS/Include/core_cm7.h **** 
  47:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../../Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:../../Drivers/CMSIS/Include/core_cm7.h **** 
  50:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../../Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:../../Drivers/CMSIS/Include/core_cm7.h ****  */
  53:../../Drivers/CMSIS/Include/core_cm7.h **** 
  54:../../Drivers/CMSIS/Include/core_cm7.h **** 
  55:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:../../Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:../../Drivers/CMSIS/Include/core_cm7.h **** /**
  59:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:../../Drivers/CMSIS/Include/core_cm7.h ****  */
  62:../../Drivers/CMSIS/Include/core_cm7.h **** 
  63:../../Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:../../Drivers/CMSIS/Include/core_cm7.h **** 
  65:../../Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:../../Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:../../Drivers/CMSIS/Include/core_cm7.h **** 
  71:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:../../Drivers/CMSIS/Include/core_cm7.h **** 
  73:../../Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../../Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../../Drivers/CMSIS/Include/core_cm7.h **** */
  76:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
ARM GAS  /tmp/ccM1xvf3.s 			page 49


  77:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:../../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:../../Drivers/CMSIS/Include/core_cm7.h **** 
  88:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_FP
  90:../../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:../../Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:../../Drivers/CMSIS/Include/core_cm7.h **** 
 100:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 108:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:../../Drivers/CMSIS/Include/core_cm7.h **** 
 112:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:../../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:../../Drivers/CMSIS/Include/core_cm7.h **** 
 124:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:../../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/ccM1xvf3.s 			page 50


 134:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:../../Drivers/CMSIS/Include/core_cm7.h **** 
 136:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:../../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:../../Drivers/CMSIS/Include/core_cm7.h **** 
 148:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:../../Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:../../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:../../Drivers/CMSIS/Include/core_cm7.h **** 
 160:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:../../Drivers/CMSIS/Include/core_cm7.h **** 
 162:../../Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../../Drivers/CMSIS/Include/core_cm7.h **** 
 164:../../Drivers/CMSIS/Include/core_cm7.h **** 
 165:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:../../Drivers/CMSIS/Include/core_cm7.h **** }
 167:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:../../Drivers/CMSIS/Include/core_cm7.h **** 
 169:../../Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:../../Drivers/CMSIS/Include/core_cm7.h **** 
 171:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:../../Drivers/CMSIS/Include/core_cm7.h **** 
 173:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:../../Drivers/CMSIS/Include/core_cm7.h **** 
 176:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:../../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:../../Drivers/CMSIS/Include/core_cm7.h **** 
 180:../../Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:../../Drivers/CMSIS/Include/core_cm7.h **** 
 187:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/ccM1xvf3.s 			page 51


 191:../../Drivers/CMSIS/Include/core_cm7.h **** 
 192:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:../../Drivers/CMSIS/Include/core_cm7.h **** 
 197:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:../../Drivers/CMSIS/Include/core_cm7.h **** 
 202:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:../../Drivers/CMSIS/Include/core_cm7.h **** 
 207:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:../../Drivers/CMSIS/Include/core_cm7.h **** 
 212:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:../../Drivers/CMSIS/Include/core_cm7.h **** 
 217:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:../../Drivers/CMSIS/Include/core_cm7.h **** 
 223:../../Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 225:../../Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:../../Drivers/CMSIS/Include/core_cm7.h **** 
 227:../../Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:../../Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:../../Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:../../Drivers/CMSIS/Include/core_cm7.h **** */
 231:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:../../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:../../Drivers/CMSIS/Include/core_cm7.h **** #else
 234:../../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:../../Drivers/CMSIS/Include/core_cm7.h **** 
 239:../../Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:../../Drivers/CMSIS/Include/core_cm7.h **** 
 244:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:../../Drivers/CMSIS/Include/core_cm7.h **** 
 246:../../Drivers/CMSIS/Include/core_cm7.h **** 
 247:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 52


 248:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:../../Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:../../Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 260:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:../../Drivers/CMSIS/Include/core_cm7.h **** */
 263:../../Drivers/CMSIS/Include/core_cm7.h **** 
 264:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 265:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 270:../../Drivers/CMSIS/Include/core_cm7.h **** 
 271:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 272:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 274:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:../../Drivers/CMSIS/Include/core_cm7.h **** {
 276:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 278:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:../../Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:../../Drivers/CMSIS/Include/core_cm7.h **** 
 290:../../Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:../../Drivers/CMSIS/Include/core_cm7.h **** 
 294:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:../../Drivers/CMSIS/Include/core_cm7.h **** 
 297:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:../../Drivers/CMSIS/Include/core_cm7.h **** 
 300:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:../../Drivers/CMSIS/Include/core_cm7.h **** 
 303:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
ARM GAS  /tmp/ccM1xvf3.s 			page 53


 305:../../Drivers/CMSIS/Include/core_cm7.h **** 
 306:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:../../Drivers/CMSIS/Include/core_cm7.h **** 
 309:../../Drivers/CMSIS/Include/core_cm7.h **** 
 310:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 311:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 313:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:../../Drivers/CMSIS/Include/core_cm7.h **** {
 315:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 316:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 317:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:../../Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:../../Drivers/CMSIS/Include/core_cm7.h **** 
 323:../../Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:../../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:../../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:../../Drivers/CMSIS/Include/core_cm7.h **** 
 327:../../Drivers/CMSIS/Include/core_cm7.h **** 
 328:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 329:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 331:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:../../Drivers/CMSIS/Include/core_cm7.h **** {
 333:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 335:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:../../Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:../../Drivers/CMSIS/Include/core_cm7.h **** 
 351:../../Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:../../Drivers/CMSIS/Include/core_cm7.h **** 
 355:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:../../Drivers/CMSIS/Include/core_cm7.h **** 
 358:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:../../Drivers/CMSIS/Include/core_cm7.h **** 
 361:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
ARM GAS  /tmp/ccM1xvf3.s 			page 54


 362:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:../../Drivers/CMSIS/Include/core_cm7.h **** 
 364:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:../../Drivers/CMSIS/Include/core_cm7.h **** 
 367:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:../../Drivers/CMSIS/Include/core_cm7.h **** 
 370:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:../../Drivers/CMSIS/Include/core_cm7.h **** 
 373:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:../../Drivers/CMSIS/Include/core_cm7.h **** 
 376:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:../../Drivers/CMSIS/Include/core_cm7.h **** 
 379:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:../../Drivers/CMSIS/Include/core_cm7.h **** 
 382:../../Drivers/CMSIS/Include/core_cm7.h **** 
 383:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 384:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 386:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:../../Drivers/CMSIS/Include/core_cm7.h **** {
 388:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 390:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:../../Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:../../Drivers/CMSIS/Include/core_cm7.h **** 
 398:../../Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:../../Drivers/CMSIS/Include/core_cm7.h **** 
 402:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:../../Drivers/CMSIS/Include/core_cm7.h **** 
 405:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:../../Drivers/CMSIS/Include/core_cm7.h **** 
 408:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:../../Drivers/CMSIS/Include/core_cm7.h **** 
 410:../../Drivers/CMSIS/Include/core_cm7.h **** 
 411:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 412:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 417:../../Drivers/CMSIS/Include/core_cm7.h **** 
 418:../../Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccM1xvf3.s 			page 55


 419:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 421:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:../../Drivers/CMSIS/Include/core_cm7.h **** {
 423:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:../../Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:../../Drivers/CMSIS/Include/core_cm7.h **** 
 438:../../Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:../../Drivers/CMSIS/Include/core_cm7.h **** 
 442:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:../../Drivers/CMSIS/Include/core_cm7.h **** 
 444:../../Drivers/CMSIS/Include/core_cm7.h **** 
 445:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 446:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 450:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 451:../../Drivers/CMSIS/Include/core_cm7.h **** 
 452:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 453:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 455:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:../../Drivers/CMSIS/Include/core_cm7.h **** {
 457:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
ARM GAS  /tmp/ccM1xvf3.s 			page 56


 476:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:../../Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:../../Drivers/CMSIS/Include/core_cm7.h **** 
 509:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:../../Drivers/CMSIS/Include/core_cm7.h **** 
 513:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:../../Drivers/CMSIS/Include/core_cm7.h **** 
 516:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:../../Drivers/CMSIS/Include/core_cm7.h **** 
 519:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:../../Drivers/CMSIS/Include/core_cm7.h **** 
 522:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:../../Drivers/CMSIS/Include/core_cm7.h **** 
 525:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:../../Drivers/CMSIS/Include/core_cm7.h **** 
 529:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:../../Drivers/CMSIS/Include/core_cm7.h **** 
 532:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
ARM GAS  /tmp/ccM1xvf3.s 			page 57


 533:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:../../Drivers/CMSIS/Include/core_cm7.h **** 
 535:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:../../Drivers/CMSIS/Include/core_cm7.h **** 
 538:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:../../Drivers/CMSIS/Include/core_cm7.h **** 
 541:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:../../Drivers/CMSIS/Include/core_cm7.h **** 
 544:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:../../Drivers/CMSIS/Include/core_cm7.h **** 
 547:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:../../Drivers/CMSIS/Include/core_cm7.h **** 
 550:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:../../Drivers/CMSIS/Include/core_cm7.h **** 
 553:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:../../Drivers/CMSIS/Include/core_cm7.h **** 
 556:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:../../Drivers/CMSIS/Include/core_cm7.h **** 
 560:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:../../Drivers/CMSIS/Include/core_cm7.h **** 
 564:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:../../Drivers/CMSIS/Include/core_cm7.h **** 
 567:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:../../Drivers/CMSIS/Include/core_cm7.h **** 
 570:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:../../Drivers/CMSIS/Include/core_cm7.h **** 
 573:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:../../Drivers/CMSIS/Include/core_cm7.h **** 
 576:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:../../Drivers/CMSIS/Include/core_cm7.h **** 
 579:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:../../Drivers/CMSIS/Include/core_cm7.h **** 
 582:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:../../Drivers/CMSIS/Include/core_cm7.h **** 
 586:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:../../Drivers/CMSIS/Include/core_cm7.h **** 
 589:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
ARM GAS  /tmp/ccM1xvf3.s 			page 58


 590:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:../../Drivers/CMSIS/Include/core_cm7.h **** 
 592:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:../../Drivers/CMSIS/Include/core_cm7.h **** 
 596:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:../../Drivers/CMSIS/Include/core_cm7.h **** 
 599:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:../../Drivers/CMSIS/Include/core_cm7.h **** 
 602:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:../../Drivers/CMSIS/Include/core_cm7.h **** 
 605:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:../../Drivers/CMSIS/Include/core_cm7.h **** 
 608:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:../../Drivers/CMSIS/Include/core_cm7.h **** 
 611:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:../../Drivers/CMSIS/Include/core_cm7.h **** 
 614:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:../../Drivers/CMSIS/Include/core_cm7.h **** 
 617:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:../../Drivers/CMSIS/Include/core_cm7.h **** 
 620:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:../../Drivers/CMSIS/Include/core_cm7.h **** 
 624:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:../../Drivers/CMSIS/Include/core_cm7.h **** 
 627:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:../../Drivers/CMSIS/Include/core_cm7.h **** 
 630:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:../../Drivers/CMSIS/Include/core_cm7.h **** 
 633:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:../../Drivers/CMSIS/Include/core_cm7.h **** 
 636:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:../../Drivers/CMSIS/Include/core_cm7.h **** 
 639:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:../../Drivers/CMSIS/Include/core_cm7.h **** 
 642:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:../../Drivers/CMSIS/Include/core_cm7.h **** 
 645:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
ARM GAS  /tmp/ccM1xvf3.s 			page 59


 647:../../Drivers/CMSIS/Include/core_cm7.h **** 
 648:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:../../Drivers/CMSIS/Include/core_cm7.h **** 
 651:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:../../Drivers/CMSIS/Include/core_cm7.h **** 
 654:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:../../Drivers/CMSIS/Include/core_cm7.h **** 
 657:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:../../Drivers/CMSIS/Include/core_cm7.h **** 
 660:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:../../Drivers/CMSIS/Include/core_cm7.h **** 
 663:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:../../Drivers/CMSIS/Include/core_cm7.h **** 
 667:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:../../Drivers/CMSIS/Include/core_cm7.h **** 
 670:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:../../Drivers/CMSIS/Include/core_cm7.h **** 
 673:../../Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:../../Drivers/CMSIS/Include/core_cm7.h **** 
 677:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:../../Drivers/CMSIS/Include/core_cm7.h **** 
 680:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:../../Drivers/CMSIS/Include/core_cm7.h **** 
 683:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:../../Drivers/CMSIS/Include/core_cm7.h **** 
 686:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:../../Drivers/CMSIS/Include/core_cm7.h **** 
 689:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:../../Drivers/CMSIS/Include/core_cm7.h **** 
 692:../../Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:../../Drivers/CMSIS/Include/core_cm7.h **** 
 696:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:../../Drivers/CMSIS/Include/core_cm7.h **** 
 699:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:../../Drivers/CMSIS/Include/core_cm7.h **** 
 702:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
ARM GAS  /tmp/ccM1xvf3.s 			page 60


 704:../../Drivers/CMSIS/Include/core_cm7.h **** 
 705:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:../../Drivers/CMSIS/Include/core_cm7.h **** 
 708:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:../../Drivers/CMSIS/Include/core_cm7.h **** 
 711:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:../../Drivers/CMSIS/Include/core_cm7.h **** 
 714:../../Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:../../Drivers/CMSIS/Include/core_cm7.h **** 
 718:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:../../Drivers/CMSIS/Include/core_cm7.h **** 
 721:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:../../Drivers/CMSIS/Include/core_cm7.h **** 
 724:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:../../Drivers/CMSIS/Include/core_cm7.h **** 
 727:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:../../Drivers/CMSIS/Include/core_cm7.h **** 
 730:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:../../Drivers/CMSIS/Include/core_cm7.h **** 
 733:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:../../Drivers/CMSIS/Include/core_cm7.h **** 
 737:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:../../Drivers/CMSIS/Include/core_cm7.h **** 
 740:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:../../Drivers/CMSIS/Include/core_cm7.h **** 
 743:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:../../Drivers/CMSIS/Include/core_cm7.h **** 
 747:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:../../Drivers/CMSIS/Include/core_cm7.h **** 
 750:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:../../Drivers/CMSIS/Include/core_cm7.h **** 
 753:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:../../Drivers/CMSIS/Include/core_cm7.h **** 
 756:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:../../Drivers/CMSIS/Include/core_cm7.h **** 
 759:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
ARM GAS  /tmp/ccM1xvf3.s 			page 61


 761:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:../../Drivers/CMSIS/Include/core_cm7.h **** 
 763:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:../../Drivers/CMSIS/Include/core_cm7.h **** 
 766:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:../../Drivers/CMSIS/Include/core_cm7.h **** 
 770:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:../../Drivers/CMSIS/Include/core_cm7.h **** 
 773:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:../../Drivers/CMSIS/Include/core_cm7.h **** 
 776:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:../../Drivers/CMSIS/Include/core_cm7.h **** 
 779:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:../../Drivers/CMSIS/Include/core_cm7.h **** 
 782:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:../../Drivers/CMSIS/Include/core_cm7.h **** 
 786:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:../../Drivers/CMSIS/Include/core_cm7.h **** 
 789:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:../../Drivers/CMSIS/Include/core_cm7.h **** 
 792:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:../../Drivers/CMSIS/Include/core_cm7.h **** 
 795:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:../../Drivers/CMSIS/Include/core_cm7.h **** 
 798:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:../../Drivers/CMSIS/Include/core_cm7.h **** 
 801:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:../../Drivers/CMSIS/Include/core_cm7.h **** 
 804:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:../../Drivers/CMSIS/Include/core_cm7.h **** 
 808:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:../../Drivers/CMSIS/Include/core_cm7.h **** 
 811:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:../../Drivers/CMSIS/Include/core_cm7.h **** 
 815:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
ARM GAS  /tmp/ccM1xvf3.s 			page 62


 818:../../Drivers/CMSIS/Include/core_cm7.h **** 
 819:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:../../Drivers/CMSIS/Include/core_cm7.h **** 
 822:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:../../Drivers/CMSIS/Include/core_cm7.h **** 
 826:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:../../Drivers/CMSIS/Include/core_cm7.h **** 
 829:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:../../Drivers/CMSIS/Include/core_cm7.h **** 
 833:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:../../Drivers/CMSIS/Include/core_cm7.h **** 
 836:../../Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:../../Drivers/CMSIS/Include/core_cm7.h **** 
 840:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:../../Drivers/CMSIS/Include/core_cm7.h **** 
 843:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:../../Drivers/CMSIS/Include/core_cm7.h **** 
 846:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:../../Drivers/CMSIS/Include/core_cm7.h **** 
 849:../../Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:../../Drivers/CMSIS/Include/core_cm7.h **** 
 853:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:../../Drivers/CMSIS/Include/core_cm7.h **** 
 856:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:../../Drivers/CMSIS/Include/core_cm7.h **** 
 859:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:../../Drivers/CMSIS/Include/core_cm7.h **** 
 862:../../Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:../../Drivers/CMSIS/Include/core_cm7.h **** 
 866:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:../../Drivers/CMSIS/Include/core_cm7.h **** 
 869:../../Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:../../Drivers/CMSIS/Include/core_cm7.h **** 
 873:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
ARM GAS  /tmp/ccM1xvf3.s 			page 63


 875:../../Drivers/CMSIS/Include/core_cm7.h **** 
 876:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:../../Drivers/CMSIS/Include/core_cm7.h **** 
 879:../../Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:../../Drivers/CMSIS/Include/core_cm7.h **** 
 883:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:../../Drivers/CMSIS/Include/core_cm7.h **** 
 886:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:../../Drivers/CMSIS/Include/core_cm7.h **** 
 889:../../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:../../Drivers/CMSIS/Include/core_cm7.h **** 
 893:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:../../Drivers/CMSIS/Include/core_cm7.h **** 
 896:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:../../Drivers/CMSIS/Include/core_cm7.h **** 
 899:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:../../Drivers/CMSIS/Include/core_cm7.h **** 
 902:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:../../Drivers/CMSIS/Include/core_cm7.h **** 
 905:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:../../Drivers/CMSIS/Include/core_cm7.h **** 
 908:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:../../Drivers/CMSIS/Include/core_cm7.h **** 
 910:../../Drivers/CMSIS/Include/core_cm7.h **** 
 911:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 912:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 917:../../Drivers/CMSIS/Include/core_cm7.h **** 
 918:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 919:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 921:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 922:../../Drivers/CMSIS/Include/core_cm7.h **** {
 923:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:../../Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:../../Drivers/CMSIS/Include/core_cm7.h **** 
 928:../../Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 64


 932:../../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:../../Drivers/CMSIS/Include/core_cm7.h **** 
 936:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:../../Drivers/CMSIS/Include/core_cm7.h **** 
 939:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:../../Drivers/CMSIS/Include/core_cm7.h **** 
 942:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
 943:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:../../Drivers/CMSIS/Include/core_cm7.h **** 
 945:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:../../Drivers/CMSIS/Include/core_cm7.h **** 
 948:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:../../Drivers/CMSIS/Include/core_cm7.h **** 
 951:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:../../Drivers/CMSIS/Include/core_cm7.h **** 
 954:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:../../Drivers/CMSIS/Include/core_cm7.h **** 
 957:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:../../Drivers/CMSIS/Include/core_cm7.h **** 
 960:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:../../Drivers/CMSIS/Include/core_cm7.h **** 
 963:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 965:../../Drivers/CMSIS/Include/core_cm7.h **** 
 966:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:../../Drivers/CMSIS/Include/core_cm7.h **** 
 968:../../Drivers/CMSIS/Include/core_cm7.h **** 
 969:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 970:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 974:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 975:../../Drivers/CMSIS/Include/core_cm7.h **** 
 976:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 977:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 979:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 980:../../Drivers/CMSIS/Include/core_cm7.h **** {
 981:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:../../Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 986:../../Drivers/CMSIS/Include/core_cm7.h **** 
 987:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
ARM GAS  /tmp/ccM1xvf3.s 			page 65


 989:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:../../Drivers/CMSIS/Include/core_cm7.h **** 
 991:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:../../Drivers/CMSIS/Include/core_cm7.h **** 
 994:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:../../Drivers/CMSIS/Include/core_cm7.h **** 
 997:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:../../Drivers/CMSIS/Include/core_cm7.h **** 
1000:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1002:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:../../Drivers/CMSIS/Include/core_cm7.h **** 
1004:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1005:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:../../Drivers/CMSIS/Include/core_cm7.h **** 
1008:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:../../Drivers/CMSIS/Include/core_cm7.h **** 
1012:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:../../Drivers/CMSIS/Include/core_cm7.h **** 
1015:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:../../Drivers/CMSIS/Include/core_cm7.h **** 
1018:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:../../Drivers/CMSIS/Include/core_cm7.h **** 
1020:../../Drivers/CMSIS/Include/core_cm7.h **** 
1021:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1022:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1026:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1027:../../Drivers/CMSIS/Include/core_cm7.h **** 
1028:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1029:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1031:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1032:../../Drivers/CMSIS/Include/core_cm7.h **** {
1033:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1034:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1035:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:../../Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
ARM GAS  /tmp/ccM1xvf3.s 			page 66


1046:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1057:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1059:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1062:../../Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1063:../../Drivers/CMSIS/Include/core_cm7.h **** 
1064:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:../../Drivers/CMSIS/Include/core_cm7.h **** 
1068:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:../../Drivers/CMSIS/Include/core_cm7.h **** 
1072:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:../../Drivers/CMSIS/Include/core_cm7.h **** 
1075:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1077:../../Drivers/CMSIS/Include/core_cm7.h **** 
1078:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1079:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:../../Drivers/CMSIS/Include/core_cm7.h **** 
1081:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:../../Drivers/CMSIS/Include/core_cm7.h **** 
1084:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:../../Drivers/CMSIS/Include/core_cm7.h **** 
1087:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:../../Drivers/CMSIS/Include/core_cm7.h **** 
1090:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:../../Drivers/CMSIS/Include/core_cm7.h **** 
1093:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:../../Drivers/CMSIS/Include/core_cm7.h **** 
1096:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:../../Drivers/CMSIS/Include/core_cm7.h **** 
1100:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 67


1103:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:../../Drivers/CMSIS/Include/core_cm7.h **** 
1106:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:../../Drivers/CMSIS/Include/core_cm7.h **** 
1108:../../Drivers/CMSIS/Include/core_cm7.h **** 
1109:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1110:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1114:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1115:../../Drivers/CMSIS/Include/core_cm7.h **** 
1116:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1117:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1119:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1120:../../Drivers/CMSIS/Include/core_cm7.h **** {
1121:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1134:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1136:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:../../Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1148:../../Drivers/CMSIS/Include/core_cm7.h **** 
1149:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:../../Drivers/CMSIS/Include/core_cm7.h **** 
1153:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:../../Drivers/CMSIS/Include/core_cm7.h **** 
1156:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:../../Drivers/CMSIS/Include/core_cm7.h **** 
1159:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
ARM GAS  /tmp/ccM1xvf3.s 			page 68


1160:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:../../Drivers/CMSIS/Include/core_cm7.h **** 
1162:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:../../Drivers/CMSIS/Include/core_cm7.h **** 
1165:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:../../Drivers/CMSIS/Include/core_cm7.h **** 
1168:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:../../Drivers/CMSIS/Include/core_cm7.h **** 
1171:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1173:../../Drivers/CMSIS/Include/core_cm7.h **** 
1174:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1176:../../Drivers/CMSIS/Include/core_cm7.h **** 
1177:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:../../Drivers/CMSIS/Include/core_cm7.h **** 
1180:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:../../Drivers/CMSIS/Include/core_cm7.h **** 
1183:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:../../Drivers/CMSIS/Include/core_cm7.h **** 
1186:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:../../Drivers/CMSIS/Include/core_cm7.h **** 
1189:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1191:../../Drivers/CMSIS/Include/core_cm7.h **** 
1192:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1193:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:../../Drivers/CMSIS/Include/core_cm7.h **** 
1195:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:../../Drivers/CMSIS/Include/core_cm7.h **** 
1198:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:../../Drivers/CMSIS/Include/core_cm7.h **** 
1201:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:../../Drivers/CMSIS/Include/core_cm7.h **** 
1204:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:../../Drivers/CMSIS/Include/core_cm7.h **** 
1208:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:../../Drivers/CMSIS/Include/core_cm7.h **** 
1212:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:../../Drivers/CMSIS/Include/core_cm7.h **** 
1216:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
ARM GAS  /tmp/ccM1xvf3.s 			page 69


1217:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:../../Drivers/CMSIS/Include/core_cm7.h **** 
1220:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:../../Drivers/CMSIS/Include/core_cm7.h **** 
1224:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:../../Drivers/CMSIS/Include/core_cm7.h **** 
1228:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1230:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:../../Drivers/CMSIS/Include/core_cm7.h **** 
1232:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1233:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:../../Drivers/CMSIS/Include/core_cm7.h **** 
1235:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:../../Drivers/CMSIS/Include/core_cm7.h **** 
1238:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:../../Drivers/CMSIS/Include/core_cm7.h **** 
1241:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:../../Drivers/CMSIS/Include/core_cm7.h **** 
1244:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:../../Drivers/CMSIS/Include/core_cm7.h **** 
1247:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1248:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:../../Drivers/CMSIS/Include/core_cm7.h **** 
1250:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:../../Drivers/CMSIS/Include/core_cm7.h **** 
1253:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:../../Drivers/CMSIS/Include/core_cm7.h **** 
1256:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:../../Drivers/CMSIS/Include/core_cm7.h **** 
1258:../../Drivers/CMSIS/Include/core_cm7.h **** 
1259:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1260:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1264:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1265:../../Drivers/CMSIS/Include/core_cm7.h **** 
1266:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1267:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1269:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1270:../../Drivers/CMSIS/Include/core_cm7.h **** {
1271:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
ARM GAS  /tmp/ccM1xvf3.s 			page 70


1274:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1285:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1287:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1290:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:../../Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1296:../../Drivers/CMSIS/Include/core_cm7.h **** 
1297:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:../../Drivers/CMSIS/Include/core_cm7.h **** 
1301:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:../../Drivers/CMSIS/Include/core_cm7.h **** 
1305:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1307:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:../../Drivers/CMSIS/Include/core_cm7.h **** 
1309:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:../../Drivers/CMSIS/Include/core_cm7.h **** 
1312:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:../../Drivers/CMSIS/Include/core_cm7.h **** 
1315:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:../../Drivers/CMSIS/Include/core_cm7.h **** 
1318:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:../../Drivers/CMSIS/Include/core_cm7.h **** 
1322:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:../../Drivers/CMSIS/Include/core_cm7.h **** 
1325:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:../../Drivers/CMSIS/Include/core_cm7.h **** 
1329:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
ARM GAS  /tmp/ccM1xvf3.s 			page 71


1331:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:../../Drivers/CMSIS/Include/core_cm7.h **** 
1333:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:../../Drivers/CMSIS/Include/core_cm7.h **** 
1336:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:../../Drivers/CMSIS/Include/core_cm7.h **** 
1339:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:../../Drivers/CMSIS/Include/core_cm7.h **** 
1342:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1344:../../Drivers/CMSIS/Include/core_cm7.h **** 
1345:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1347:../../Drivers/CMSIS/Include/core_cm7.h **** 
1348:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:../../Drivers/CMSIS/Include/core_cm7.h **** 
1351:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:../../Drivers/CMSIS/Include/core_cm7.h **** 
1355:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:../../Drivers/CMSIS/Include/core_cm7.h **** 
1358:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:../../Drivers/CMSIS/Include/core_cm7.h **** 
1362:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1364:../../Drivers/CMSIS/Include/core_cm7.h **** 
1365:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:../../Drivers/CMSIS/Include/core_cm7.h **** 
1368:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:../../Drivers/CMSIS/Include/core_cm7.h **** 
1371:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:../../Drivers/CMSIS/Include/core_cm7.h **** 
1374:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:../../Drivers/CMSIS/Include/core_cm7.h **** 
1377:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:../../Drivers/CMSIS/Include/core_cm7.h **** 
1380:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:../../Drivers/CMSIS/Include/core_cm7.h **** 
1384:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:../../Drivers/CMSIS/Include/core_cm7.h **** 
1387:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
ARM GAS  /tmp/ccM1xvf3.s 			page 72


1388:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:../../Drivers/CMSIS/Include/core_cm7.h **** 
1391:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:../../Drivers/CMSIS/Include/core_cm7.h **** 
1395:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:../../Drivers/CMSIS/Include/core_cm7.h **** 
1398:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1399:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:../../Drivers/CMSIS/Include/core_cm7.h **** 
1401:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:../../Drivers/CMSIS/Include/core_cm7.h **** 
1404:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:../../Drivers/CMSIS/Include/core_cm7.h **** 
1407:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:../../Drivers/CMSIS/Include/core_cm7.h **** 
1410:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:../../Drivers/CMSIS/Include/core_cm7.h **** 
1414:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:../../Drivers/CMSIS/Include/core_cm7.h **** 
1417:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:../../Drivers/CMSIS/Include/core_cm7.h **** 
1419:../../Drivers/CMSIS/Include/core_cm7.h **** 
1420:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1421:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1422:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1426:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1427:../../Drivers/CMSIS/Include/core_cm7.h **** 
1428:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1429:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1431:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1432:../../Drivers/CMSIS/Include/core_cm7.h **** {
1433:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:../../Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
ARM GAS  /tmp/ccM1xvf3.s 			page 73


1445:../../Drivers/CMSIS/Include/core_cm7.h **** 
1446:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:../../Drivers/CMSIS/Include/core_cm7.h **** 
1448:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:../../Drivers/CMSIS/Include/core_cm7.h **** 
1452:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:../../Drivers/CMSIS/Include/core_cm7.h **** 
1455:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1456:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:../../Drivers/CMSIS/Include/core_cm7.h **** 
1458:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1461:../../Drivers/CMSIS/Include/core_cm7.h **** 
1462:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:../../Drivers/CMSIS/Include/core_cm7.h **** 
1465:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:../../Drivers/CMSIS/Include/core_cm7.h **** 
1468:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:../../Drivers/CMSIS/Include/core_cm7.h **** 
1472:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:../../Drivers/CMSIS/Include/core_cm7.h **** 
1476:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1478:../../Drivers/CMSIS/Include/core_cm7.h **** 
1479:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:../../Drivers/CMSIS/Include/core_cm7.h **** 
1482:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:../../Drivers/CMSIS/Include/core_cm7.h **** 
1486:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:../../Drivers/CMSIS/Include/core_cm7.h **** 
1489:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:../../Drivers/CMSIS/Include/core_cm7.h **** 
1492:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:../../Drivers/CMSIS/Include/core_cm7.h **** 
1495:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:../../Drivers/CMSIS/Include/core_cm7.h **** 
1498:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:../../Drivers/CMSIS/Include/core_cm7.h **** 
1501:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
ARM GAS  /tmp/ccM1xvf3.s 			page 74


1502:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:../../Drivers/CMSIS/Include/core_cm7.h **** 
1504:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:../../Drivers/CMSIS/Include/core_cm7.h **** 
1507:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:../../Drivers/CMSIS/Include/core_cm7.h **** 
1510:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:../../Drivers/CMSIS/Include/core_cm7.h **** 
1513:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:../../Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1515:../../Drivers/CMSIS/Include/core_cm7.h **** 
1516:../../Drivers/CMSIS/Include/core_cm7.h **** 
1517:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1518:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1522:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1523:../../Drivers/CMSIS/Include/core_cm7.h **** 
1524:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1525:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1527:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1528:../../Drivers/CMSIS/Include/core_cm7.h **** {
1529:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1533:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1535:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:../../Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1537:../../Drivers/CMSIS/Include/core_cm7.h **** 
1538:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:../../Drivers/CMSIS/Include/core_cm7.h **** 
1542:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:../../Drivers/CMSIS/Include/core_cm7.h **** 
1545:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:../../Drivers/CMSIS/Include/core_cm7.h **** 
1548:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:../../Drivers/CMSIS/Include/core_cm7.h **** 
1551:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:../../Drivers/CMSIS/Include/core_cm7.h **** 
1554:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:../../Drivers/CMSIS/Include/core_cm7.h **** 
1557:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
ARM GAS  /tmp/ccM1xvf3.s 			page 75


1559:../../Drivers/CMSIS/Include/core_cm7.h **** 
1560:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:../../Drivers/CMSIS/Include/core_cm7.h **** 
1563:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:../../Drivers/CMSIS/Include/core_cm7.h **** 
1566:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:../../Drivers/CMSIS/Include/core_cm7.h **** 
1570:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1572:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:../../Drivers/CMSIS/Include/core_cm7.h **** 
1574:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1575:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:../../Drivers/CMSIS/Include/core_cm7.h **** 
1577:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:../../Drivers/CMSIS/Include/core_cm7.h **** 
1580:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:../../Drivers/CMSIS/Include/core_cm7.h **** 
1583:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:../../Drivers/CMSIS/Include/core_cm7.h **** 
1587:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:../../Drivers/CMSIS/Include/core_cm7.h **** 
1590:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1592:../../Drivers/CMSIS/Include/core_cm7.h **** 
1593:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:../../Drivers/CMSIS/Include/core_cm7.h **** 
1596:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:../../Drivers/CMSIS/Include/core_cm7.h **** 
1599:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:../../Drivers/CMSIS/Include/core_cm7.h **** 
1602:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:../../Drivers/CMSIS/Include/core_cm7.h **** 
1605:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:../../Drivers/CMSIS/Include/core_cm7.h **** 
1608:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:../../Drivers/CMSIS/Include/core_cm7.h **** 
1612:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:../../Drivers/CMSIS/Include/core_cm7.h **** 
1615:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
ARM GAS  /tmp/ccM1xvf3.s 			page 76


1616:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:../../Drivers/CMSIS/Include/core_cm7.h **** 
1618:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:../../Drivers/CMSIS/Include/core_cm7.h **** 
1621:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:../../Drivers/CMSIS/Include/core_cm7.h **** 
1623:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:../../Drivers/CMSIS/Include/core_cm7.h **** 
1626:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1627:../../Drivers/CMSIS/Include/core_cm7.h **** 
1628:../../Drivers/CMSIS/Include/core_cm7.h **** 
1629:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1630:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1632:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1634:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1635:../../Drivers/CMSIS/Include/core_cm7.h **** 
1636:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1637:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1639:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1640:../../Drivers/CMSIS/Include/core_cm7.h **** {
1641:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:../../Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1646:../../Drivers/CMSIS/Include/core_cm7.h **** 
1647:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1649:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:../../Drivers/CMSIS/Include/core_cm7.h **** 
1651:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:../../Drivers/CMSIS/Include/core_cm7.h **** 
1654:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:../../Drivers/CMSIS/Include/core_cm7.h **** 
1657:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:../../Drivers/CMSIS/Include/core_cm7.h **** 
1660:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:../../Drivers/CMSIS/Include/core_cm7.h **** 
1663:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:../../Drivers/CMSIS/Include/core_cm7.h **** 
1666:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:../../Drivers/CMSIS/Include/core_cm7.h **** 
1669:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:../../Drivers/CMSIS/Include/core_cm7.h **** 
1672:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
ARM GAS  /tmp/ccM1xvf3.s 			page 77


1673:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:../../Drivers/CMSIS/Include/core_cm7.h **** 
1675:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:../../Drivers/CMSIS/Include/core_cm7.h **** 
1678:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:../../Drivers/CMSIS/Include/core_cm7.h **** 
1681:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:../../Drivers/CMSIS/Include/core_cm7.h **** 
1684:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1686:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:../../Drivers/CMSIS/Include/core_cm7.h **** 
1688:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1689:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:../../Drivers/CMSIS/Include/core_cm7.h **** 
1691:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:../../Drivers/CMSIS/Include/core_cm7.h **** 
1695:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:../../Drivers/CMSIS/Include/core_cm7.h **** 
1698:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:../../Drivers/CMSIS/Include/core_cm7.h **** 
1701:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:../../Drivers/CMSIS/Include/core_cm7.h **** 
1704:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1706:../../Drivers/CMSIS/Include/core_cm7.h **** 
1707:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:../../Drivers/CMSIS/Include/core_cm7.h **** 
1710:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:../../Drivers/CMSIS/Include/core_cm7.h **** 
1713:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:../../Drivers/CMSIS/Include/core_cm7.h **** 
1716:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:../../Drivers/CMSIS/Include/core_cm7.h **** 
1719:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:../../Drivers/CMSIS/Include/core_cm7.h **** 
1722:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:../../Drivers/CMSIS/Include/core_cm7.h **** 
1725:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:../../Drivers/CMSIS/Include/core_cm7.h **** 
1728:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
ARM GAS  /tmp/ccM1xvf3.s 			page 78


1730:../../Drivers/CMSIS/Include/core_cm7.h **** 
1731:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:../../Drivers/CMSIS/Include/core_cm7.h **** 
1733:../../Drivers/CMSIS/Include/core_cm7.h **** 
1734:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1735:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1739:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1740:../../Drivers/CMSIS/Include/core_cm7.h **** 
1741:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1742:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1743:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:../../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1746:../../Drivers/CMSIS/Include/core_cm7.h **** */
1747:../../Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:../../Drivers/CMSIS/Include/core_cm7.h **** 
1749:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1750:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:../../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:../../Drivers/CMSIS/Include/core_cm7.h **** */
1755:../../Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:../../Drivers/CMSIS/Include/core_cm7.h **** 
1757:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:../../Drivers/CMSIS/Include/core_cm7.h **** 
1759:../../Drivers/CMSIS/Include/core_cm7.h **** 
1760:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1761:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1763:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1765:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1766:../../Drivers/CMSIS/Include/core_cm7.h **** 
1767:../../Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:../../Drivers/CMSIS/Include/core_cm7.h **** 
1777:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:../../Drivers/CMSIS/Include/core_cm7.h **** 
1786:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
ARM GAS  /tmp/ccM1xvf3.s 			page 79


1787:../../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:../../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1790:../../Drivers/CMSIS/Include/core_cm7.h **** 
1791:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:../../Drivers/CMSIS/Include/core_cm7.h **** 
1794:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1795:../../Drivers/CMSIS/Include/core_cm7.h **** 
1796:../../Drivers/CMSIS/Include/core_cm7.h **** 
1797:../../Drivers/CMSIS/Include/core_cm7.h **** 
1798:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1799:../../Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1800:../../Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1801:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1802:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1803:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1804:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1805:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1806:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1807:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:../../Drivers/CMSIS/Include/core_cm7.h **** */
1809:../../Drivers/CMSIS/Include/core_cm7.h **** 
1810:../../Drivers/CMSIS/Include/core_cm7.h **** 
1811:../../Drivers/CMSIS/Include/core_cm7.h **** 
1812:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1814:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1818:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1819:../../Drivers/CMSIS/Include/core_cm7.h **** 
1820:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:../../Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
1824:../../Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:../../Drivers/CMSIS/Include/core_cm7.h **** #else
1826:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:../../Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:../../Drivers/CMSIS/Include/core_cm7.h **** 
1840:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:../../Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/ccM1xvf3.s 			page 80


1844:../../Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:../../Drivers/CMSIS/Include/core_cm7.h **** #else
1846:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:../../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:../../Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:../../Drivers/CMSIS/Include/core_cm7.h **** 
1850:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:../../Drivers/CMSIS/Include/core_cm7.h **** 
1852:../../Drivers/CMSIS/Include/core_cm7.h **** 
1853:../../Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:../../Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1855:../../Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:../../Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1857:../../Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:../../Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:../../Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1860:../../Drivers/CMSIS/Include/core_cm7.h **** 
1861:../../Drivers/CMSIS/Include/core_cm7.h **** 
1862:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1863:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:../../Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:../../Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1871:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:../../Drivers/CMSIS/Include/core_cm7.h **** {
1873:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1874:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1875:../../Drivers/CMSIS/Include/core_cm7.h **** 
1876:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1877:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1878:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:../../Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:../../Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1881:../../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1882:../../Drivers/CMSIS/Include/core_cm7.h **** }
1883:../../Drivers/CMSIS/Include/core_cm7.h **** 
1884:../../Drivers/CMSIS/Include/core_cm7.h **** 
1885:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1886:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:../../Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1890:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:../../Drivers/CMSIS/Include/core_cm7.h **** {
1892:../../Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1893:../../Drivers/CMSIS/Include/core_cm7.h **** }
1894:../../Drivers/CMSIS/Include/core_cm7.h **** 
1895:../../Drivers/CMSIS/Include/core_cm7.h **** 
1896:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1897:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
ARM GAS  /tmp/ccM1xvf3.s 			page 81


1901:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1902:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:../../Drivers/CMSIS/Include/core_cm7.h **** {
1904:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1905:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1906:../../Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
1907:../../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1908:../../Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
1909:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1910:../../Drivers/CMSIS/Include/core_cm7.h **** }
1911:../../Drivers/CMSIS/Include/core_cm7.h **** 
1912:../../Drivers/CMSIS/Include/core_cm7.h **** 
1913:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1914:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1917:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1921:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:../../Drivers/CMSIS/Include/core_cm7.h **** {
1923:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1925:../../Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1927:../../Drivers/CMSIS/Include/core_cm7.h ****   else
1928:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1929:../../Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1930:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1931:../../Drivers/CMSIS/Include/core_cm7.h **** }
1932:../../Drivers/CMSIS/Include/core_cm7.h **** 
1933:../../Drivers/CMSIS/Include/core_cm7.h **** 
1934:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1935:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1940:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:../../Drivers/CMSIS/Include/core_cm7.h **** {
1942:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1943:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1944:../../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1945:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1946:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1947:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1948:../../Drivers/CMSIS/Include/core_cm7.h **** }
1949:../../Drivers/CMSIS/Include/core_cm7.h **** 
1950:../../Drivers/CMSIS/Include/core_cm7.h **** 
1951:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1952:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
ARM GAS  /tmp/ccM1xvf3.s 			page 82


1958:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1959:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:../../Drivers/CMSIS/Include/core_cm7.h **** {
1961:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1962:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1963:../../Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1964:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1965:../../Drivers/CMSIS/Include/core_cm7.h ****   else
1966:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1967:../../Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1968:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1969:../../Drivers/CMSIS/Include/core_cm7.h **** }
1970:../../Drivers/CMSIS/Include/core_cm7.h **** 
1971:../../Drivers/CMSIS/Include/core_cm7.h **** 
1972:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1973:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1974:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1978:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:../../Drivers/CMSIS/Include/core_cm7.h **** {
1980:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1981:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1982:../../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1983:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1984:../../Drivers/CMSIS/Include/core_cm7.h **** }
1985:../../Drivers/CMSIS/Include/core_cm7.h **** 
1986:../../Drivers/CMSIS/Include/core_cm7.h **** 
1987:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1988:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1989:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1991:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1993:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1994:../../Drivers/CMSIS/Include/core_cm7.h **** {
1995:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1996:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1997:../../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1998:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1999:../../Drivers/CMSIS/Include/core_cm7.h **** }
2000:../../Drivers/CMSIS/Include/core_cm7.h **** 
2001:../../Drivers/CMSIS/Include/core_cm7.h **** 
2002:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2003:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2010:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:../../Drivers/CMSIS/Include/core_cm7.h **** {
2012:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2013:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2014:../../Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
ARM GAS  /tmp/ccM1xvf3.s 			page 83


2015:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2016:../../Drivers/CMSIS/Include/core_cm7.h ****   else
2017:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2018:../../Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
2019:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2020:../../Drivers/CMSIS/Include/core_cm7.h **** }
2021:../../Drivers/CMSIS/Include/core_cm7.h **** 
2022:../../Drivers/CMSIS/Include/core_cm7.h **** 
2023:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2024:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:../../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:../../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2031:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2032:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:../../Drivers/CMSIS/Include/core_cm7.h **** {
2034:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2035:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2036:../../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2037:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2038:../../Drivers/CMSIS/Include/core_cm7.h ****   else
2039:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2040:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2041:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2042:../../Drivers/CMSIS/Include/core_cm7.h **** }
2043:../../Drivers/CMSIS/Include/core_cm7.h **** 
2044:../../Drivers/CMSIS/Include/core_cm7.h **** 
2045:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2046:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2047:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2048:../../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:../../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:../../Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2054:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:../../Drivers/CMSIS/Include/core_cm7.h **** {
2056:../../Drivers/CMSIS/Include/core_cm7.h **** 
2057:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2058:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2059:../../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2060:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2061:../../Drivers/CMSIS/Include/core_cm7.h ****   else
2062:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2063:../../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2064:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2065:../../Drivers/CMSIS/Include/core_cm7.h **** }
2066:../../Drivers/CMSIS/Include/core_cm7.h **** 
2067:../../Drivers/CMSIS/Include/core_cm7.h **** 
2068:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2069:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2070:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:../../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
ARM GAS  /tmp/ccM1xvf3.s 			page 84


2072:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:../../Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2079:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:../../Drivers/CMSIS/Include/core_cm7.h **** {
2081:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2082:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2083:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2084:../../Drivers/CMSIS/Include/core_cm7.h **** 
2085:../../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2086:../../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2087:../../Drivers/CMSIS/Include/core_cm7.h **** 
2088:../../Drivers/CMSIS/Include/core_cm7.h ****   return (
2089:../../Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2090:../../Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2091:../../Drivers/CMSIS/Include/core_cm7.h ****          );
2092:../../Drivers/CMSIS/Include/core_cm7.h **** }
2093:../../Drivers/CMSIS/Include/core_cm7.h **** 
2094:../../Drivers/CMSIS/Include/core_cm7.h **** 
2095:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2096:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2097:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:../../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2103:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2105:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2106:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:../../Drivers/CMSIS/Include/core_cm7.h **** {
2108:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2109:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2110:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2111:../../Drivers/CMSIS/Include/core_cm7.h **** 
2112:../../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2113:../../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2114:../../Drivers/CMSIS/Include/core_cm7.h **** 
2115:../../Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2116:../../Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2117:../../Drivers/CMSIS/Include/core_cm7.h **** }
2118:../../Drivers/CMSIS/Include/core_cm7.h **** 
2119:../../Drivers/CMSIS/Include/core_cm7.h **** 
2120:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2121:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:../../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:../../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:../../Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:../../Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccM1xvf3.s 			page 85


2129:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2130:../../Drivers/CMSIS/Include/core_cm7.h **** {
2131:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:../../Drivers/CMSIS/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:../../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();
2134:../../Drivers/CMSIS/Include/core_cm7.h **** }
2135:../../Drivers/CMSIS/Include/core_cm7.h **** 
2136:../../Drivers/CMSIS/Include/core_cm7.h **** 
2137:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2138:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:../../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:../../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:../../Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2145:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:../../Drivers/CMSIS/Include/core_cm7.h **** {
2147:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:../../Drivers/CMSIS/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:../../Drivers/CMSIS/Include/core_cm7.h **** }
2150:../../Drivers/CMSIS/Include/core_cm7.h **** 
2151:../../Drivers/CMSIS/Include/core_cm7.h **** 
2152:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2153:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2154:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2156:../../Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2157:../../Drivers/CMSIS/Include/core_cm7.h **** {
2158:../../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2159:../../Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2160:../../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2161:../../Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2162:../../Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:../../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2164:../../Drivers/CMSIS/Include/core_cm7.h **** 
2165:../../Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2166:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2167:../../Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2168:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2169:../../Drivers/CMSIS/Include/core_cm7.h **** }
2170:../../Drivers/CMSIS/Include/core_cm7.h **** 
2171:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2172:../../Drivers/CMSIS/Include/core_cm7.h **** 
2173:../../Drivers/CMSIS/Include/core_cm7.h **** 
2174:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2175:../../Drivers/CMSIS/Include/core_cm7.h **** 
2176:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2177:../../Drivers/CMSIS/Include/core_cm7.h **** 
2178:../../Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2179:../../Drivers/CMSIS/Include/core_cm7.h **** 
2180:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
2181:../../Drivers/CMSIS/Include/core_cm7.h **** 
2182:../../Drivers/CMSIS/Include/core_cm7.h **** 
2183:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2184:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2185:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/ccM1xvf3.s 			page 86


2186:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2187:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2188:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
2189:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2190:../../Drivers/CMSIS/Include/core_cm7.h **** 
2191:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2192:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2193:../../Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2194:../../Drivers/CMSIS/Include/core_cm7.h ****   \returns
2195:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2196:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2197:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2198:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2199:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2200:../../Drivers/CMSIS/Include/core_cm7.h **** {
2201:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2202:../../Drivers/CMSIS/Include/core_cm7.h **** 
2203:../../Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2204:../../Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2205:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2206:../../Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2207:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2208:../../Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2209:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2210:../../Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2211:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2212:../../Drivers/CMSIS/Include/core_cm7.h ****   else
2213:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2214:../../Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2215:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2216:../../Drivers/CMSIS/Include/core_cm7.h **** }
2217:../../Drivers/CMSIS/Include/core_cm7.h **** 
2218:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2219:../../Drivers/CMSIS/Include/core_cm7.h **** 
2220:../../Drivers/CMSIS/Include/core_cm7.h **** 
2221:../../Drivers/CMSIS/Include/core_cm7.h **** 
2222:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2223:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2224:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2225:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2226:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2227:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
2228:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2229:../../Drivers/CMSIS/Include/core_cm7.h **** 
2230:../../Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2231:../../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2232:../../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2233:../../Drivers/CMSIS/Include/core_cm7.h **** 
2234:../../Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2235:../../Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2236:../../Drivers/CMSIS/Include/core_cm7.h **** 
2237:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2238:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2239:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2240:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2241:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
2242:../../Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/ccM1xvf3.s 			page 87


2243:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2244:../../Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
2245:../../Drivers/CMSIS/Include/core_cm7.h **** 
2246:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2247:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2248:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2249:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2250:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2251:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2252:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2253:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2254:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2255:../../Drivers/CMSIS/Include/core_cm7.h **** }
2256:../../Drivers/CMSIS/Include/core_cm7.h **** 
2257:../../Drivers/CMSIS/Include/core_cm7.h **** 
2258:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2259:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2260:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2261:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2262:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
2263:../../Drivers/CMSIS/Include/core_cm7.h **** {
2264:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2265:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2266:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2267:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2268:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2269:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2271:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2272:../../Drivers/CMSIS/Include/core_cm7.h **** }
2273:../../Drivers/CMSIS/Include/core_cm7.h **** 
2274:../../Drivers/CMSIS/Include/core_cm7.h **** 
2275:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2276:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2277:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2278:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2279:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
2280:../../Drivers/CMSIS/Include/core_cm7.h **** {
2281:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2282:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2283:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2284:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2285:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2286:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2287:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2288:../../Drivers/CMSIS/Include/core_cm7.h **** }
2289:../../Drivers/CMSIS/Include/core_cm7.h **** 
2290:../../Drivers/CMSIS/Include/core_cm7.h **** 
2291:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2292:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   I-Cache Invalidate by address
2293:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache for the given address.
2294:../../Drivers/CMSIS/Include/core_cm7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2295:../../Drivers/CMSIS/Include/core_cm7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
2296:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2297:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   isize   size of memory block (in number of bytes)
2298:../../Drivers/CMSIS/Include/core_cm7.h **** */
2299:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (void *addr, int32_t isize)
ARM GAS  /tmp/ccM1xvf3.s 			page 88


2300:../../Drivers/CMSIS/Include/core_cm7.h **** {
2301:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2302:../../Drivers/CMSIS/Include/core_cm7.h ****     if ( isize > 0 ) {
2303:../../Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
2304:../../Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
2305:../../Drivers/CMSIS/Include/core_cm7.h **** 
2306:../../Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2307:../../Drivers/CMSIS/Include/core_cm7.h **** 
2308:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2309:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
2310:../../Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
2311:../../Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
2312:../../Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2313:../../Drivers/CMSIS/Include/core_cm7.h **** 
2314:../../Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2315:../../Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2316:../../Drivers/CMSIS/Include/core_cm7.h ****     }
2317:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2318:../../Drivers/CMSIS/Include/core_cm7.h **** }
2319:../../Drivers/CMSIS/Include/core_cm7.h **** 
2320:../../Drivers/CMSIS/Include/core_cm7.h **** 
2321:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2322:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2323:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2324:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2325:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
2326:../../Drivers/CMSIS/Include/core_cm7.h **** {
2327:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2328:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2329:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2330:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2331:../../Drivers/CMSIS/Include/core_cm7.h **** 
2332:../../Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
2333:../../Drivers/CMSIS/Include/core_cm7.h **** 
2334:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2335:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2336:../../Drivers/CMSIS/Include/core_cm7.h **** 
2337:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2338:../../Drivers/CMSIS/Include/core_cm7.h **** 
2339:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2340:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2341:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2342:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2343:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2344:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2345:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2346:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2347:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2348:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2349:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2350:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2351:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2352:../../Drivers/CMSIS/Include/core_cm7.h **** 
2353:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2354:../../Drivers/CMSIS/Include/core_cm7.h **** 
2355:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2356:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
ARM GAS  /tmp/ccM1xvf3.s 			page 89


2357:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2358:../../Drivers/CMSIS/Include/core_cm7.h **** }
2359:../../Drivers/CMSIS/Include/core_cm7.h **** 
2360:../../Drivers/CMSIS/Include/core_cm7.h **** 
2361:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2362:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2363:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2364:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2365:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
2366:../../Drivers/CMSIS/Include/core_cm7.h **** {
2367:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2368:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2369:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2370:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2371:../../Drivers/CMSIS/Include/core_cm7.h **** 
2372:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2373:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2374:../../Drivers/CMSIS/Include/core_cm7.h **** 
2375:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2376:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2377:../../Drivers/CMSIS/Include/core_cm7.h **** 
2378:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2379:../../Drivers/CMSIS/Include/core_cm7.h **** 
2380:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2381:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2382:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2383:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2384:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2385:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2386:../../Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2387:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2388:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2389:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2390:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2391:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2392:../../Drivers/CMSIS/Include/core_cm7.h **** 
2393:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2394:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2395:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2396:../../Drivers/CMSIS/Include/core_cm7.h **** }
2397:../../Drivers/CMSIS/Include/core_cm7.h **** 
2398:../../Drivers/CMSIS/Include/core_cm7.h **** 
2399:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2400:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2401:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2402:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2403:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
2404:../../Drivers/CMSIS/Include/core_cm7.h **** {
2405:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2406:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2407:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2408:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2409:../../Drivers/CMSIS/Include/core_cm7.h **** 
2410:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2411:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2412:../../Drivers/CMSIS/Include/core_cm7.h **** 
2413:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
ARM GAS  /tmp/ccM1xvf3.s 			page 90


2414:../../Drivers/CMSIS/Include/core_cm7.h **** 
2415:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2416:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2417:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2418:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2419:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2420:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2421:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2422:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2423:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2424:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2425:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2426:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2427:../../Drivers/CMSIS/Include/core_cm7.h **** 
2428:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2429:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2430:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2431:../../Drivers/CMSIS/Include/core_cm7.h **** }
2432:../../Drivers/CMSIS/Include/core_cm7.h **** 
2433:../../Drivers/CMSIS/Include/core_cm7.h **** 
2434:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2435:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2436:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2437:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2438:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
2439:../../Drivers/CMSIS/Include/core_cm7.h **** {
2440:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2441:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2442:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2443:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2444:../../Drivers/CMSIS/Include/core_cm7.h **** 
2445:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2446:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2447:../../Drivers/CMSIS/Include/core_cm7.h **** 
2448:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2449:../../Drivers/CMSIS/Include/core_cm7.h **** 
2450:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2451:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2452:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2453:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2454:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2455:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2456:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2457:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2458:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2459:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2460:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2461:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2462:../../Drivers/CMSIS/Include/core_cm7.h **** 
2463:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2464:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2465:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2466:../../Drivers/CMSIS/Include/core_cm7.h **** }
2467:../../Drivers/CMSIS/Include/core_cm7.h **** 
2468:../../Drivers/CMSIS/Include/core_cm7.h **** 
2469:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2470:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
ARM GAS  /tmp/ccM1xvf3.s 			page 91


2471:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2472:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2473:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
2474:../../Drivers/CMSIS/Include/core_cm7.h **** {
2475:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2476:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2477:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2478:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2479:../../Drivers/CMSIS/Include/core_cm7.h **** 
2480:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2481:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2482:../../Drivers/CMSIS/Include/core_cm7.h **** 
2483:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2484:../../Drivers/CMSIS/Include/core_cm7.h **** 
2485:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2486:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2487:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2488:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2489:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2490:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2491:../../Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2492:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2493:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2494:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2495:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2496:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2497:../../Drivers/CMSIS/Include/core_cm7.h **** 
2498:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2499:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2500:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2501:../../Drivers/CMSIS/Include/core_cm7.h **** }
2502:../../Drivers/CMSIS/Include/core_cm7.h **** 
2503:../../Drivers/CMSIS/Include/core_cm7.h **** 
2504:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2505:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2506:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address.
2507:../../Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2508:../../Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
2509:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2510:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2511:../../Drivers/CMSIS/Include/core_cm7.h **** */
2512:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (void *addr, int32_t dsize)
 1558              		.loc 2 2512 27 view .LVU427
 1559              	.LBB26:
2513:../../Drivers/CMSIS/Include/core_cm7.h **** {
2514:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2515:../../Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
 1560              		.loc 2 2515 5 view .LVU428
 1561              		.loc 2 2515 8 is_stmt 0 view .LVU429
 1562 0032 83B1     		cbz	r3, .L100
 1563              	.LBB27:
2516:../../Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1564              		.loc 2 2516 8 is_stmt 1 view .LVU430
 1565              		.loc 2 2516 36 is_stmt 0 view .LVU431
 1566 0034 1146     		mov	r1, r2
 1567              	.LVL113:
 1568              		.loc 2 2516 52 view .LVU432
ARM GAS  /tmp/ccM1xvf3.s 			page 92


 1569 0036 02F01F02 		and	r2, r2, #31
 1570              	.LVL114:
 1571              		.loc 2 2516 32 view .LVU433
 1572 003a 1344     		add	r3, r3, r2
 1573              	.LVL115:
2517:../../Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1574              		.loc 2 2517 7 is_stmt 1 view .LVU434
2518:../../Drivers/CMSIS/Include/core_cm7.h ****     
2519:../../Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
 1575              		.loc 2 2519 7 view .LVU435
 1576              	.LBB28:
 1577              	.LBI28:
 1578              		.file 3 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  /tmp/ccM1xvf3.s 			page 93


  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccM1xvf3.s 			page 94


 102:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  /tmp/ccM1xvf3.s 			page 95


 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
ARM GAS  /tmp/ccM1xvf3.s 			page 96


 216:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
ARM GAS  /tmp/ccM1xvf3.s 			page 97


 273:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
ARM GAS  /tmp/ccM1xvf3.s 			page 98


 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 99


 387:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 100


 444:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  /tmp/ccM1xvf3.s 			page 101


 501:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccM1xvf3.s 			page 102


 558:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccM1xvf3.s 			page 103


 615:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 104


 672:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  /tmp/ccM1xvf3.s 			page 105


 729:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /tmp/ccM1xvf3.s 			page 106


 786:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccM1xvf3.s 			page 107


 843:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccM1xvf3.s 			page 108


 900:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1579              		.loc 3 944 27 view .LVU436
 1580              	.LBB29:
 945:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1581              		.loc 3 946 3 view .LVU437
 1582              		.syntax unified
 1583              	@ 946 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1584 003c BFF34F8F 		dsb 0xF
 1585              	@ 0 "" 2
 1586              	.LVL116:
 1587              		.thumb
 1588              		.syntax unified
ARM GAS  /tmp/ccM1xvf3.s 			page 109


 1589              	.L106:
 1590              		.loc 3 946 3 is_stmt 0 view .LVU438
 1591              	.LBE29:
 1592              	.LBE28:
2520:../../Drivers/CMSIS/Include/core_cm7.h **** 
2521:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
 1593              		.loc 2 2521 7 is_stmt 1 view .LVU439
2522:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1594              		.loc 2 2522 9 view .LVU440
 1595              		.loc 2 2522 22 is_stmt 0 view .LVU441
 1596 0040 064A     		ldr	r2, .L109
 1597 0042 C2F85C12 		str	r1, [r2, #604]
2523:../../Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1598              		.loc 2 2523 9 is_stmt 1 view .LVU442
 1599              		.loc 2 2523 17 is_stmt 0 view .LVU443
 1600 0046 2031     		adds	r1, r1, #32
 1601              	.LVL117:
2524:../../Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1602              		.loc 2 2524 9 is_stmt 1 view .LVU444
 1603              		.loc 2 2524 17 is_stmt 0 view .LVU445
 1604 0048 203B     		subs	r3, r3, #32
 1605              	.LVL118:
2525:../../Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
 1606              		.loc 2 2525 25 is_stmt 1 discriminator 1 view .LVU446
 1607 004a 002B     		cmp	r3, #0
 1608 004c F8DC     		bgt	.L106
2526:../../Drivers/CMSIS/Include/core_cm7.h **** 
2527:../../Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
 1609              		.loc 2 2527 7 view .LVU447
 1610              	.LBB30:
 1611              	.LBI30:
 944:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1612              		.loc 3 944 27 view .LVU448
 1613              	.LBB31:
 1614              		.loc 3 946 3 view .LVU449
 1615              		.syntax unified
 1616              	@ 946 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1617 004e BFF34F8F 		dsb 0xF
 1618              	@ 0 "" 2
 1619              		.thumb
 1620              		.syntax unified
 1621              	.LBE31:
 1622              	.LBE30:
2528:../../Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
 1623              		.loc 2 2528 7 view .LVU450
 1624              	.LBB32:
 1625              	.LBI32:
 933:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1626              		.loc 3 933 27 view .LVU451
 1627              	.LBB33:
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1628              		.loc 3 935 3 view .LVU452
 1629              		.syntax unified
 1630              	@ 935 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1631 0052 BFF36F8F 		isb 0xF
 1632              	@ 0 "" 2
 1633              	.LVL119:
ARM GAS  /tmp/ccM1xvf3.s 			page 110


 1634              		.thumb
 1635              		.syntax unified
 1636              	.L100:
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1637              		.loc 3 935 3 is_stmt 0 view .LVU453
 1638              	.LBE33:
 1639              	.LBE32:
 1640              	.LBE27:
 1641              	.LBE26:
 1642              	.LBE25:
 779:../../CM7/LWIP/Target/ethernetif.c **** 
 780:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END HAL ETH RxLinkCallback */
 781:../../CM7/LWIP/Target/ethernetif.c **** }
 1643              		.loc 1 781 1 view .LVU454
 1644 0056 30BC     		pop	{r4, r5}
 1645              	.LCFI33:
 1646              		.cfi_restore 5
 1647              		.cfi_restore 4
 1648              		.cfi_def_cfa_offset 0
 1649              	.LVL120:
 1650              		.loc 1 781 1 view .LVU455
 1651 0058 7047     		bx	lr
 1652              	.L110:
 1653 005a 00BF     		.align	2
 1654              	.L109:
 1655 005c 00ED00E0 		.word	-536810240
 1656              		.cfi_endproc
 1657              	.LFE186:
 1659              		.section	.text.HAL_ETH_TxFreeCallback,"ax",%progbits
 1660              		.align	1
 1661              		.global	HAL_ETH_TxFreeCallback
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1666              	HAL_ETH_TxFreeCallback:
 1667              	.LVL121:
 1668              	.LFB187:
 782:../../CM7/LWIP/Target/ethernetif.c **** 
 783:../../CM7/LWIP/Target/ethernetif.c **** void HAL_ETH_TxFreeCallback(uint32_t * buff)
 784:../../CM7/LWIP/Target/ethernetif.c **** {
 1669              		.loc 1 784 1 is_stmt 1 view -0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 0, uses_anonymous_args = 0
 1673              		.loc 1 784 1 is_stmt 0 view .LVU457
 1674 0000 08B5     		push	{r3, lr}
 1675              	.LCFI34:
 1676              		.cfi_def_cfa_offset 8
 1677              		.cfi_offset 3, -8
 1678              		.cfi_offset 14, -4
 785:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE BEGIN HAL ETH TxFreeCallback */
 786:../../CM7/LWIP/Target/ethernetif.c **** 
 787:../../CM7/LWIP/Target/ethernetif.c ****   pbuf_free((struct pbuf *)buff);
 1679              		.loc 1 787 3 is_stmt 1 view .LVU458
 1680 0002 FFF7FEFF 		bl	pbuf_free
 1681              	.LVL122:
 788:../../CM7/LWIP/Target/ethernetif.c **** 
ARM GAS  /tmp/ccM1xvf3.s 			page 111


 789:../../CM7/LWIP/Target/ethernetif.c **** /* USER CODE END HAL ETH TxFreeCallback */
 790:../../CM7/LWIP/Target/ethernetif.c **** }
 1682              		.loc 1 790 1 is_stmt 0 view .LVU459
 1683 0006 08BD     		pop	{r3, pc}
 1684              		.cfi_endproc
 1685              	.LFE187:
 1687              		.global	LAN8742_IOCtx
 1688              		.section	.data.LAN8742_IOCtx,"aw"
 1689              		.align	2
 1692              	LAN8742_IOCtx:
 1693 0000 00000000 		.word	ETH_PHY_IO_Init
 1694 0004 00000000 		.word	ETH_PHY_IO_DeInit
 1695 0008 00000000 		.word	ETH_PHY_IO_WriteReg
 1696 000c 00000000 		.word	ETH_PHY_IO_ReadReg
 1697 0010 00000000 		.word	ETH_PHY_IO_GetTick
 1698              		.global	LAN8742
 1699              		.section	.bss.LAN8742,"aw",%nobits
 1700              		.align	2
 1703              	LAN8742:
 1704 0000 00000000 		.space	32
 1704      00000000 
 1704      00000000 
 1704      00000000 
 1704      00000000 
 1705              		.global	TxConfig
 1706              		.section	.bss.TxConfig,"aw",%nobits
 1707              		.align	2
 1710              	TxConfig:
 1711 0000 00000000 		.space	56
 1711      00000000 
 1711      00000000 
 1711      00000000 
 1711      00000000 
 1712              		.global	heth
 1713              		.section	.bss.heth,"aw",%nobits
 1714              		.align	2
 1717              	heth:
 1718 0000 00000000 		.space	176
 1718      00000000 
 1718      00000000 
 1718      00000000 
 1718      00000000 
 1719              		.global	DMATxDscrTab
 1720              		.section	.TxDecripSection,"aw"
 1721              		.align	2
 1724              	DMATxDscrTab:
 1725 0000 00000000 		.space	96
 1725      00000000 
 1725      00000000 
 1725      00000000 
 1725      00000000 
 1726              		.global	DMARxDscrTab
 1727              		.section	.RxDecripSection,"aw"
 1728              		.align	2
 1731              	DMARxDscrTab:
 1732 0000 00000000 		.space	96
 1732      00000000 
ARM GAS  /tmp/ccM1xvf3.s 			page 112


 1732      00000000 
 1732      00000000 
 1732      00000000 
 1733              		.section	.bss.RxAllocStatus,"aw",%nobits
 1736              	RxAllocStatus:
 1737 0000 00       		.space	1
 1738              		.global	memp_RX_POOL
 1739              		.section	.rodata.memp_RX_POOL,"a"
 1740              		.align	2
 1743              	memp_RX_POOL:
 1744 0000 2006     		.short	1568
 1745 0002 0C00     		.short	12
 1746 0004 00000000 		.word	memp_memory_RX_POOL_base
 1747 0008 00000000 		.word	memp_tab_RX_POOL
 1748              		.section	.bss.memp_tab_RX_POOL,"aw",%nobits
 1749              		.align	2
 1752              	memp_tab_RX_POOL:
 1753 0000 00000000 		.space	4
 1754              		.global	memp_memory_RX_POOL_base
 1755              		.section	.Rx_PoolSection,"aw"
 1756              		.align	2
 1759              	memp_memory_RX_POOL_base:
 1760 0000 00000000 		.space	18819
 1760      00000000 
 1760      00000000 
 1760      00000000 
 1760      00000000 
 1761              		.text
 1762              	.Letext0:
 1763              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1764              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1765              		.file 6 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h755xx.h"
 1766              		.file 7 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1767              		.file 8 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1768              		.file 9 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1769              		.file 10 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_eth.h"
 1770              		.file 11 "../../Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1771              		.file 12 "../../Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1772              		.file 13 "../../Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1773              		.file 14 "../../Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1774              		.file 15 "../../Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1775              		.file 16 "../../Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1776              		.file 17 "../../Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1777              		.file 18 "../../Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1778              		.file 19 "../../Drivers/BSP/Components/lan8742/lan8742.h"
 1779              		.file 20 "/usr/arm-none-eabi/include/string.h"
 1780              		.file 21 "../../Middlewares/Third_Party/LwIP/src/include/lwip/etharp.h"
 1781              		.file 22 "/usr/arm-none-eabi/include/stdio.h"
 1782              		.file 23 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1783              		.file 24 "../../CM7/LWIP/Target/ethernetif.h"
 1784              		.file 25 "<built-in>"
ARM GAS  /tmp/ccM1xvf3.s 			page 113


DEFINED SYMBOLS
                            *ABS*:00000000 ethernetif.c
     /tmp/ccM1xvf3.s:20     .text.ETH_PHY_IO_DeInit:00000000 $t
     /tmp/ccM1xvf3.s:26     .text.ETH_PHY_IO_DeInit:00000000 ETH_PHY_IO_DeInit
     /tmp/ccM1xvf3.s:41     .text.low_level_input:00000000 $t
     /tmp/ccM1xvf3.s:46     .text.low_level_input:00000000 low_level_input
     /tmp/ccM1xvf3.s:97     .text.low_level_input:00000020 $d
     /tmp/ccM1xvf3.s:1736   .bss.RxAllocStatus:00000000 RxAllocStatus
     /tmp/ccM1xvf3.s:1717   .bss.heth:00000000 heth
     /tmp/ccM1xvf3.s:103    .text.low_level_output:00000000 $t
     /tmp/ccM1xvf3.s:108    .text.low_level_output:00000000 low_level_output
     /tmp/ccM1xvf3.s:257    .text.low_level_output:00000094 $d
     /tmp/ccM1xvf3.s:1710   .bss.TxConfig:00000000 TxConfig
     /tmp/ccM1xvf3.s:263    .text.pbuf_free_custom:00000000 $t
     /tmp/ccM1xvf3.s:269    .text.pbuf_free_custom:00000000 pbuf_free_custom
     /tmp/ccM1xvf3.s:312    .text.pbuf_free_custom:0000001c $d
     /tmp/ccM1xvf3.s:1743   .rodata.memp_RX_POOL:00000000 memp_RX_POOL
     /tmp/ccM1xvf3.s:318    .text.ETH_PHY_IO_GetTick:00000000 $t
     /tmp/ccM1xvf3.s:324    .text.ETH_PHY_IO_GetTick:00000000 ETH_PHY_IO_GetTick
     /tmp/ccM1xvf3.s:345    .text.ETH_PHY_IO_Init:00000000 $t
     /tmp/ccM1xvf3.s:351    .text.ETH_PHY_IO_Init:00000000 ETH_PHY_IO_Init
     /tmp/ccM1xvf3.s:373    .text.ETH_PHY_IO_Init:0000000c $d
     /tmp/ccM1xvf3.s:378    .text.ETH_PHY_IO_ReadReg:00000000 $t
     /tmp/ccM1xvf3.s:384    .text.ETH_PHY_IO_ReadReg:00000000 ETH_PHY_IO_ReadReg
     /tmp/ccM1xvf3.s:423    .text.ETH_PHY_IO_ReadReg:00000018 $d
     /tmp/ccM1xvf3.s:428    .text.ETH_PHY_IO_WriteReg:00000000 $t
     /tmp/ccM1xvf3.s:434    .text.ETH_PHY_IO_WriteReg:00000000 ETH_PHY_IO_WriteReg
     /tmp/ccM1xvf3.s:473    .text.ETH_PHY_IO_WriteReg:00000018 $d
     /tmp/ccM1xvf3.s:478    .text.ethernetif_input:00000000 $t
     /tmp/ccM1xvf3.s:484    .text.ethernetif_input:00000000 ethernetif_input
     /tmp/ccM1xvf3.s:544    .text.sys_now:00000000 $t
     /tmp/ccM1xvf3.s:550    .text.sys_now:00000000 sys_now
     /tmp/ccM1xvf3.s:571    .text.HAL_ETH_MspInit:00000000 $t
     /tmp/ccM1xvf3.s:577    .text.HAL_ETH_MspInit:00000000 HAL_ETH_MspInit
     /tmp/ccM1xvf3.s:821    .text.HAL_ETH_MspInit:00000120 $d
     /tmp/ccM1xvf3.s:831    .text.HAL_ETH_MspDeInit:00000000 $t
     /tmp/ccM1xvf3.s:837    .text.HAL_ETH_MspDeInit:00000000 HAL_ETH_MspDeInit
     /tmp/ccM1xvf3.s:903    .text.HAL_ETH_MspDeInit:00000058 $d
     /tmp/ccM1xvf3.s:913    .text.ethernet_link_check_state:00000000 $t
     /tmp/ccM1xvf3.s:919    .text.ethernet_link_check_state:00000000 ethernet_link_check_state
     /tmp/ccM1xvf3.s:981    .text.ethernet_link_check_state:0000003c $d
     /tmp/ccM1xvf3.s:985    .text.ethernet_link_check_state:0000004c $t
     /tmp/ccM1xvf3.s:1085   .text.ethernet_link_check_state:000000b4 $d
     /tmp/ccM1xvf3.s:1703   .bss.LAN8742:00000000 LAN8742
     /tmp/ccM1xvf3.s:1091   .text.low_level_init:00000000 $t
     /tmp/ccM1xvf3.s:1096   .text.low_level_init:00000000 low_level_init
     /tmp/ccM1xvf3.s:1288   .text.low_level_init:000000e0 $d
     /tmp/ccM1xvf3.s:1724   .TxDecripSection:00000000 DMATxDscrTab
     /tmp/ccM1xvf3.s:1731   .RxDecripSection:00000000 DMARxDscrTab
     /tmp/ccM1xvf3.s:1692   .data.LAN8742_IOCtx:00000000 LAN8742_IOCtx
     /tmp/ccM1xvf3.s:1300   .rodata.ethernetif_init.str1.4:00000000 $d
     /tmp/ccM1xvf3.s:1310   .text.ethernetif_init:00000000 $t
     /tmp/ccM1xvf3.s:1316   .text.ethernetif_init:00000000 ethernetif_init
     /tmp/ccM1xvf3.s:1377   .text.ethernetif_init:00000034 $d
     /tmp/ccM1xvf3.s:1386   .text.HAL_ETH_RxAllocateCallback:00000000 $t
     /tmp/ccM1xvf3.s:1392   .text.HAL_ETH_RxAllocateCallback:00000000 HAL_ETH_RxAllocateCallback
     /tmp/ccM1xvf3.s:1467   .text.HAL_ETH_RxAllocateCallback:00000040 $d
ARM GAS  /tmp/ccM1xvf3.s 			page 114


     /tmp/ccM1xvf3.s:1474   .text.HAL_ETH_RxLinkCallback:00000000 $t
     /tmp/ccM1xvf3.s:1480   .text.HAL_ETH_RxLinkCallback:00000000 HAL_ETH_RxLinkCallback
     /tmp/ccM1xvf3.s:1655   .text.HAL_ETH_RxLinkCallback:0000005c $d
     /tmp/ccM1xvf3.s:1660   .text.HAL_ETH_TxFreeCallback:00000000 $t
     /tmp/ccM1xvf3.s:1666   .text.HAL_ETH_TxFreeCallback:00000000 HAL_ETH_TxFreeCallback
     /tmp/ccM1xvf3.s:1689   .data.LAN8742_IOCtx:00000000 $d
     /tmp/ccM1xvf3.s:1700   .bss.LAN8742:00000000 $d
     /tmp/ccM1xvf3.s:1707   .bss.TxConfig:00000000 $d
     /tmp/ccM1xvf3.s:1714   .bss.heth:00000000 $d
     /tmp/ccM1xvf3.s:1721   .TxDecripSection:00000000 $d
     /tmp/ccM1xvf3.s:1728   .RxDecripSection:00000000 $d
     /tmp/ccM1xvf3.s:1737   .bss.RxAllocStatus:00000000 $d
     /tmp/ccM1xvf3.s:1740   .rodata.memp_RX_POOL:00000000 $d
     /tmp/ccM1xvf3.s:1759   .Rx_PoolSection:00000000 memp_memory_RX_POOL_base
     /tmp/ccM1xvf3.s:1752   .bss.memp_tab_RX_POOL:00000000 memp_tab_RX_POOL
     /tmp/ccM1xvf3.s:1749   .bss.memp_tab_RX_POOL:00000000 $d
     /tmp/ccM1xvf3.s:1756   .Rx_PoolSection:00000000 $d

UNDEFINED SYMBOLS
HAL_ETH_ReadData
memset
HAL_ETH_Transmit
memp_free_pool
HAL_GetTick
HAL_ETH_SetMDIOClockRange
HAL_ETH_ReadPHYRegister
HAL_ETH_WritePHYRegister
pbuf_free
HAL_GPIO_Init
HAL_GPIO_DeInit
LAN8742_GetLinkState
HAL_ETH_Stop
netif_set_down
netif_set_link_down
HAL_ETH_GetMACConfig
HAL_ETH_SetMACConfig
HAL_ETH_Start
netif_set_up
netif_set_link_up
HAL_ETH_Init
memp_init_pool
LAN8742_RegisterBusIO
LAN8742_Init
Error_Handler
printf
etharp_output
memp_malloc_pool
pbuf_alloced_custom
